!function t(e, i, n) {
    function r(o, s) {
        if (!i[o]) {
            if (!e[o]) {
                var l = "function" == typeof require && require;
                if (!s && l)
                    return l(o, !0);
                if (a)
                    return a(o, !0);
                var h = new Error("Cannot find module '" + o + "'");
                throw h.code = "MODULE_NOT_FOUND",
                h
            }
            var c = i[o] = {
                exports: {}
            };
            e[o][0].call(c.exports, function(t) {
                var i = e[o][1][t];
                return r(i ? i : t)
            }, c, c.exports, t, e, i, n)
        }
        return i[o].exports
    }
    for (var a = "function" == typeof require && require, o = 0; o < n.length; o++)
        r(n[o]);
    return r
}({
    1: [function(t, e, i) {
        (function(t) {
            /*!
 * VERSION: 1.19.0
 * DATE: 2016-07-16
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
            !function(t, i) {
                "use strict";
                var n = {}
                  , r = t.GreenSockGlobals = t.GreenSockGlobals || t;
                if (!r.TweenLite) {
                    var a, o, s, l, h, c = function(t) {
                        var e, i = t.split("."), n = r;
                        for (e = 0; e < i.length; e++)
                            n[i[e]] = n = n[i[e]] || {};
                        return n
                    }, u = c("com.greensock"), p = 1e-10, f = function(t) {
                        var e, i = [], n = t.length;
                        for (e = 0; e !== n; i.push(t[e++]))
                            ;
                        return i
                    }, d = function() {}, m = function() {
                        var t = Object.prototype.toString
                          , e = t.call([]);
                        return function(i) {
                            return null != i && (i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e)
                        }
                    }(), g = {}, v = function(a, o, s, l) {
                        this.sc = g[a] ? g[a].sc : [],
                        g[a] = this,
                        this.gsClass = null,
                        this.func = s;
                        var h = [];
                        this.check = function(u) {
                            for (var p, f, d, m, y, _ = o.length, x = _; --_ > -1; )
                                (p = g[o[_]] || new v(o[_],[])).gsClass ? (h[_] = p.gsClass,
                                x--) : u && p.sc.push(this);
                            if (0 === x && s) {
                                if (f = ("com.greensock." + a).split("."),
                                d = f.pop(),
                                m = c(f.join("."))[d] = this.gsClass = s.apply(s, h),
                                l)
                                    if (r[d] = n[d] = m,
                                    y = "undefined" != typeof e && e.exports,
                                    !y && "function" == typeof define && define.amd)
                                        define((t.GreenSockAMDPath ? t.GreenSockAMDPath + "/" : "") + a.split(".").pop(), [], function() {
                                            return m
                                        });
                                    else if (y)
                                        if (a === i) {
                                            e.exports = n[i] = m;
                                            for (_ in n)
                                                m[_] = n[_]
                                        } else
                                            n[i] && (n[i][d] = m);
                                for (_ = 0; _ < this.sc.length; _++)
                                    this.sc[_].check()
                            }
                        }
                        ,
                        this.check(!0)
                    }, y = t._gsDefine = function(t, e, i, n) {
                        return new v(t,e,i,n)
                    }
                    , _ = u._class = function(t, e, i) {
                        return e = e || function() {}
                        ,
                        y(t, [], function() {
                            return e
                        }, i),
                        e
                    }
                    ;
                    y.globals = r;
                    var x = [0, 0, 1, 1]
                      , b = _("easing.Ease", function(t, e, i, n) {
                        this._func = t,
                        this._type = i || 0,
                        this._power = n || 0,
                        this._params = e ? x.concat(e) : x
                    }, !0)
                      , w = b.map = {}
                      , M = b.register = function(t, e, i, n) {
                        for (var r, a, o, s, l = e.split(","), h = l.length, c = (i || "easeIn,easeOut,easeInOut").split(","); --h > -1; )
                            for (a = l[h],
                            r = n ? _("easing." + a, null, !0) : u.easing[a] || {},
                            o = c.length; --o > -1; )
                                s = c[o],
                                w[a + "." + s] = w[s + a] = r[s] = t.getRatio ? t : t[s] || new t
                    }
                    ;
                    for (s = b.prototype,
                    s._calcEnd = !1,
                    s.getRatio = function(t) {
                        if (this._func)
                            return this._params[0] = t,
                            this._func.apply(null, this._params);
                        var e = this._type
                          , i = this._power
                          , n = 1 === e ? 1 - t : 2 === e ? t : t < .5 ? 2 * t : 2 * (1 - t);
                        return 1 === i ? n *= n : 2 === i ? n *= n * n : 3 === i ? n *= n * n * n : 4 === i && (n *= n * n * n * n),
                        1 === e ? 1 - n : 2 === e ? n : t < .5 ? n / 2 : 1 - n / 2
                    }
                    ,
                    a = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                    o = a.length; --o > -1; )
                        s = a[o] + ",Power" + o,
                        M(new b(null,null,1,o), s, "easeOut", !0),
                        M(new b(null,null,2,o), s, "easeIn" + (0 === o ? ",easeNone" : "")),
                        M(new b(null,null,3,o), s, "easeInOut");
                    w.linear = u.easing.Linear.easeIn,
                    w.swing = u.easing.Quad.easeInOut;
                    var T = _("events.EventDispatcher", function(t) {
                        this._listeners = {},
                        this._eventTarget = t || this
                    });
                    s = T.prototype,
                    s.addEventListener = function(t, e, i, n, r) {
                        r = r || 0;
                        var a, o, s = this._listeners[t], c = 0;
                        for (this !== l || h || l.wake(),
                        null == s && (this._listeners[t] = s = []),
                        o = s.length; --o > -1; )
                            a = s[o],
                            a.c === e && a.s === i ? s.splice(o, 1) : 0 === c && a.pr < r && (c = o + 1);
                        s.splice(c, 0, {
                            c: e,
                            s: i,
                            up: n,
                            pr: r
                        })
                    }
                    ,
                    s.removeEventListener = function(t, e) {
                        var i, n = this._listeners[t];
                        if (n)
                            for (i = n.length; --i > -1; )
                                if (n[i].c === e)
                                    return void n.splice(i, 1)
                    }
                    ,
                    s.dispatchEvent = function(t) {
                        var e, i, n, r = this._listeners[t];
                        if (r)
                            for (e = r.length,
                            e > 1 && (r = r.slice(0)),
                            i = this._eventTarget; --e > -1; )
                                n = r[e],
                                n && (n.up ? n.c.call(n.s || i, {
                                    type: t,
                                    target: i
                                }) : n.c.call(n.s || i))
                    }
                    ;
                    var S = t.requestAnimationFrame
                      , C = t.cancelAnimationFrame
                      , A = Date.now || function() {
                        return (new Date).getTime()
                    }
                      , P = A();
                    for (a = ["ms", "moz", "webkit", "o"],
                    o = a.length; --o > -1 && !S; )
                        S = t[a[o] + "RequestAnimationFrame"],
                        C = t[a[o] + "CancelAnimationFrame"] || t[a[o] + "CancelRequestAnimationFrame"];
                    _("Ticker", function(t, e) {
                        var i, n, r, a, o, s = this, c = A(), u = !(e === !1 || !S) && "auto", f = 500, m = 33, g = "tick", v = function(t) {
                            var e, l, h = A() - P;
                            h > f && (c += h - m),
                            P += h,
                            s.time = (P - c) / 1e3,
                            e = s.time - o,
                            (!i || e > 0 || t === !0) && (s.frame++,
                            o += e + (e >= a ? .004 : a - e),
                            l = !0),
                            t !== !0 && (r = n(v)),
                            l && s.dispatchEvent(g)
                        };
                        T.call(s),
                        s.time = s.frame = 0,
                        s.tick = function() {
                            v(!0)
                        }
                        ,
                        s.lagSmoothing = function(t, e) {
                            f = t || 1 / p,
                            m = Math.min(e, f, 0)
                        }
                        ,
                        s.sleep = function() {
                            null != r && (u && C ? C(r) : clearTimeout(r),
                            n = d,
                            r = null,
                            s === l && (h = !1))
                        }
                        ,
                        s.wake = function(t) {
                            null !== r ? s.sleep() : t ? c += -P + (P = A()) : s.frame > 10 && (P = A() - f + 5),
                            n = 0 === i ? d : u && S ? S : function(t) {
                                return setTimeout(t, 1e3 * (o - s.time) + 1 | 0)
                            }
                            ,
                            s === l && (h = !0),
                            v(2)
                        }
                        ,
                        s.fps = function(t) {
                            return arguments.length ? (i = t,
                            a = 1 / (i || 60),
                            o = this.time + a,
                            void s.wake()) : i
                        }
                        ,
                        s.useRAF = function(t) {
                            return arguments.length ? (s.sleep(),
                            u = t,
                            void s.fps(i)) : u
                        }
                        ,
                        s.fps(t),
                        setTimeout(function() {
                            "auto" === u && s.frame < 5 && "hidden" !== document.visibilityState && s.useRAF(!1)
                        }, 1500)
                    }),
                    s = u.Ticker.prototype = new u.events.EventDispatcher,
                    s.constructor = u.Ticker;
                    var E = _("core.Animation", function(t, e) {
                        if (this.vars = e = e || {},
                        this._duration = this._totalDuration = t || 0,
                        this._delay = Number(e.delay) || 0,
                        this._timeScale = 1,
                        this._active = e.immediateRender === !0,
                        this.data = e.data,
                        this._reversed = e.reversed === !0,
                        Y) {
                            h || l.wake();
                            var i = this.vars.useFrames ? q : Y;
                            i.add(this, i._time),
                            this.vars.paused && this.paused(!0)
                        }
                    });
                    l = E.ticker = new u.Ticker,
                    s = E.prototype,
                    s._dirty = s._gc = s._initted = s._paused = !1,
                    s._totalTime = s._time = 0,
                    s._rawPrevTime = -1,
                    s._next = s._last = s._onUpdate = s._timeline = s.timeline = null,
                    s._paused = !1;
                    var L = function() {
                        h && A() - P > 2e3 && l.wake(),
                        setTimeout(L, 2e3)
                    };
                    L(),
                    s.play = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.reversed(!1).paused(!1)
                    }
                    ,
                    s.pause = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.paused(!0)
                    }
                    ,
                    s.resume = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.paused(!1)
                    }
                    ,
                    s.seek = function(t, e) {
                        return this.totalTime(Number(t), e !== !1)
                    }
                    ,
                    s.restart = function(t, e) {
                        return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, e !== !1, !0)
                    }
                    ,
                    s.reverse = function(t, e) {
                        return null != t && this.seek(t || this.totalDuration(), e),
                        this.reversed(!0).paused(!1)
                    }
                    ,
                    s.render = function(t, e, i) {}
                    ,
                    s.invalidate = function() {
                        return this._time = this._totalTime = 0,
                        this._initted = this._gc = !1,
                        this._rawPrevTime = -1,
                        !this._gc && this.timeline || this._enabled(!0),
                        this
                    }
                    ,
                    s.isActive = function() {
                        var t, e = this._timeline, i = this._startTime;
                        return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= i && t < i + this.totalDuration() / this._timeScale
                    }
                    ,
                    s._enabled = function(t, e) {
                        return h || l.wake(),
                        this._gc = !t,
                        this._active = this.isActive(),
                        e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
                        !1
                    }
                    ,
                    s._kill = function(t, e) {
                        return this._enabled(!1, !1)
                    }
                    ,
                    s.kill = function(t, e) {
                        return this._kill(t, e),
                        this
                    }
                    ,
                    s._uncache = function(t) {
                        for (var e = t ? this : this.timeline; e; )
                            e._dirty = !0,
                            e = e.timeline;
                        return this
                    }
                    ,
                    s._swapSelfInParams = function(t) {
                        for (var e = t.length, i = t.concat(); --e > -1; )
                            "{self}" === t[e] && (i[e] = this);
                        return i
                    }
                    ,
                    s._callback = function(t) {
                        var e = this.vars
                          , i = e[t]
                          , n = e[t + "Params"]
                          , r = e[t + "Scope"] || e.callbackScope || this
                          , a = n ? n.length : 0;
                        switch (a) {
                        case 0:
                            i.call(r);
                            break;
                        case 1:
                            i.call(r, n[0]);
                            break;
                        case 2:
                            i.call(r, n[0], n[1]);
                            break;
                        default:
                            i.apply(r, n)
                        }
                    }
                    ,
                    s.eventCallback = function(t, e, i, n) {
                        if ("on" === (t || "").substr(0, 2)) {
                            var r = this.vars;
                            if (1 === arguments.length)
                                return r[t];
                            null == e ? delete r[t] : (r[t] = e,
                            r[t + "Params"] = m(i) && i.join("").indexOf("{self}") !== -1 ? this._swapSelfInParams(i) : i,
                            r[t + "Scope"] = n),
                            "onUpdate" === t && (this._onUpdate = e)
                        }
                        return this
                    }
                    ,
                    s.delay = function(t) {
                        return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay),
                        this._delay = t,
                        this) : this._delay
                    }
                    ,
                    s.duration = function(t) {
                        return arguments.length ? (this._duration = this._totalDuration = t,
                        this._uncache(!0),
                        this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
                        this) : (this._dirty = !1,
                        this._duration)
                    }
                    ,
                    s.totalDuration = function(t) {
                        return this._dirty = !1,
                        arguments.length ? this.duration(t) : this._totalDuration
                    }
                    ,
                    s.time = function(t, e) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
                    }
                    ,
                    s.totalTime = function(t, e, i) {
                        if (h || l.wake(),
                        !arguments.length)
                            return this._totalTime;
                        if (this._timeline) {
                            if (t < 0 && !i && (t += this.totalDuration()),
                            this._timeline.smoothChildTiming) {
                                this._dirty && this.totalDuration();
                                var n = this._totalDuration
                                  , r = this._timeline;
                                if (t > n && !i && (t = n),
                                this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? n - t : t) / this._timeScale,
                                r._dirty || this._uncache(!1),
                                r._timeline)
                                    for (; r._timeline; )
                                        r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0),
                                        r = r._timeline
                            }
                            this._gc && this._enabled(!0, !1),
                            this._totalTime === t && 0 !== this._duration || (k.length && $(),
                            this.render(t, e, !1),
                            k.length && $())
                        }
                        return this
                    }
                    ,
                    s.progress = s.totalProgress = function(t, e) {
                        var i = this.duration();
                        return arguments.length ? this.totalTime(i * t, e) : i ? this._time / i : this.ratio
                    }
                    ,
                    s.startTime = function(t) {
                        return arguments.length ? (t !== this._startTime && (this._startTime = t,
                        this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)),
                        this) : this._startTime
                    }
                    ,
                    s.endTime = function(t) {
                        return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale
                    }
                    ,
                    s.timeScale = function(t) {
                        if (!arguments.length)
                            return this._timeScale;
                        if (t = t || p,
                        this._timeline && this._timeline.smoothChildTiming) {
                            var e = this._pauseTime
                              , i = e || 0 === e ? e : this._timeline.totalTime();
                            this._startTime = i - (i - this._startTime) * this._timeScale / t
                        }
                        return this._timeScale = t,
                        this._uncache(!1)
                    }
                    ,
                    s.reversed = function(t) {
                        return arguments.length ? (t != this._reversed && (this._reversed = t,
                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                        this) : this._reversed
                    }
                    ,
                    s.paused = function(t) {
                        if (!arguments.length)
                            return this._paused;
                        var e, i, n = this._timeline;
                        return t != this._paused && n && (h || t || l.wake(),
                        e = n.rawTime(),
                        i = e - this._pauseTime,
                        !t && n.smoothChildTiming && (this._startTime += i,
                        this._uncache(!1)),
                        this._pauseTime = t ? e : null,
                        this._paused = t,
                        this._active = this.isActive(),
                        !t && 0 !== i && this._initted && this.duration() && (e = n.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale,
                        this.render(e, e === this._totalTime, !0))),
                        this._gc && !t && this._enabled(!0, !1),
                        this
                    }
                    ;
                    var O = _("core.SimpleTimeline", function(t) {
                        E.call(this, 0, t),
                        this.autoRemoveChildren = this.smoothChildTiming = !0
                    });
                    s = O.prototype = new E,
                    s.constructor = O,
                    s.kill()._gc = !1,
                    s._first = s._last = s._recent = null,
                    s._sortChildren = !1,
                    s.add = s.insert = function(t, e, i, n) {
                        var r, a;
                        if (t._startTime = Number(e || 0) + t._delay,
                        t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
                        t.timeline && t.timeline._remove(t, !0),
                        t.timeline = t._timeline = this,
                        t._gc && t._enabled(!0, !0),
                        r = this._last,
                        this._sortChildren)
                            for (a = t._startTime; r && r._startTime > a; )
                                r = r._prev;
                        return r ? (t._next = r._next,
                        r._next = t) : (t._next = this._first,
                        this._first = t),
                        t._next ? t._next._prev = t : this._last = t,
                        t._prev = r,
                        this._recent = t,
                        this._timeline && this._uncache(!0),
                        this
                    }
                    ,
                    s._remove = function(t, e) {
                        return t.timeline === this && (e || t._enabled(!1, !0),
                        t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next),
                        t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev),
                        t._next = t._prev = t.timeline = null,
                        t === this._recent && (this._recent = this._last),
                        this._timeline && this._uncache(!0)),
                        this
                    }
                    ,
                    s.render = function(t, e, i) {
                        var n, r = this._first;
                        for (this._totalTime = this._time = this._rawPrevTime = t; r; )
                            n = r._next,
                            (r._active || t >= r._startTime && !r._paused) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                            r = n
                    }
                    ,
                    s.rawTime = function() {
                        return h || l.wake(),
                        this._totalTime
                    }
                    ;
                    var R = _("TweenLite", function(e, i, n) {
                        if (E.call(this, i, n),
                        this.render = R.prototype.render,
                        null == e)
                            throw "Cannot tween a null target.";
                        this.target = e = "string" != typeof e ? e : R.selector(e) || e;
                        var r, a, o, s = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType), l = this.vars.overwrite;
                        if (this._overwrite = l = null == l ? X[R.defaultOverwrite] : "number" == typeof l ? l >> 0 : X[l],
                        (s || e instanceof Array || e.push && m(e)) && "number" != typeof e[0])
                            for (this._targets = o = f(e),
                            this._propLookup = [],
                            this._siblings = [],
                            r = 0; r < o.length; r++)
                                a = o[r],
                                a ? "string" != typeof a ? a.length && a !== t && a[0] && (a[0] === t || a[0].nodeType && a[0].style && !a.nodeType) ? (o.splice(r--, 1),
                                this._targets = o = o.concat(f(a))) : (this._siblings[r] = K(a, this, !1),
                                1 === l && this._siblings[r].length > 1 && J(a, this, null, 1, this._siblings[r])) : (a = o[r--] = R.selector(a),
                                "string" == typeof a && o.splice(r + 1, 1)) : o.splice(r--, 1);
                        else
                            this._propLookup = {},
                            this._siblings = K(e, this, !1),
                            1 === l && this._siblings.length > 1 && J(e, this, null, 1, this._siblings);
                        (this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -p,
                        this.render(Math.min(0, -this._delay)))
                    }, !0)
                      , D = function(e) {
                        return e && e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType)
                    }
                      , I = function(t, e) {
                        var i, n = {};
                        for (i in t)
                            W[i] || i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!V[i] || V[i] && V[i]._autoCSS) || (n[i] = t[i],
                            delete t[i]);
                        t.css = n
                    };
                    s = R.prototype = new E,
                    s.constructor = R,
                    s.kill()._gc = !1,
                    s.ratio = 0,
                    s._firstPT = s._targets = s._overwrittenProps = s._startAt = null,
                    s._notifyPluginsOfEnabled = s._lazy = !1,
                    R.version = "1.19.0",
                    R.defaultEase = s._ease = new b(null,null,1,1),
                    R.defaultOverwrite = "auto",
                    R.ticker = l,
                    R.autoSleep = 120,
                    R.lagSmoothing = function(t, e) {
                        l.lagSmoothing(t, e)
                    }
                    ,
                    R.selector = t.$ || t.jQuery || function(e) {
                        var i = t.$ || t.jQuery;
                        return i ? (R.selector = i,
                        i(e)) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e)
                    }
                    ;
                    var k = []
                      , N = {}
                      , F = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                      , B = function(t) {
                        for (var e, i = this._firstPT, n = 1e-6; i; )
                            e = i.blob ? t ? this.join("") : this.start : i.c * t + i.s,
                            i.m ? e = i.m(e, this._target || i.t) : e < n && e > -n && (e = 0),
                            i.f ? i.fp ? i.t[i.p](i.fp, e) : i.t[i.p](e) : i.t[i.p] = e,
                            i = i._next
                    }
                      , U = function(t, e, i, n) {
                        var r, a, o, s, l, h, c, u = [t, e], p = 0, f = "", d = 0;
                        for (u.start = t,
                        i && (i(u),
                        t = u[0],
                        e = u[1]),
                        u.length = 0,
                        r = t.match(F) || [],
                        a = e.match(F) || [],
                        n && (n._next = null,
                        n.blob = 1,
                        u._firstPT = u._applyPT = n),
                        l = a.length,
                        s = 0; s < l; s++)
                            c = a[s],
                            h = e.substr(p, e.indexOf(c, p) - p),
                            f += h || !s ? h : ",",
                            p += h.length,
                            d ? d = (d + 1) % 5 : "rgba(" === h.substr(-5) && (d = 1),
                            c === r[s] || r.length <= s ? f += c : (f && (u.push(f),
                            f = ""),
                            o = parseFloat(r[s]),
                            u.push(o),
                            u._firstPT = {
                                _next: u._firstPT,
                                t: u,
                                p: u.length - 1,
                                s: o,
                                c: ("=" === c.charAt(1) ? parseInt(c.charAt(0) + "1", 10) * parseFloat(c.substr(2)) : parseFloat(c) - o) || 0,
                                f: 0,
                                m: d && d < 4 ? Math.round : 0
                            }),
                            p += c.length;
                        return f += e.substr(p),
                        f && u.push(f),
                        u.setRatio = B,
                        u
                    }
                      , z = function(t, e, i, n, r, a, o, s, l) {
                        "function" == typeof n && (n = n(l || 0, t));
                        var h, c, u = "get" === i ? t[e] : i, p = typeof t[e], f = "string" == typeof n && "=" === n.charAt(1), d = {
                            t: t,
                            p: e,
                            s: u,
                            f: "function" === p,
                            pg: 0,
                            n: r || e,
                            m: a ? "function" == typeof a ? a : Math.round : 0,
                            pr: 0,
                            c: f ? parseInt(n.charAt(0) + "1", 10) * parseFloat(n.substr(2)) : parseFloat(n) - u || 0
                        };
                        if ("number" !== p && ("function" === p && "get" === i && (c = e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3),
                        d.s = u = o ? t[c](o) : t[c]()),
                        "string" == typeof u && (o || isNaN(u)) ? (d.fp = o,
                        h = U(u, n, s || R.defaultStringFilter, d),
                        d = {
                            t: h,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 2,
                            pg: 0,
                            n: r || e,
                            pr: 0,
                            m: 0
                        }) : f || (d.s = parseFloat(u),
                        d.c = parseFloat(n) - d.s || 0)),
                        d.c)
                            return (d._next = this._firstPT) && (d._next._prev = d),
                            this._firstPT = d,
                            d
                    }
                      , j = R._internals = {
                        isArray: m,
                        isSelector: D,
                        lazyTweens: k,
                        blobDif: U
                    }
                      , V = R._plugins = {}
                      , G = j.tweenLookup = {}
                      , H = 0
                      , W = j.reservedProps = {
                        ease: 1,
                        delay: 1,
                        overwrite: 1,
                        onComplete: 1,
                        onCompleteParams: 1,
                        onCompleteScope: 1,
                        useFrames: 1,
                        runBackwards: 1,
                        startAt: 1,
                        onUpdate: 1,
                        onUpdateParams: 1,
                        onUpdateScope: 1,
                        onStart: 1,
                        onStartParams: 1,
                        onStartScope: 1,
                        onReverseComplete: 1,
                        onReverseCompleteParams: 1,
                        onReverseCompleteScope: 1,
                        onRepeat: 1,
                        onRepeatParams: 1,
                        onRepeatScope: 1,
                        easeParams: 1,
                        yoyo: 1,
                        immediateRender: 1,
                        repeat: 1,
                        repeatDelay: 1,
                        data: 1,
                        paused: 1,
                        reversed: 1,
                        autoCSS: 1,
                        lazy: 1,
                        onOverwrite: 1,
                        callbackScope: 1,
                        stringFilter: 1,
                        id: 1
                    }
                      , X = {
                        none: 0,
                        all: 1,
                        auto: 2,
                        concurrent: 3,
                        allOnStart: 4,
                        preexisting: 5,
                        "true": 1,
                        "false": 0
                    }
                      , q = E._rootFramesTimeline = new O
                      , Y = E._rootTimeline = new O
                      , Z = 30
                      , $ = j.lazyRender = function() {
                        var t, e = k.length;
                        for (N = {}; --e > -1; )
                            t = k[e],
                            t && t._lazy !== !1 && (t.render(t._lazy[0], t._lazy[1], !0),
                            t._lazy = !1);
                        k.length = 0
                    }
                    ;
                    Y._startTime = l.time,
                    q._startTime = l.frame,
                    Y._active = q._active = !0,
                    setTimeout($, 1),
                    E._updateRoot = R.render = function() {
                        var t, e, i;
                        if (k.length && $(),
                        Y.render((l.time - Y._startTime) * Y._timeScale, !1, !1),
                        q.render((l.frame - q._startTime) * q._timeScale, !1, !1),
                        k.length && $(),
                        l.frame >= Z) {
                            Z = l.frame + (parseInt(R.autoSleep, 10) || 120);
                            for (i in G) {
                                for (e = G[i].tweens,
                                t = e.length; --t > -1; )
                                    e[t]._gc && e.splice(t, 1);
                                0 === e.length && delete G[i]
                            }
                            if (i = Y._first,
                            (!i || i._paused) && R.autoSleep && !q._first && 1 === l._listeners.tick.length) {
                                for (; i && i._paused; )
                                    i = i._next;
                                i || l.sleep()
                            }
                        }
                    }
                    ,
                    l.addEventListener("tick", E._updateRoot);
                    var K = function(t, e, i) {
                        var n, r, a = t._gsTweenID;
                        if (G[a || (t._gsTweenID = a = "t" + H++)] || (G[a] = {
                            target: t,
                            tweens: []
                        }),
                        e && (n = G[a].tweens,
                        n[r = n.length] = e,
                        i))
                            for (; --r > -1; )
                                n[r] === e && n.splice(r, 1);
                        return G[a].tweens
                    }
                      , Q = function(t, e, i, n) {
                        var r, a, o = t.vars.onOverwrite;
                        return o && (r = o(t, e, i, n)),
                        o = R.onOverwrite,
                        o && (a = o(t, e, i, n)),
                        r !== !1 && a !== !1
                    }
                      , J = function(t, e, i, n, r) {
                        var a, o, s, l;
                        if (1 === n || n >= 4) {
                            for (l = r.length,
                            a = 0; a < l; a++)
                                if ((s = r[a]) !== e)
                                    s._gc || s._kill(null, t, e) && (o = !0);
                                else if (5 === n)
                                    break;
                            return o
                        }
                        var h, c = e._startTime + p, u = [], f = 0, d = 0 === e._duration;
                        for (a = r.length; --a > -1; )
                            (s = r[a]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (h = h || tt(e, 0, d),
                            0 === tt(s, h, d) && (u[f++] = s)) : s._startTime <= c && s._startTime + s.totalDuration() / s._timeScale > c && ((d || !s._initted) && c - s._startTime <= 2e-10 || (u[f++] = s)));
                        for (a = f; --a > -1; )
                            if (s = u[a],
                            2 === n && s._kill(i, t, e) && (o = !0),
                            2 !== n || !s._firstPT && s._initted) {
                                if (2 !== n && !Q(s, e))
                                    continue;
                                s._enabled(!1, !1) && (o = !0)
                            }
                        return o
                    }
                      , tt = function(t, e, i) {
                        for (var n = t._timeline, r = n._timeScale, a = t._startTime; n._timeline; ) {
                            if (a += n._startTime,
                            r *= n._timeScale,
                            n._paused)
                                return -100;
                            n = n._timeline
                        }
                        return a /= r,
                        a > e ? a - e : i && a === e || !t._initted && a - e < 2 * p ? p : (a += t.totalDuration() / t._timeScale / r) > e + p ? 0 : a - e - p
                    };
                    s._init = function() {
                        var t, e, i, n, r, a, o = this.vars, s = this._overwrittenProps, l = this._duration, h = !!o.immediateRender, c = o.ease;
                        if (o.startAt) {
                            this._startAt && (this._startAt.render(-1, !0),
                            this._startAt.kill()),
                            r = {};
                            for (n in o.startAt)
                                r[n] = o.startAt[n];
                            if (r.overwrite = !1,
                            r.immediateRender = !0,
                            r.lazy = h && o.lazy !== !1,
                            r.startAt = r.delay = null,
                            this._startAt = R.to(this.target, 0, r),
                            h)
                                if (this._time > 0)
                                    this._startAt = null;
                                else if (0 !== l)
                                    return
                        } else if (o.runBackwards && 0 !== l)
                            if (this._startAt)
                                this._startAt.render(-1, !0),
                                this._startAt.kill(),
                                this._startAt = null;
                            else {
                                0 !== this._time && (h = !1),
                                i = {};
                                for (n in o)
                                    W[n] && "autoCSS" !== n || (i[n] = o[n]);
                                if (i.overwrite = 0,
                                i.data = "isFromStart",
                                i.lazy = h && o.lazy !== !1,
                                i.immediateRender = h,
                                this._startAt = R.to(this.target, 0, i),
                                h) {
                                    if (0 === this._time)
                                        return
                                } else
                                    this._startAt._init(),
                                    this._startAt._enabled(!1),
                                    this.vars.immediateRender && (this._startAt = null)
                            }
                        if (this._ease = c = c ? c instanceof b ? c : "function" == typeof c ? new b(c,o.easeParams) : w[c] || R.defaultEase : R.defaultEase,
                        o.easeParams instanceof Array && c.config && (this._ease = c.config.apply(c, o.easeParams)),
                        this._easeType = this._ease._type,
                        this._easePower = this._ease._power,
                        this._firstPT = null,
                        this._targets)
                            for (a = this._targets.length,
                            t = 0; t < a; t++)
                                this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], s ? s[t] : null, t) && (e = !0);
                        else
                            e = this._initProps(this.target, this._propLookup, this._siblings, s, 0);
                        if (e && R._onPluginEvent("_onInitAllProps", this),
                        s && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                        o.runBackwards)
                            for (i = this._firstPT; i; )
                                i.s += i.c,
                                i.c = -i.c,
                                i = i._next;
                        this._onUpdate = o.onUpdate,
                        this._initted = !0
                    }
                    ,
                    s._initProps = function(e, i, n, r, a) {
                        var o, s, l, h, c, u;
                        if (null == e)
                            return !1;
                        N[e._gsTweenID] && $(),
                        this.vars.css || e.style && e !== t && e.nodeType && V.css && this.vars.autoCSS !== !1 && I(this.vars, e);
                        for (o in this.vars)
                            if (u = this.vars[o],
                            W[o])
                                u && (u instanceof Array || u.push && m(u)) && u.join("").indexOf("{self}") !== -1 && (this.vars[o] = u = this._swapSelfInParams(u, this));
                            else if (V[o] && (h = new V[o])._onInitTween(e, this.vars[o], this, a)) {
                                for (this._firstPT = c = {
                                    _next: this._firstPT,
                                    t: h,
                                    p: "setRatio",
                                    s: 0,
                                    c: 1,
                                    f: 1,
                                    n: o,
                                    pg: 1,
                                    pr: h._priority,
                                    m: 0
                                },
                                s = h._overwriteProps.length; --s > -1; )
                                    i[h._overwriteProps[s]] = this._firstPT;
                                (h._priority || h._onInitAllProps) && (l = !0),
                                (h._onDisable || h._onEnable) && (this._notifyPluginsOfEnabled = !0),
                                c._next && (c._next._prev = c)
                            } else
                                i[o] = z.call(this, e, o, "get", u, o, 0, null, this.vars.stringFilter, a);
                        return r && this._kill(r, e) ? this._initProps(e, i, n, r, a) : this._overwrite > 1 && this._firstPT && n.length > 1 && J(e, this, i, this._overwrite, n) ? (this._kill(i, e),
                        this._initProps(e, i, n, r, a)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (N[e._gsTweenID] = !0),
                        l)
                    }
                    ,
                    s.render = function(t, e, i) {
                        var n, r, a, o, s = this._time, l = this._duration, h = this._rawPrevTime;
                        if (t >= l - 1e-7)
                            this._totalTime = this._time = l,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                            this._reversed || (n = !0,
                            r = "onComplete",
                            i = i || this._timeline.autoRemoveChildren),
                            0 === l && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0),
                            (h < 0 || t <= 0 && t >= -1e-7 || h === p && "isPause" !== this.data) && h !== t && (i = !0,
                            h > p && (r = "onReverseComplete")),
                            this._rawPrevTime = o = !e || t || h === t ? t : p);
                        else if (t < 1e-7)
                            this._totalTime = this._time = 0,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                            (0 !== s || 0 === l && h > 0) && (r = "onReverseComplete",
                            n = this._reversed),
                            t < 0 && (this._active = !1,
                            0 === l && (this._initted || !this.vars.lazy || i) && (h >= 0 && (h !== p || "isPause" !== this.data) && (i = !0),
                            this._rawPrevTime = o = !e || t || h === t ? t : p)),
                            this._initted || (i = !0);
                        else if (this._totalTime = this._time = t,
                        this._easeType) {
                            var c = t / l
                              , u = this._easeType
                              , f = this._easePower;
                            (1 === u || 3 === u && c >= .5) && (c = 1 - c),
                            3 === u && (c *= 2),
                            1 === f ? c *= c : 2 === f ? c *= c * c : 3 === f ? c *= c * c * c : 4 === f && (c *= c * c * c * c),
                            1 === u ? this.ratio = 1 - c : 2 === u ? this.ratio = c : t / l < .5 ? this.ratio = c / 2 : this.ratio = 1 - c / 2
                        } else
                            this.ratio = this._ease.getRatio(t / l);
                        if (this._time !== s || i) {
                            if (!this._initted) {
                                if (this._init(),
                                !this._initted || this._gc)
                                    return;
                                if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                                    return this._time = this._totalTime = s,
                                    this._rawPrevTime = h,
                                    k.push(this),
                                    void (this._lazy = [t, e]);
                                this._time && !n ? this.ratio = this._ease.getRatio(this._time / l) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                            }
                            for (this._lazy !== !1 && (this._lazy = !1),
                            this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0),
                            0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")),
                            this.vars.onStart && (0 === this._time && 0 !== l || e || this._callback("onStart"))),
                            a = this._firstPT; a; )
                                a.f ? a.t[a.p](a.c * this.ratio + a.s) : a.t[a.p] = a.c * this.ratio + a.s,
                                a = a._next;
                            this._onUpdate && (t < 0 && this._startAt && t !== -1e-4 && this._startAt.render(t, e, i),
                            e || (this._time !== s || n || i) && this._callback("onUpdate")),
                            r && (this._gc && !i || (t < 0 && this._startAt && !this._onUpdate && t !== -1e-4 && this._startAt.render(t, e, i),
                            n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !e && this.vars[r] && this._callback(r),
                            0 === l && this._rawPrevTime === p && o !== p && (this._rawPrevTime = 0)))
                        }
                    }
                    ,
                    s._kill = function(t, e, i) {
                        if ("all" === t && (t = null),
                        null == t && (null == e || e === this.target))
                            return this._lazy = !1,
                            this._enabled(!1, !1);
                        e = "string" != typeof e ? e || this._targets || this.target : R.selector(e) || e;
                        var n, r, a, o, s, l, h, c, u, p = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline;
                        if ((m(e) || D(e)) && "number" != typeof e[0])
                            for (n = e.length; --n > -1; )
                                this._kill(t, e[n], i) && (l = !0);
                        else {
                            if (this._targets) {
                                for (n = this._targets.length; --n > -1; )
                                    if (e === this._targets[n]) {
                                        s = this._propLookup[n] || {},
                                        this._overwrittenProps = this._overwrittenProps || [],
                                        r = this._overwrittenProps[n] = t ? this._overwrittenProps[n] || {} : "all";
                                        break
                                    }
                            } else {
                                if (e !== this.target)
                                    return !1;
                                s = this._propLookup,
                                r = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                            }
                            if (s) {
                                if (h = t || s,
                                c = t !== r && "all" !== r && t !== s && ("object" != typeof t || !t._tempKill),
                                i && (R.onOverwrite || this.vars.onOverwrite)) {
                                    for (a in h)
                                        s[a] && (u || (u = []),
                                        u.push(a));
                                    if ((u || !t) && !Q(this, i, e, u))
                                        return !1
                                }
                                for (a in h)
                                    (o = s[a]) && (p && (o.f ? o.t[o.p](o.s) : o.t[o.p] = o.s,
                                    l = !0),
                                    o.pg && o.t._kill(h) && (l = !0),
                                    o.pg && 0 !== o.t._overwriteProps.length || (o._prev ? o._prev._next = o._next : o === this._firstPT && (this._firstPT = o._next),
                                    o._next && (o._next._prev = o._prev),
                                    o._next = o._prev = null),
                                    delete s[a]),
                                    c && (r[a] = 1);
                                !this._firstPT && this._initted && this._enabled(!1, !1)
                            }
                        }
                        return l
                    }
                    ,
                    s.invalidate = function() {
                        return this._notifyPluginsOfEnabled && R._onPluginEvent("_onDisable", this),
                        this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null,
                        this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                        this._propLookup = this._targets ? {} : [],
                        E.prototype.invalidate.call(this),
                        this.vars.immediateRender && (this._time = -p,
                        this.render(Math.min(0, -this._delay))),
                        this
                    }
                    ,
                    s._enabled = function(t, e) {
                        if (h || l.wake(),
                        t && this._gc) {
                            var i, n = this._targets;
                            if (n)
                                for (i = n.length; --i > -1; )
                                    this._siblings[i] = K(n[i], this, !0);
                            else
                                this._siblings = K(this.target, this, !0)
                        }
                        return E.prototype._enabled.call(this, t, e),
                        !(!this._notifyPluginsOfEnabled || !this._firstPT) && R._onPluginEvent(t ? "_onEnable" : "_onDisable", this)
                    }
                    ,
                    R.to = function(t, e, i) {
                        return new R(t,e,i)
                    }
                    ,
                    R.from = function(t, e, i) {
                        return i.runBackwards = !0,
                        i.immediateRender = 0 != i.immediateRender,
                        new R(t,e,i)
                    }
                    ,
                    R.fromTo = function(t, e, i, n) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        new R(t,e,n)
                    }
                    ,
                    R.delayedCall = function(t, e, i, n, r) {
                        return new R(e,0,{
                            delay: t,
                            onComplete: e,
                            onCompleteParams: i,
                            callbackScope: n,
                            onReverseComplete: e,
                            onReverseCompleteParams: i,
                            immediateRender: !1,
                            lazy: !1,
                            useFrames: r,
                            overwrite: 0
                        })
                    }
                    ,
                    R.set = function(t, e) {
                        return new R(t,0,e)
                    }
                    ,
                    R.getTweensOf = function(t, e) {
                        if (null == t)
                            return [];
                        t = "string" != typeof t ? t : R.selector(t) || t;
                        var i, n, r, a;
                        if ((m(t) || D(t)) && "number" != typeof t[0]) {
                            for (i = t.length,
                            n = []; --i > -1; )
                                n = n.concat(R.getTweensOf(t[i], e));
                            for (i = n.length; --i > -1; )
                                for (a = n[i],
                                r = i; --r > -1; )
                                    a === n[r] && n.splice(i, 1)
                        } else
                            for (n = K(t).concat(),
                            i = n.length; --i > -1; )
                                (n[i]._gc || e && !n[i].isActive()) && n.splice(i, 1);
                        return n
                    }
                    ,
                    R.killTweensOf = R.killDelayedCallsTo = function(t, e, i) {
                        "object" == typeof e && (i = e,
                        e = !1);
                        for (var n = R.getTweensOf(t, e), r = n.length; --r > -1; )
                            n[r]._kill(i, t)
                    }
                    ;
                    var et = _("plugins.TweenPlugin", function(t, e) {
                        this._overwriteProps = (t || "").split(","),
                        this._propName = this._overwriteProps[0],
                        this._priority = e || 0,
                        this._super = et.prototype
                    }, !0);
                    if (s = et.prototype,
                    et.version = "1.19.0",
                    et.API = 2,
                    s._firstPT = null,
                    s._addTween = z,
                    s.setRatio = B,
                    s._kill = function(t) {
                        var e, i = this._overwriteProps, n = this._firstPT;
                        if (null != t[this._propName])
                            this._overwriteProps = [];
                        else
                            for (e = i.length; --e > -1; )
                                null != t[i[e]] && i.splice(e, 1);
                        for (; n; )
                            null != t[n.n] && (n._next && (n._next._prev = n._prev),
                            n._prev ? (n._prev._next = n._next,
                            n._prev = null) : this._firstPT === n && (this._firstPT = n._next)),
                            n = n._next;
                        return !1
                    }
                    ,
                    s._mod = s._roundProps = function(t) {
                        for (var e, i = this._firstPT; i; )
                            e = t[this._propName] || null != i.n && t[i.n.split(this._propName + "_").join("")],
                            e && "function" == typeof e && (2 === i.f ? i.t._applyPT.m = e : i.m = e),
                            i = i._next
                    }
                    ,
                    R._onPluginEvent = function(t, e) {
                        var i, n, r, a, o, s = e._firstPT;
                        if ("_onInitAllProps" === t) {
                            for (; s; ) {
                                for (o = s._next,
                                n = r; n && n.pr > s.pr; )
                                    n = n._next;
                                (s._prev = n ? n._prev : a) ? s._prev._next = s : r = s,
                                (s._next = n) ? n._prev = s : a = s,
                                s = o
                            }
                            s = e._firstPT = r
                        }
                        for (; s; )
                            s.pg && "function" == typeof s.t[t] && s.t[t]() && (i = !0),
                            s = s._next;
                        return i
                    }
                    ,
                    et.activate = function(t) {
                        for (var e = t.length; --e > -1; )
                            t[e].API === et.API && (V[(new t[e])._propName] = t[e]);
                        return !0
                    }
                    ,
                    y.plugin = function(t) {
                        if (!(t && t.propName && t.init && t.API))
                            throw "illegal plugin definition.";
                        var e, i = t.propName, n = t.priority || 0, r = t.overwriteProps, a = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_mod",
                            mod: "_mod",
                            initAll: "_onInitAllProps"
                        }, o = _("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function() {
                            et.call(this, i, n),
                            this._overwriteProps = r || []
                        }, t.global === !0), s = o.prototype = new et(i);
                        s.constructor = o,
                        o.API = t.API;
                        for (e in a)
                            "function" == typeof t[e] && (s[a[e]] = t[e]);
                        return o.version = t.version,
                        et.activate([o]),
                        o
                    }
                    ,
                    a = t._gsQueue) {
                        for (o = 0; o < a.length; o++)
                            a[o]();
                        for (s in g)
                            !g[s].func
                    }
                    h = !1
                }
            }("undefined" != typeof e && e.exports && "undefined" != typeof t ? t : this || window, "TweenLite")
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    2: [function(t, e, i) {
        (function(t) {
            /*!
 * VERSION: 1.19.0
 * DATE: 2016-07-14
 * UPDATES AND DOCS AT: http://greensock.com
 * 
 * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/
            var i = "undefined" != typeof e && e.exports && "undefined" != typeof t ? t : this || window;
            (i._gsQueue || (i._gsQueue = [])).push(function() {
                "use strict";
                i._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, i) {
                    var n = function(t) {
                        var e, i = [], n = t.length;
                        for (e = 0; e !== n; i.push(t[e++]))
                            ;
                        return i
                    }
                      , r = function(t, e, i) {
                        var n, r, a = t.cycle;
                        for (n in a)
                            r = a[n],
                            t[n] = "function" == typeof r ? r(i, e[i]) : r[i % r.length];
                        delete t.cycle
                    }
                      , a = function(t, e, n) {
                        i.call(this, t, e, n),
                        this._cycle = 0,
                        this._yoyo = this.vars.yoyo === !0,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._dirty = !0,
                        this.render = a.prototype.render
                    }
                      , o = 1e-10
                      , s = i._internals
                      , l = s.isSelector
                      , h = s.isArray
                      , c = a.prototype = i.to({}, .1, {})
                      , u = [];
                    a.version = "1.19.0",
                    c.constructor = a,
                    c.kill()._gc = !1,
                    a.killTweensOf = a.killDelayedCallsTo = i.killTweensOf,
                    a.getTweensOf = i.getTweensOf,
                    a.lagSmoothing = i.lagSmoothing,
                    a.ticker = i.ticker,
                    a.render = i.render,
                    c.invalidate = function() {
                        return this._yoyo = this.vars.yoyo === !0,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._uncache(!0),
                        i.prototype.invalidate.call(this)
                    }
                    ,
                    c.updateTo = function(t, e) {
                        var n, r = this.ratio, a = this.vars.immediateRender || t.immediateRender;
                        e && this._startTime < this._timeline._time && (this._startTime = this._timeline._time,
                        this._uncache(!1),
                        this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                        for (n in t)
                            this.vars[n] = t[n];
                        if (this._initted || a)
                            if (e)
                                this._initted = !1,
                                a && this.render(0, !0, !0);
                            else if (this._gc && this._enabled(!0, !1),
                            this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this),
                            this._time / this._duration > .998) {
                                var o = this._totalTime;
                                this.render(0, !0, !1),
                                this._initted = !1,
                                this.render(o, !0, !1)
                            } else if (this._initted = !1,
                            this._init(),
                            this._time > 0 || a)
                                for (var s, l = 1 / (1 - r), h = this._firstPT; h; )
                                    s = h.s + h.c,
                                    h.c *= l,
                                    h.s = s - h.c,
                                    h = h._next;
                        return this
                    }
                    ,
                    c.render = function(t, e, i) {
                        this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                        var n, r, a, l, h, c, u, p, f = this._dirty ? this.totalDuration() : this._totalDuration, d = this._time, m = this._totalTime, g = this._cycle, v = this._duration, y = this._rawPrevTime;
                        if (t >= f - 1e-7 ? (this._totalTime = f,
                        this._cycle = this._repeat,
                        this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = v,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                        this._reversed || (n = !0,
                        r = "onComplete",
                        i = i || this._timeline.autoRemoveChildren),
                        0 === v && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0),
                        (y < 0 || t <= 0 && t >= -1e-7 || y === o && "isPause" !== this.data) && y !== t && (i = !0,
                        y > o && (r = "onReverseComplete")),
                        this._rawPrevTime = p = !e || t || y === t ? t : o)) : t < 1e-7 ? (this._totalTime = this._time = this._cycle = 0,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                        (0 !== m || 0 === v && y > 0) && (r = "onReverseComplete",
                        n = this._reversed),
                        t < 0 && (this._active = !1,
                        0 === v && (this._initted || !this.vars.lazy || i) && (y >= 0 && (i = !0),
                        this._rawPrevTime = p = !e || t || y === t ? t : o)),
                        this._initted || (i = !0)) : (this._totalTime = this._time = t,
                        0 !== this._repeat && (l = v + this._repeatDelay,
                        this._cycle = this._totalTime / l >> 0,
                        0 !== this._cycle && this._cycle === this._totalTime / l && m <= t && this._cycle--,
                        this._time = this._totalTime - this._cycle * l,
                        this._yoyo && 0 !== (1 & this._cycle) && (this._time = v - this._time),
                        this._time > v ? this._time = v : this._time < 0 && (this._time = 0)),
                        this._easeType ? (h = this._time / v,
                        c = this._easeType,
                        u = this._easePower,
                        (1 === c || 3 === c && h >= .5) && (h = 1 - h),
                        3 === c && (h *= 2),
                        1 === u ? h *= h : 2 === u ? h *= h * h : 3 === u ? h *= h * h * h : 4 === u && (h *= h * h * h * h),
                        1 === c ? this.ratio = 1 - h : 2 === c ? this.ratio = h : this._time / v < .5 ? this.ratio = h / 2 : this.ratio = 1 - h / 2) : this.ratio = this._ease.getRatio(this._time / v)),
                        d === this._time && !i && g === this._cycle)
                            return void (m !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                        if (!this._initted) {
                            if (this._init(),
                            !this._initted || this._gc)
                                return;
                            if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                                return this._time = d,
                                this._totalTime = m,
                                this._rawPrevTime = y,
                                this._cycle = g,
                                s.lazyTweens.push(this),
                                void (this._lazy = [t, e]);
                            this._time && !n ? this.ratio = this._ease.getRatio(this._time / v) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                        }
                        for (this._lazy !== !1 && (this._lazy = !1),
                        this._active || !this._paused && this._time !== d && t >= 0 && (this._active = !0),
                        0 === m && (2 === this._initted && t > 0 && this._init(),
                        this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")),
                        this.vars.onStart && (0 === this._totalTime && 0 !== v || e || this._callback("onStart"))),
                        a = this._firstPT; a; )
                            a.f ? a.t[a.p](a.c * this.ratio + a.s) : a.t[a.p] = a.c * this.ratio + a.s,
                            a = a._next;
                        this._onUpdate && (t < 0 && this._startAt && this._startTime && this._startAt.render(t, e, i),
                        e || (this._totalTime !== m || r) && this._callback("onUpdate")),
                        this._cycle !== g && (e || this._gc || this.vars.onRepeat && this._callback("onRepeat")),
                        r && (this._gc && !i || (t < 0 && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i),
                        n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !e && this.vars[r] && this._callback(r),
                        0 === v && this._rawPrevTime === o && p !== o && (this._rawPrevTime = 0)))
                    }
                    ,
                    a.to = function(t, e, i) {
                        return new a(t,e,i)
                    }
                    ,
                    a.from = function(t, e, i) {
                        return i.runBackwards = !0,
                        i.immediateRender = 0 != i.immediateRender,
                        new a(t,e,i)
                    }
                    ,
                    a.fromTo = function(t, e, i, n) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        new a(t,e,n)
                    }
                    ,
                    a.staggerTo = a.allTo = function(t, e, o, s, c, p, f) {
                        s = s || 0;
                        var d, m, g, v, y = 0, _ = [], x = function() {
                            o.onComplete && o.onComplete.apply(o.onCompleteScope || this, arguments),
                            c.apply(f || o.callbackScope || this, p || u)
                        }, b = o.cycle, w = o.startAt && o.startAt.cycle;
                        for (h(t) || ("string" == typeof t && (t = i.selector(t) || t),
                        l(t) && (t = n(t))),
                        t = t || [],
                        s < 0 && (t = n(t),
                        t.reverse(),
                        s *= -1),
                        d = t.length - 1,
                        g = 0; g <= d; g++) {
                            m = {};
                            for (v in o)
                                m[v] = o[v];
                            if (b && (r(m, t, g),
                            null != m.duration && (e = m.duration,
                            delete m.duration)),
                            w) {
                                w = m.startAt = {};
                                for (v in o.startAt)
                                    w[v] = o.startAt[v];
                                r(m.startAt, t, g)
                            }
                            m.delay = y + (m.delay || 0),
                            g === d && c && (m.onComplete = x),
                            _[g] = new a(t[g],e,m),
                            y += s
                        }
                        return _
                    }
                    ,
                    a.staggerFrom = a.allFrom = function(t, e, i, n, r, o, s) {
                        return i.runBackwards = !0,
                        i.immediateRender = 0 != i.immediateRender,
                        a.staggerTo(t, e, i, n, r, o, s)
                    }
                    ,
                    a.staggerFromTo = a.allFromTo = function(t, e, i, n, r, o, s, l) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        a.staggerTo(t, e, n, r, o, s, l)
                    }
                    ,
                    a.delayedCall = function(t, e, i, n, r) {
                        return new a(e,0,{
                            delay: t,
                            onComplete: e,
                            onCompleteParams: i,
                            callbackScope: n,
                            onReverseComplete: e,
                            onReverseCompleteParams: i,
                            immediateRender: !1,
                            useFrames: r,
                            overwrite: 0
                        })
                    }
                    ,
                    a.set = function(t, e) {
                        return new a(t,0,e)
                    }
                    ,
                    a.isTweening = function(t) {
                        return i.getTweensOf(t, !0).length > 0
                    }
                    ;
                    var p = function(t, e) {
                        for (var n = [], r = 0, a = t._first; a; )
                            a instanceof i ? n[r++] = a : (e && (n[r++] = a),
                            n = n.concat(p(a, e)),
                            r = n.length),
                            a = a._next;
                        return n
                    }
                      , f = a.getAllTweens = function(e) {
                        return p(t._rootTimeline, e).concat(p(t._rootFramesTimeline, e))
                    }
                    ;
                    a.killAll = function(t, i, n, r) {
                        null == i && (i = !0),
                        null == n && (n = !0);
                        var a, o, s, l = f(0 != r), h = l.length, c = i && n && r;
                        for (s = 0; s < h; s++)
                            o = l[s],
                            (c || o instanceof e || (a = o.target === o.vars.onComplete) && n || i && !a) && (t ? o.totalTime(o._reversed ? 0 : o.totalDuration()) : o._enabled(!1, !1))
                    }
                    ,
                    a.killChildTweensOf = function(t, e) {
                        if (null != t) {
                            var r, o, c, u, p, f = s.tweenLookup;
                            if ("string" == typeof t && (t = i.selector(t) || t),
                            l(t) && (t = n(t)),
                            h(t))
                                for (u = t.length; --u > -1; )
                                    a.killChildTweensOf(t[u], e);
                            else {
                                r = [];
                                for (c in f)
                                    for (o = f[c].target.parentNode; o; )
                                        o === t && (r = r.concat(f[c].tweens)),
                                        o = o.parentNode;
                                for (p = r.length,
                                u = 0; u < p; u++)
                                    e && r[u].totalTime(r[u].totalDuration()),
                                    r[u]._enabled(!1, !1)
                            }
                        }
                    }
                    ;
                    var d = function(t, i, n, r) {
                        i = i !== !1,
                        n = n !== !1,
                        r = r !== !1;
                        for (var a, o, s = f(r), l = i && n && r, h = s.length; --h > -1; )
                            o = s[h],
                            (l || o instanceof e || (a = o.target === o.vars.onComplete) && n || i && !a) && o.paused(t)
                    };
                    return a.pauseAll = function(t, e, i) {
                        d(!0, t, e, i)
                    }
                    ,
                    a.resumeAll = function(t, e, i) {
                        d(!1, t, e, i)
                    }
                    ,
                    a.globalTimeScale = function(e) {
                        var n = t._rootTimeline
                          , r = i.ticker.time;
                        return arguments.length ? (e = e || o,
                        n._startTime = r - (r - n._startTime) * n._timeScale / e,
                        n = t._rootFramesTimeline,
                        r = i.ticker.frame,
                        n._startTime = r - (r - n._startTime) * n._timeScale / e,
                        n._timeScale = t._rootTimeline._timeScale = e,
                        e) : n._timeScale
                    }
                    ,
                    c.progress = function(t, e) {
                        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration()
                    }
                    ,
                    c.totalProgress = function(t, e) {
                        return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration()
                    }
                    ,
                    c.time = function(t, e) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        t > this._duration && (t = this._duration),
                        this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                        this.totalTime(t, e)) : this._time
                    }
                    ,
                    c.duration = function(e) {
                        return arguments.length ? t.prototype.duration.call(this, e) : this._duration
                    }
                    ,
                    c.totalDuration = function(t) {
                        return arguments.length ? this._repeat === -1 ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat,
                        this._dirty = !1),
                        this._totalDuration)
                    }
                    ,
                    c.repeat = function(t) {
                        return arguments.length ? (this._repeat = t,
                        this._uncache(!0)) : this._repeat
                    }
                    ,
                    c.repeatDelay = function(t) {
                        return arguments.length ? (this._repeatDelay = t,
                        this._uncache(!0)) : this._repeatDelay
                    }
                    ,
                    c.yoyo = function(t) {
                        return arguments.length ? (this._yoyo = t,
                        this) : this._yoyo
                    }
                    ,
                    a
                }, !0),
                i._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, n) {
                    var r = function(t) {
                        e.call(this, t),
                        this._labels = {},
                        this.autoRemoveChildren = this.vars.autoRemoveChildren === !0,
                        this.smoothChildTiming = this.vars.smoothChildTiming === !0,
                        this._sortChildren = !0,
                        this._onUpdate = this.vars.onUpdate;
                        var i, n, r = this.vars;
                        for (n in r)
                            i = r[n],
                            h(i) && i.join("").indexOf("{self}") !== -1 && (r[n] = this._swapSelfInParams(i));
                        h(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger)
                    }
                      , a = 1e-10
                      , o = n._internals
                      , s = r._internals = {}
                      , l = o.isSelector
                      , h = o.isArray
                      , c = o.lazyTweens
                      , u = o.lazyRender
                      , p = i._gsDefine.globals
                      , f = function(t) {
                        var e, i = {};
                        for (e in t)
                            i[e] = t[e];
                        return i
                    }
                      , d = function(t, e, i) {
                        var n, r, a = t.cycle;
                        for (n in a)
                            r = a[n],
                            t[n] = "function" == typeof r ? r.call(e[i], i) : r[i % r.length];
                        delete t.cycle
                    }
                      , m = s.pauseCallback = function() {}
                      , g = function(t) {
                        var e, i = [], n = t.length;
                        for (e = 0; e !== n; i.push(t[e++]))
                            ;
                        return i
                    }
                      , v = r.prototype = new e;
                    return r.version = "1.19.0",
                    v.constructor = r,
                    v.kill()._gc = v._forcingPlayhead = v._hasPause = !1,
                    v.to = function(t, e, i, r) {
                        var a = i.repeat && p.TweenMax || n;
                        return e ? this.add(new a(t,e,i), r) : this.set(t, i, r)
                    }
                    ,
                    v.from = function(t, e, i, r) {
                        return this.add((i.repeat && p.TweenMax || n).from(t, e, i), r)
                    }
                    ,
                    v.fromTo = function(t, e, i, r, a) {
                        var o = r.repeat && p.TweenMax || n;
                        return e ? this.add(o.fromTo(t, e, i, r), a) : this.set(t, r, a)
                    }
                    ,
                    v.staggerTo = function(t, e, i, a, o, s, h, c) {
                        var u, p, m = new r({
                            onComplete: s,
                            onCompleteParams: h,
                            callbackScope: c,
                            smoothChildTiming: this.smoothChildTiming
                        }), v = i.cycle;
                        for ("string" == typeof t && (t = n.selector(t) || t),
                        t = t || [],
                        l(t) && (t = g(t)),
                        a = a || 0,
                        a < 0 && (t = g(t),
                        t.reverse(),
                        a *= -1),
                        p = 0; p < t.length; p++)
                            u = f(i),
                            u.startAt && (u.startAt = f(u.startAt),
                            u.startAt.cycle && d(u.startAt, t, p)),
                            v && (d(u, t, p),
                            null != u.duration && (e = u.duration,
                            delete u.duration)),
                            m.to(t[p], e, u, p * a);
                        return this.add(m, o)
                    }
                    ,
                    v.staggerFrom = function(t, e, i, n, r, a, o, s) {
                        return i.immediateRender = 0 != i.immediateRender,
                        i.runBackwards = !0,
                        this.staggerTo(t, e, i, n, r, a, o, s)
                    }
                    ,
                    v.staggerFromTo = function(t, e, i, n, r, a, o, s, l) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        this.staggerTo(t, e, n, r, a, o, s, l)
                    }
                    ,
                    v.call = function(t, e, i, r) {
                        return this.add(n.delayedCall(0, t, e, i), r)
                    }
                    ,
                    v.set = function(t, e, i) {
                        return i = this._parseTimeOrLabel(i, 0, !0),
                        null == e.immediateRender && (e.immediateRender = i === this._time && !this._paused),
                        this.add(new n(t,0,e), i)
                    }
                    ,
                    r.exportRoot = function(t, e) {
                        t = t || {},
                        null == t.smoothChildTiming && (t.smoothChildTiming = !0);
                        var i, a, o = new r(t), s = o._timeline;
                        for (null == e && (e = !0),
                        s._remove(o, !0),
                        o._startTime = 0,
                        o._rawPrevTime = o._time = o._totalTime = s._time,
                        i = s._first; i; )
                            a = i._next,
                            e && i instanceof n && i.target === i.vars.onComplete || o.add(i, i._startTime - i._delay),
                            i = a;
                        return s.add(o, 0),
                        o
                    }
                    ,
                    v.add = function(i, a, o, s) {
                        var l, c, u, p, f, d;
                        if ("number" != typeof a && (a = this._parseTimeOrLabel(a, 0, !0, i)),
                        !(i instanceof t)) {
                            if (i instanceof Array || i && i.push && h(i)) {
                                for (o = o || "normal",
                                s = s || 0,
                                l = a,
                                c = i.length,
                                u = 0; u < c; u++)
                                    h(p = i[u]) && (p = new r({
                                        tweens: p
                                    })),
                                    this.add(p, l),
                                    "string" != typeof p && "function" != typeof p && ("sequence" === o ? l = p._startTime + p.totalDuration() / p._timeScale : "start" === o && (p._startTime -= p.delay())),
                                    l += s;
                                return this._uncache(!0)
                            }
                            if ("string" == typeof i)
                                return this.addLabel(i, a);
                            if ("function" != typeof i)
                                throw "Cannot add " + i + " into the timeline; it is not a tween, timeline, function, or string.";
                            i = n.delayedCall(0, i)
                        }
                        if (e.prototype.add.call(this, i, a),
                        (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                            for (f = this,
                            d = f.rawTime() > i._startTime; f._timeline; )
                                d && f._timeline.smoothChildTiming ? f.totalTime(f._totalTime, !0) : f._gc && f._enabled(!0, !1),
                                f = f._timeline;
                        return this
                    }
                    ,
                    v.remove = function(e) {
                        if (e instanceof t) {
                            this._remove(e, !1);
                            var i = e._timeline = e.vars.useFrames ? t._rootFramesTimeline : t._rootTimeline;
                            return e._startTime = (e._paused ? e._pauseTime : i._time) - (e._reversed ? e.totalDuration() - e._totalTime : e._totalTime) / e._timeScale,
                            this
                        }
                        if (e instanceof Array || e && e.push && h(e)) {
                            for (var n = e.length; --n > -1; )
                                this.remove(e[n]);
                            return this
                        }
                        return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e)
                    }
                    ,
                    v._remove = function(t, i) {
                        e.prototype._remove.call(this, t, i);
                        var n = this._last;
                        return n ? this._time > n._startTime + n._totalDuration / n._timeScale && (this._time = this.duration(),
                        this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0,
                        this
                    }
                    ,
                    v.append = function(t, e) {
                        return this.add(t, this._parseTimeOrLabel(null, e, !0, t))
                    }
                    ,
                    v.insert = v.insertMultiple = function(t, e, i, n) {
                        return this.add(t, e || 0, i, n)
                    }
                    ,
                    v.appendMultiple = function(t, e, i, n) {
                        return this.add(t, this._parseTimeOrLabel(null, e, !0, t), i, n)
                    }
                    ,
                    v.addLabel = function(t, e) {
                        return this._labels[t] = this._parseTimeOrLabel(e),
                        this
                    }
                    ,
                    v.addPause = function(t, e, i, r) {
                        var a = n.delayedCall(0, m, i, r || this);
                        return a.vars.onComplete = a.vars.onReverseComplete = e,
                        a.data = "isPause",
                        this._hasPause = !0,
                        this.add(a, t)
                    }
                    ,
                    v.removeLabel = function(t) {
                        return delete this._labels[t],
                        this
                    }
                    ,
                    v.getLabelTime = function(t) {
                        return null != this._labels[t] ? this._labels[t] : -1
                    }
                    ,
                    v._parseTimeOrLabel = function(e, i, n, r) {
                        var a;
                        if (r instanceof t && r.timeline === this)
                            this.remove(r);
                        else if (r && (r instanceof Array || r.push && h(r)))
                            for (a = r.length; --a > -1; )
                                r[a]instanceof t && r[a].timeline === this && this.remove(r[a]);
                        if ("string" == typeof i)
                            return this._parseTimeOrLabel(i, n && "number" == typeof e && null == this._labels[i] ? e - this.duration() : 0, n);
                        if (i = i || 0,
                        "string" != typeof e || !isNaN(e) && null == this._labels[e])
                            null == e && (e = this.duration());
                        else {
                            if (a = e.indexOf("="),
                            a === -1)
                                return null == this._labels[e] ? n ? this._labels[e] = this.duration() + i : i : this._labels[e] + i;
                            i = parseInt(e.charAt(a - 1) + "1", 10) * Number(e.substr(a + 1)),
                            e = a > 1 ? this._parseTimeOrLabel(e.substr(0, a - 1), 0, n) : this.duration()
                        }
                        return Number(e) + i
                    }
                    ,
                    v.seek = function(t, e) {
                        return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), e !== !1)
                    }
                    ,
                    v.stop = function() {
                        return this.paused(!0)
                    }
                    ,
                    v.gotoAndPlay = function(t, e) {
                        return this.play(t, e)
                    }
                    ,
                    v.gotoAndStop = function(t, e) {
                        return this.pause(t, e)
                    }
                    ,
                    v.render = function(t, e, i) {
                        this._gc && this._enabled(!0, !1);
                        var n, r, o, s, l, h, p, f = this._dirty ? this.totalDuration() : this._totalDuration, d = this._time, m = this._startTime, g = this._timeScale, v = this._paused;
                        if (t >= f - 1e-7)
                            this._totalTime = this._time = f,
                            this._reversed || this._hasPausedChild() || (r = !0,
                            s = "onComplete",
                            l = !!this._timeline.autoRemoveChildren,
                            0 === this._duration && (t <= 0 && t >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === a) && this._rawPrevTime !== t && this._first && (l = !0,
                            this._rawPrevTime > a && (s = "onReverseComplete"))),
                            this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : a,
                            t = f + 1e-4;
                        else if (t < 1e-7)
                            if (this._totalTime = this._time = 0,
                            (0 !== d || 0 === this._duration && this._rawPrevTime !== a && (this._rawPrevTime > 0 || t < 0 && this._rawPrevTime >= 0)) && (s = "onReverseComplete",
                            r = this._reversed),
                            t < 0)
                                this._active = !1,
                                this._timeline.autoRemoveChildren && this._reversed ? (l = r = !0,
                                s = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (l = !0),
                                this._rawPrevTime = t;
                            else {
                                if (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : a,
                                0 === t && r)
                                    for (n = this._first; n && 0 === n._startTime; )
                                        n._duration || (r = !1),
                                        n = n._next;
                                t = 0,
                                this._initted || (l = !0)
                            }
                        else {
                            if (this._hasPause && !this._forcingPlayhead && !e) {
                                if (t >= d)
                                    for (n = this._first; n && n._startTime <= t && !h; )
                                        n._duration || "isPause" !== n.data || n.ratio || 0 === n._startTime && 0 === this._rawPrevTime || (h = n),
                                        n = n._next;
                                else
                                    for (n = this._last; n && n._startTime >= t && !h; )
                                        n._duration || "isPause" === n.data && n._rawPrevTime > 0 && (h = n),
                                        n = n._prev;
                                h && (this._time = t = h._startTime,
                                this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                            }
                            this._totalTime = this._time = this._rawPrevTime = t
                        }
                        if (this._time !== d && this._first || i || l || h) {
                            if (this._initted || (this._initted = !0),
                            this._active || !this._paused && this._time !== d && t > 0 && (this._active = !0),
                            0 === d && this.vars.onStart && (0 === this._time && this._duration || e || this._callback("onStart")),
                            p = this._time,
                            p >= d)
                                for (n = this._first; n && (o = n._next,
                                p === this._time && (!this._paused || v)); )
                                    (n._active || n._startTime <= p && !n._paused && !n._gc) && (h === n && this.pause(),
                                    n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)),
                                    n = o;
                            else
                                for (n = this._last; n && (o = n._prev,
                                p === this._time && (!this._paused || v)); ) {
                                    if (n._active || n._startTime <= d && !n._paused && !n._gc) {
                                        if (h === n) {
                                            for (h = n._prev; h && h.endTime() > this._time; )
                                                h.render(h._reversed ? h.totalDuration() - (t - h._startTime) * h._timeScale : (t - h._startTime) * h._timeScale, e, i),
                                                h = h._prev;
                                            h = null,
                                            this.pause()
                                        }
                                        n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)
                                    }
                                    n = o
                                }
                            this._onUpdate && (e || (c.length && u(),
                            this._callback("onUpdate"))),
                            s && (this._gc || m !== this._startTime && g === this._timeScale || (0 === this._time || f >= this.totalDuration()) && (r && (c.length && u(),
                            this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !e && this.vars[s] && this._callback(s)))
                        }
                    }
                    ,
                    v._hasPausedChild = function() {
                        for (var t = this._first; t; ) {
                            if (t._paused || t instanceof r && t._hasPausedChild())
                                return !0;
                            t = t._next
                        }
                        return !1
                    }
                    ,
                    v.getChildren = function(t, e, i, r) {
                        r = r || -9999999999;
                        for (var a = [], o = this._first, s = 0; o; )
                            o._startTime < r || (o instanceof n ? e !== !1 && (a[s++] = o) : (i !== !1 && (a[s++] = o),
                            t !== !1 && (a = a.concat(o.getChildren(!0, e, i)),
                            s = a.length))),
                            o = o._next;
                        return a
                    }
                    ,
                    v.getTweensOf = function(t, e) {
                        var i, r, a = this._gc, o = [], s = 0;
                        for (a && this._enabled(!0, !0),
                        i = n.getTweensOf(t),
                        r = i.length; --r > -1; )
                            (i[r].timeline === this || e && this._contains(i[r])) && (o[s++] = i[r]);
                        return a && this._enabled(!1, !0),
                        o
                    }
                    ,
                    v.recent = function() {
                        return this._recent
                    }
                    ,
                    v._contains = function(t) {
                        for (var e = t.timeline; e; ) {
                            if (e === this)
                                return !0;
                            e = e.timeline
                        }
                        return !1
                    }
                    ,
                    v.shiftChildren = function(t, e, i) {
                        i = i || 0;
                        for (var n, r = this._first, a = this._labels; r; )
                            r._startTime >= i && (r._startTime += t),
                            r = r._next;
                        if (e)
                            for (n in a)
                                a[n] >= i && (a[n] += t);
                        return this._uncache(!0)
                    }
                    ,
                    v._kill = function(t, e) {
                        if (!t && !e)
                            return this._enabled(!1, !1);
                        for (var i = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), n = i.length, r = !1; --n > -1; )
                            i[n]._kill(t, e) && (r = !0);
                        return r
                    }
                    ,
                    v.clear = function(t) {
                        var e = this.getChildren(!1, !0, !0)
                          , i = e.length;
                        for (this._time = this._totalTime = 0; --i > -1; )
                            e[i]._enabled(!1, !1);
                        return t !== !1 && (this._labels = {}),
                        this._uncache(!0)
                    }
                    ,
                    v.invalidate = function() {
                        for (var e = this._first; e; )
                            e.invalidate(),
                            e = e._next;
                        return t.prototype.invalidate.call(this)
                    }
                    ,
                    v._enabled = function(t, i) {
                        if (t === this._gc)
                            for (var n = this._first; n; )
                                n._enabled(t, !0),
                                n = n._next;
                        return e.prototype._enabled.call(this, t, i)
                    }
                    ,
                    v.totalTime = function(e, i, n) {
                        this._forcingPlayhead = !0;
                        var r = t.prototype.totalTime.apply(this, arguments);
                        return this._forcingPlayhead = !1,
                        r
                    }
                    ,
                    v.duration = function(t) {
                        return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t),
                        this) : (this._dirty && this.totalDuration(),
                        this._duration)
                    }
                    ,
                    v.totalDuration = function(t) {
                        if (!arguments.length) {
                            if (this._dirty) {
                                for (var e, i, n = 0, r = this._last, a = 999999999999; r; )
                                    e = r._prev,
                                    r._dirty && r.totalDuration(),
                                    r._startTime > a && this._sortChildren && !r._paused ? this.add(r, r._startTime - r._delay) : a = r._startTime,
                                    r._startTime < 0 && !r._paused && (n -= r._startTime,
                                    this._timeline.smoothChildTiming && (this._startTime += r._startTime / this._timeScale),
                                    this.shiftChildren(-r._startTime, !1, -9999999999),
                                    a = 0),
                                    i = r._startTime + r._totalDuration / r._timeScale,
                                    i > n && (n = i),
                                    r = e;
                                this._duration = this._totalDuration = n,
                                this._dirty = !1
                            }
                            return this._totalDuration
                        }
                        return t && this.totalDuration() ? this.timeScale(this._totalDuration / t) : this
                    }
                    ,
                    v.paused = function(e) {
                        if (!e)
                            for (var i = this._first, n = this._time; i; )
                                i._startTime === n && "isPause" === i.data && (i._rawPrevTime = 0),
                                i = i._next;
                        return t.prototype.paused.apply(this, arguments)
                    }
                    ,
                    v.usesFrames = function() {
                        for (var e = this._timeline; e._timeline; )
                            e = e._timeline;
                        return e === t._rootFramesTimeline
                    }
                    ,
                    v.rawTime = function() {
                        return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale
                    }
                    ,
                    r
                }, !0),
                i._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(t, e, n) {
                    var r = function(e) {
                        t.call(this, e),
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._cycle = 0,
                        this._yoyo = this.vars.yoyo === !0,
                        this._dirty = !0
                    }
                      , a = 1e-10
                      , o = e._internals
                      , s = o.lazyTweens
                      , l = o.lazyRender
                      , h = i._gsDefine.globals
                      , c = new n(null,null,1,0)
                      , u = r.prototype = new t;
                    return u.constructor = r,
                    u.kill()._gc = !1,
                    r.version = "1.19.0",
                    u.invalidate = function() {
                        return this._yoyo = this.vars.yoyo === !0,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._uncache(!0),
                        t.prototype.invalidate.call(this)
                    }
                    ,
                    u.addCallback = function(t, i, n, r) {
                        return this.add(e.delayedCall(0, t, n, r), i)
                    }
                    ,
                    u.removeCallback = function(t, e) {
                        if (t)
                            if (null == e)
                                this._kill(null, t);
                            else
                                for (var i = this.getTweensOf(t, !1), n = i.length, r = this._parseTimeOrLabel(e); --n > -1; )
                                    i[n]._startTime === r && i[n]._enabled(!1, !1);
                        return this
                    }
                    ,
                    u.removePause = function(e) {
                        return this.removeCallback(t._internals.pauseCallback, e)
                    }
                    ,
                    u.tweenTo = function(t, i) {
                        i = i || {};
                        var n, r, a, o = {
                            ease: c,
                            useFrames: this.usesFrames(),
                            immediateRender: !1
                        }, s = i.repeat && h.TweenMax || e;
                        for (r in i)
                            o[r] = i[r];
                        return o.time = this._parseTimeOrLabel(t),
                        n = Math.abs(Number(o.time) - this._time) / this._timeScale || .001,
                        a = new s(this,n,o),
                        o.onStart = function() {
                            a.target.paused(!0),
                            a.vars.time !== a.target.time() && n === a.duration() && a.duration(Math.abs(a.vars.time - a.target.time()) / a.target._timeScale),
                            i.onStart && a._callback("onStart")
                        }
                        ,
                        a
                    }
                    ,
                    u.tweenFromTo = function(t, e, i) {
                        i = i || {},
                        t = this._parseTimeOrLabel(t),
                        i.startAt = {
                            onComplete: this.seek,
                            onCompleteParams: [t],
                            callbackScope: this
                        },
                        i.immediateRender = i.immediateRender !== !1;
                        var n = this.tweenTo(e, i);
                        return n.duration(Math.abs(n.vars.time - t) / this._timeScale || .001)
                    }
                    ,
                    u.render = function(t, e, i) {
                        this._gc && this._enabled(!0, !1);
                        var n, r, o, h, c, u, p, f, d = this._dirty ? this.totalDuration() : this._totalDuration, m = this._duration, g = this._time, v = this._totalTime, y = this._startTime, _ = this._timeScale, x = this._rawPrevTime, b = this._paused, w = this._cycle;
                        if (t >= d - 1e-7)
                            this._locked || (this._totalTime = d,
                            this._cycle = this._repeat),
                            this._reversed || this._hasPausedChild() || (r = !0,
                            h = "onComplete",
                            c = !!this._timeline.autoRemoveChildren,
                            0 === this._duration && (t <= 0 && t >= -1e-7 || x < 0 || x === a) && x !== t && this._first && (c = !0,
                            x > a && (h = "onReverseComplete"))),
                            this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : a,
                            this._yoyo && 0 !== (1 & this._cycle) ? this._time = t = 0 : (this._time = m,
                            t = m + 1e-4);
                        else if (t < 1e-7)
                            if (this._locked || (this._totalTime = this._cycle = 0),
                            this._time = 0,
                            (0 !== g || 0 === m && x !== a && (x > 0 || t < 0 && x >= 0) && !this._locked) && (h = "onReverseComplete",
                            r = this._reversed),
                            t < 0)
                                this._active = !1,
                                this._timeline.autoRemoveChildren && this._reversed ? (c = r = !0,
                                h = "onReverseComplete") : x >= 0 && this._first && (c = !0),
                                this._rawPrevTime = t;
                            else {
                                if (this._rawPrevTime = m || !e || t || this._rawPrevTime === t ? t : a,
                                0 === t && r)
                                    for (n = this._first; n && 0 === n._startTime; )
                                        n._duration || (r = !1),
                                        n = n._next;
                                t = 0,
                                this._initted || (c = !0)
                            }
                        else if (0 === m && x < 0 && (c = !0),
                        this._time = this._rawPrevTime = t,
                        this._locked || (this._totalTime = t,
                        0 !== this._repeat && (u = m + this._repeatDelay,
                        this._cycle = this._totalTime / u >> 0,
                        0 !== this._cycle && this._cycle === this._totalTime / u && v <= t && this._cycle--,
                        this._time = this._totalTime - this._cycle * u,
                        this._yoyo && 0 !== (1 & this._cycle) && (this._time = m - this._time),
                        this._time > m ? (this._time = m,
                        t = m + 1e-4) : this._time < 0 ? this._time = t = 0 : t = this._time)),
                        this._hasPause && !this._forcingPlayhead && !e) {
                            if (t = this._time,
                            t >= g)
                                for (n = this._first; n && n._startTime <= t && !p; )
                                    n._duration || "isPause" !== n.data || n.ratio || 0 === n._startTime && 0 === this._rawPrevTime || (p = n),
                                    n = n._next;
                            else
                                for (n = this._last; n && n._startTime >= t && !p; )
                                    n._duration || "isPause" === n.data && n._rawPrevTime > 0 && (p = n),
                                    n = n._prev;
                            p && (this._time = t = p._startTime,
                            this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                        }
                        if (this._cycle !== w && !this._locked) {
                            var M = this._yoyo && 0 !== (1 & w)
                              , T = M === (this._yoyo && 0 !== (1 & this._cycle))
                              , S = this._totalTime
                              , C = this._cycle
                              , A = this._rawPrevTime
                              , P = this._time;
                            if (this._totalTime = w * m,
                            this._cycle < w ? M = !M : this._totalTime += m,
                            this._time = g,
                            this._rawPrevTime = 0 === m ? x - 1e-4 : x,
                            this._cycle = w,
                            this._locked = !0,
                            g = M ? 0 : m,
                            this.render(g, e, 0 === m),
                            e || this._gc || this.vars.onRepeat && this._callback("onRepeat"),
                            g !== this._time)
                                return;
                            if (T && (g = M ? m + 1e-4 : -1e-4,
                            this.render(g, !0, !1)),
                            this._locked = !1,
                            this._paused && !b)
                                return;
                            this._time = P,
                            this._totalTime = S,
                            this._cycle = C,
                            this._rawPrevTime = A
                        }
                        if (!(this._time !== g && this._first || i || c || p))
                            return void (v !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                        if (this._initted || (this._initted = !0),
                        this._active || !this._paused && this._totalTime !== v && t > 0 && (this._active = !0),
                        0 === v && this.vars.onStart && (0 === this._totalTime && this._totalDuration || e || this._callback("onStart")),
                        f = this._time,
                        f >= g)
                            for (n = this._first; n && (o = n._next,
                            f === this._time && (!this._paused || b)); )
                                (n._active || n._startTime <= this._time && !n._paused && !n._gc) && (p === n && this.pause(),
                                n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)),
                                n = o;
                        else
                            for (n = this._last; n && (o = n._prev,
                            f === this._time && (!this._paused || b)); ) {
                                if (n._active || n._startTime <= g && !n._paused && !n._gc) {
                                    if (p === n) {
                                        for (p = n._prev; p && p.endTime() > this._time; )
                                            p.render(p._reversed ? p.totalDuration() - (t - p._startTime) * p._timeScale : (t - p._startTime) * p._timeScale, e, i),
                                            p = p._prev;
                                        p = null,
                                        this.pause()
                                    }
                                    n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)
                                }
                                n = o
                            }
                        this._onUpdate && (e || (s.length && l(),
                        this._callback("onUpdate"))),
                        h && (this._locked || this._gc || y !== this._startTime && _ === this._timeScale || (0 === this._time || d >= this.totalDuration()) && (r && (s.length && l(),
                        this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !e && this.vars[h] && this._callback(h)))
                    }
                    ,
                    u.getActive = function(t, e, i) {
                        null == t && (t = !0),
                        null == e && (e = !0),
                        null == i && (i = !1);
                        var n, r, a = [], o = this.getChildren(t, e, i), s = 0, l = o.length;
                        for (n = 0; n < l; n++)
                            r = o[n],
                            r.isActive() && (a[s++] = r);
                        return a
                    }
                    ,
                    u.getLabelAfter = function(t) {
                        t || 0 !== t && (t = this._time);
                        var e, i = this.getLabelsArray(), n = i.length;
                        for (e = 0; e < n; e++)
                            if (i[e].time > t)
                                return i[e].name;
                        return null
                    }
                    ,
                    u.getLabelBefore = function(t) {
                        null == t && (t = this._time);
                        for (var e = this.getLabelsArray(), i = e.length; --i > -1; )
                            if (e[i].time < t)
                                return e[i].name;
                        return null
                    }
                    ,
                    u.getLabelsArray = function() {
                        var t, e = [], i = 0;
                        for (t in this._labels)
                            e[i++] = {
                                time: this._labels[t],
                                name: t
                            };
                        return e.sort(function(t, e) {
                            return t.time - e.time
                        }),
                        e
                    }
                    ,
                    u.progress = function(t, e) {
                        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration()
                    }
                    ,
                    u.totalProgress = function(t, e) {
                        return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration()
                    }
                    ,
                    u.totalDuration = function(e) {
                        return arguments.length ? this._repeat !== -1 && e ? this.timeScale(this.totalDuration() / e) : this : (this._dirty && (t.prototype.totalDuration.call(this),
                        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
                        this._totalDuration)
                    }
                    ,
                    u.time = function(t, e) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        t > this._duration && (t = this._duration),
                        this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                        this.totalTime(t, e)) : this._time
                    }
                    ,
                    u.repeat = function(t) {
                        return arguments.length ? (this._repeat = t,
                        this._uncache(!0)) : this._repeat
                    }
                    ,
                    u.repeatDelay = function(t) {
                        return arguments.length ? (this._repeatDelay = t,
                        this._uncache(!0)) : this._repeatDelay
                    }
                    ,
                    u.yoyo = function(t) {
                        return arguments.length ? (this._yoyo = t,
                        this) : this._yoyo
                    }
                    ,
                    u.currentLabel = function(t) {
                        return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8)
                    }
                    ,
                    r
                }, !0),
                function() {
                    var t = 180 / Math.PI
                      , e = []
                      , n = []
                      , r = []
                      , a = {}
                      , o = i._gsDefine.globals
                      , s = function(t, e, i, n) {
                        i === n && (i = n - (n - e) / 1e6),
                        t === e && (e = t + (i - t) / 1e6),
                        this.a = t,
                        this.b = e,
                        this.c = i,
                        this.d = n,
                        this.da = n - t,
                        this.ca = i - t,
                        this.ba = e - t
                    }
                      , l = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,"
                      , h = function(t, e, i, n) {
                        var r = {
                            a: t
                        }
                          , a = {}
                          , o = {}
                          , s = {
                            c: n
                        }
                          , l = (t + e) / 2
                          , h = (e + i) / 2
                          , c = (i + n) / 2
                          , u = (l + h) / 2
                          , p = (h + c) / 2
                          , f = (p - u) / 8;
                        return r.b = l + (t - l) / 4,
                        a.b = u + f,
                        r.c = a.a = (r.b + a.b) / 2,
                        a.c = o.a = (u + p) / 2,
                        o.b = p - f,
                        s.b = c + (n - c) / 4,
                        o.c = s.a = (o.b + s.b) / 2,
                        [r, a, o, s]
                    }
                      , c = function(t, i, a, o, s) {
                        var l, c, u, p, f, d, m, g, v, y, _, x, b, w = t.length - 1, M = 0, T = t[0].a;
                        for (l = 0; l < w; l++)
                            f = t[M],
                            c = f.a,
                            u = f.d,
                            p = t[M + 1].d,
                            s ? (_ = e[l],
                            x = n[l],
                            b = (x + _) * i * .25 / (o ? .5 : r[l] || .5),
                            d = u - (u - c) * (o ? .5 * i : 0 !== _ ? b / _ : 0),
                            m = u + (p - u) * (o ? .5 * i : 0 !== x ? b / x : 0),
                            g = u - (d + ((m - d) * (3 * _ / (_ + x) + .5) / 4 || 0))) : (d = u - (u - c) * i * .5,
                            m = u + (p - u) * i * .5,
                            g = u - (d + m) / 2),
                            d += g,
                            m += g,
                            f.c = v = d,
                            0 !== l ? f.b = T : f.b = T = f.a + .6 * (f.c - f.a),
                            f.da = u - c,
                            f.ca = v - c,
                            f.ba = T - c,
                            a ? (y = h(c, T, v, u),
                            t.splice(M, 1, y[0], y[1], y[2], y[3]),
                            M += 4) : M++,
                            T = m;
                        f = t[M],
                        f.b = T,
                        f.c = T + .4 * (f.d - T),
                        f.da = f.d - f.a,
                        f.ca = f.c - f.a,
                        f.ba = T - f.a,
                        a && (y = h(f.a, T, f.c, f.d),
                        t.splice(M, 1, y[0], y[1], y[2], y[3]))
                    }
                      , u = function(t, i, r, a) {
                        var o, l, h, c, u, p, f = [];
                        if (a)
                            for (t = [a].concat(t),
                            l = t.length; --l > -1; )
                                "string" == typeof (p = t[l][i]) && "=" === p.charAt(1) && (t[l][i] = a[i] + Number(p.charAt(0) + p.substr(2)));
                        if (o = t.length - 2,
                        o < 0)
                            return f[0] = new s(t[0][i],0,0,t[o < -1 ? 0 : 1][i]),
                            f;
                        for (l = 0; l < o; l++)
                            h = t[l][i],
                            c = t[l + 1][i],
                            f[l] = new s(h,0,0,c),
                            r && (u = t[l + 2][i],
                            e[l] = (e[l] || 0) + (c - h) * (c - h),
                            n[l] = (n[l] || 0) + (u - c) * (u - c));
                        return f[l] = new s(t[l][i],0,0,t[l + 1][i]),
                        f
                    }
                      , p = function(t, i, o, s, h, p) {
                        var f, d, m, g, v, y, _, x, b = {}, w = [], M = p || t[0];
                        h = "string" == typeof h ? "," + h + "," : l,
                        null == i && (i = 1);
                        for (d in t[0])
                            w.push(d);
                        if (t.length > 1) {
                            for (x = t[t.length - 1],
                            _ = !0,
                            f = w.length; --f > -1; )
                                if (d = w[f],
                                Math.abs(M[d] - x[d]) > .05) {
                                    _ = !1;
                                    break
                                }
                            _ && (t = t.concat(),
                            p && t.unshift(p),
                            t.push(t[1]),
                            p = t[t.length - 3])
                        }
                        for (e.length = n.length = r.length = 0,
                        f = w.length; --f > -1; )
                            d = w[f],
                            a[d] = h.indexOf("," + d + ",") !== -1,
                            b[d] = u(t, d, a[d], p);
                        for (f = e.length; --f > -1; )
                            e[f] = Math.sqrt(e[f]),
                            n[f] = Math.sqrt(n[f]);
                        if (!s) {
                            for (f = w.length; --f > -1; )
                                if (a[d])
                                    for (m = b[w[f]],
                                    y = m.length - 1,
                                    g = 0; g < y; g++)
                                        v = m[g + 1].da / n[g] + m[g].da / e[g] || 0,
                                        r[g] = (r[g] || 0) + v * v;
                            for (f = r.length; --f > -1; )
                                r[f] = Math.sqrt(r[f])
                        }
                        for (f = w.length,
                        g = o ? 4 : 1; --f > -1; )
                            d = w[f],
                            m = b[d],
                            c(m, i, o, s, a[d]),
                            _ && (m.splice(0, g),
                            m.splice(m.length - g, g));
                        return b
                    }
                      , f = function(t, e, i) {
                        e = e || "soft";
                        var n, r, a, o, l, h, c, u, p, f, d, m = {}, g = "cubic" === e ? 3 : 2, v = "soft" === e, y = [];
                        if (v && i && (t = [i].concat(t)),
                        null == t || t.length < g + 1)
                            throw "invalid Bezier data";
                        for (p in t[0])
                            y.push(p);
                        for (h = y.length; --h > -1; ) {
                            for (p = y[h],
                            m[p] = l = [],
                            f = 0,
                            u = t.length,
                            c = 0; c < u; c++)
                                n = null == i ? t[c][p] : "string" == typeof (d = t[c][p]) && "=" === d.charAt(1) ? i[p] + Number(d.charAt(0) + d.substr(2)) : Number(d),
                                v && c > 1 && c < u - 1 && (l[f++] = (n + l[f - 2]) / 2),
                                l[f++] = n;
                            for (u = f - g + 1,
                            f = 0,
                            c = 0; c < u; c += g)
                                n = l[c],
                                r = l[c + 1],
                                a = l[c + 2],
                                o = 2 === g ? 0 : l[c + 3],
                                l[f++] = d = 3 === g ? new s(n,r,a,o) : new s(n,(2 * r + n) / 3,(2 * r + a) / 3,a);
                            l.length = f
                        }
                        return m
                    }
                      , d = function(t, e, i) {
                        for (var n, r, a, o, s, l, h, c, u, p, f, d = 1 / i, m = t.length; --m > -1; )
                            for (p = t[m],
                            a = p.a,
                            o = p.d - a,
                            s = p.c - a,
                            l = p.b - a,
                            n = r = 0,
                            c = 1; c <= i; c++)
                                h = d * c,
                                u = 1 - h,
                                n = r - (r = (h * h * o + 3 * u * (h * s + u * l)) * h),
                                f = m * i + c - 1,
                                e[f] = (e[f] || 0) + n * n
                    }
                      , m = function(t, e) {
                        e = e >> 0 || 6;
                        var i, n, r, a, o = [], s = [], l = 0, h = 0, c = e - 1, u = [], p = [];
                        for (i in t)
                            d(t[i], o, e);
                        for (r = o.length,
                        n = 0; n < r; n++)
                            l += Math.sqrt(o[n]),
                            a = n % e,
                            p[a] = l,
                            a === c && (h += l,
                            a = n / e >> 0,
                            u[a] = p,
                            s[a] = h,
                            l = 0,
                            p = []);
                        return {
                            length: h,
                            lengths: s,
                            segments: u
                        }
                    }
                      , g = i._gsDefine.plugin({
                        propName: "bezier",
                        priority: -1,
                        version: "1.3.7",
                        API: 2,
                        global: !0,
                        init: function(t, e, i) {
                            this._target = t,
                            e instanceof Array && (e = {
                                values: e
                            }),
                            this._func = {},
                            this._mod = {},
                            this._props = [],
                            this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
                            var n, r, a, o, s, l = e.values || [], h = {}, c = l[0], u = e.autoRotate || i.vars.orientToBezier;
                            this._autoRotate = u ? u instanceof Array ? u : [["x", "y", "rotation", u === !0 ? 0 : Number(u) || 0]] : null;
                            for (n in c)
                                this._props.push(n);
                            for (a = this._props.length; --a > -1; )
                                n = this._props[a],
                                this._overwriteProps.push(n),
                                r = this._func[n] = "function" == typeof t[n],
                                h[n] = r ? t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)]() : parseFloat(t[n]),
                                s || h[n] !== l[0][n] && (s = h);
                            if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? p(l, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, s) : f(l, e.type, h),
                            this._segCount = this._beziers[n].length,
                            this._timeRes) {
                                var d = m(this._beziers, this._timeRes);
                                this._length = d.length,
                                this._lengths = d.lengths,
                                this._segments = d.segments,
                                this._l1 = this._li = this._s1 = this._si = 0,
                                this._l2 = this._lengths[0],
                                this._curSeg = this._segments[0],
                                this._s2 = this._curSeg[0],
                                this._prec = 1 / this._curSeg.length
                            }
                            if (u = this._autoRotate)
                                for (this._initialRotations = [],
                                u[0]instanceof Array || (this._autoRotate = u = [u]),
                                a = u.length; --a > -1; ) {
                                    for (o = 0; o < 3; o++)
                                        n = u[a][o],
                                        this._func[n] = "function" == typeof t[n] && t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)];
                                    n = u[a][2],
                                    this._initialRotations[a] = (this._func[n] ? this._func[n].call(this._target) : this._target[n]) || 0,
                                    this._overwriteProps.push(n)
                                }
                            return this._startRatio = i.vars.runBackwards ? 1 : 0,
                            !0
                        },
                        set: function(e) {
                            var i, n, r, a, o, s, l, h, c, u, p = this._segCount, f = this._func, d = this._target, m = e !== this._startRatio;
                            if (this._timeRes) {
                                if (c = this._lengths,
                                u = this._curSeg,
                                e *= this._length,
                                r = this._li,
                                e > this._l2 && r < p - 1) {
                                    for (h = p - 1; r < h && (this._l2 = c[++r]) <= e; )
                                        ;
                                    this._l1 = c[r - 1],
                                    this._li = r,
                                    this._curSeg = u = this._segments[r],
                                    this._s2 = u[this._s1 = this._si = 0]
                                } else if (e < this._l1 && r > 0) {
                                    for (; r > 0 && (this._l1 = c[--r]) >= e; )
                                        ;
                                    0 === r && e < this._l1 ? this._l1 = 0 : r++,
                                    this._l2 = c[r],
                                    this._li = r,
                                    this._curSeg = u = this._segments[r],
                                    this._s1 = u[(this._si = u.length - 1) - 1] || 0,
                                    this._s2 = u[this._si]
                                }
                                if (i = r,
                                e -= this._l1,
                                r = this._si,
                                e > this._s2 && r < u.length - 1) {
                                    for (h = u.length - 1; r < h && (this._s2 = u[++r]) <= e; )
                                        ;
                                    this._s1 = u[r - 1],
                                    this._si = r
                                } else if (e < this._s1 && r > 0) {
                                    for (; r > 0 && (this._s1 = u[--r]) >= e; )
                                        ;
                                    0 === r && e < this._s1 ? this._s1 = 0 : r++,
                                    this._s2 = u[r],
                                    this._si = r
                                }
                                s = (r + (e - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                            } else
                                i = e < 0 ? 0 : e >= 1 ? p - 1 : p * e >> 0,
                                s = (e - i * (1 / p)) * p;
                            for (n = 1 - s,
                            r = this._props.length; --r > -1; )
                                a = this._props[r],
                                o = this._beziers[a][i],
                                l = (s * s * o.da + 3 * n * (s * o.ca + n * o.ba)) * s + o.a,
                                this._mod[a] && (l = this._mod[a](l, d)),
                                f[a] ? d[a](l) : d[a] = l;
                            if (this._autoRotate) {
                                var g, v, y, _, x, b, w, M = this._autoRotate;
                                for (r = M.length; --r > -1; )
                                    a = M[r][2],
                                    b = M[r][3] || 0,
                                    w = M[r][4] === !0 ? 1 : t,
                                    o = this._beziers[M[r][0]],
                                    g = this._beziers[M[r][1]],
                                    o && g && (o = o[i],
                                    g = g[i],
                                    v = o.a + (o.b - o.a) * s,
                                    _ = o.b + (o.c - o.b) * s,
                                    v += (_ - v) * s,
                                    _ += (o.c + (o.d - o.c) * s - _) * s,
                                    y = g.a + (g.b - g.a) * s,
                                    x = g.b + (g.c - g.b) * s,
                                    y += (x - y) * s,
                                    x += (g.c + (g.d - g.c) * s - x) * s,
                                    l = m ? Math.atan2(x - y, _ - v) * w + b : this._initialRotations[r],
                                    this._mod[a] && (l = this._mod[a](l, d)),
                                    f[a] ? d[a](l) : d[a] = l)
                            }
                        }
                    })
                      , v = g.prototype;
                    g.bezierThrough = p,
                    g.cubicToQuadratic = h,
                    g._autoCSS = !0,
                    g.quadraticToCubic = function(t, e, i) {
                        return new s(t,(2 * e + t) / 3,(2 * e + i) / 3,i)
                    }
                    ,
                    g._cssRegister = function() {
                        var t = o.CSSPlugin;
                        if (t) {
                            var e = t._internals
                              , i = e._parseToProxy
                              , n = e._setPluginRatio
                              , r = e.CSSPropTween;
                            e._registerComplexSpecialProp("bezier", {
                                parser: function(t, e, a, o, s, l) {
                                    e instanceof Array && (e = {
                                        values: e
                                    }),
                                    l = new g;
                                    var h, c, u, p = e.values, f = p.length - 1, d = [], m = {};
                                    if (f < 0)
                                        return s;
                                    for (h = 0; h <= f; h++)
                                        u = i(t, p[h], o, s, l, f !== h),
                                        d[h] = u.end;
                                    for (c in e)
                                        m[c] = e[c];
                                    return m.values = d,
                                    s = new r(t,"bezier",0,0,u.pt,2),
                                    s.data = u,
                                    s.plugin = l,
                                    s.setRatio = n,
                                    0 === m.autoRotate && (m.autoRotate = !0),
                                    !m.autoRotate || m.autoRotate instanceof Array || (h = m.autoRotate === !0 ? 0 : Number(m.autoRotate),
                                    m.autoRotate = null != u.end.left ? [["left", "top", "rotation", h, !1]] : null != u.end.x && [["x", "y", "rotation", h, !1]]),
                                    m.autoRotate && (o._transform || o._enableTransforms(!1),
                                    u.autoRotate = o._target._gsTransform,
                                    u.proxy.rotation = u.autoRotate.rotation || 0,
                                    o._overwriteProps.push("rotation")),
                                    l._onInitTween(u.proxy, m, o._tween),
                                    s
                                }
                            })
                        }
                    }
                    ,
                    v._mod = function(t) {
                        for (var e, i = this._overwriteProps, n = i.length; --n > -1; )
                            e = t[i[n]],
                            e && "function" == typeof e && (this._mod[i[n]] = e)
                    }
                    ,
                    v._kill = function(t) {
                        var e, i, n = this._props;
                        for (e in this._beziers)
                            if (e in t)
                                for (delete this._beziers[e],
                                delete this._func[e],
                                i = n.length; --i > -1; )
                                    n[i] === e && n.splice(i, 1);
                        if (n = this._autoRotate)
                            for (i = n.length; --i > -1; )
                                t[n[i][2]] && n.splice(i, 1);
                        return this._super._kill.call(this, t)
                    }
                }(),
                i._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(t, e) {
                    var n, r, a, o, s = function() {
                        t.call(this, "css"),
                        this._overwriteProps.length = 0,
                        this.setRatio = s.prototype.setRatio
                    }, l = i._gsDefine.globals, h = {}, c = s.prototype = new t("css");
                    c.constructor = s,
                    s.version = "1.19.0",
                    s.API = 2,
                    s.defaultTransformPerspective = 0,
                    s.defaultSkewType = "compensated",
                    s.defaultSmoothOrigin = !0,
                    c = "px",
                    s.suffixMap = {
                        top: c,
                        right: c,
                        bottom: c,
                        left: c,
                        width: c,
                        height: c,
                        fontSize: c,
                        padding: c,
                        margin: c,
                        perspective: c,
                        lineHeight: ""
                    };
                    var u, p, f, d, m, g, v, y, _ = /(?:\-|\.|\b)(\d|\.|e\-)+/g, x = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, b = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, w = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, M = /(?:\d|\-|\+|=|#|\.)*/g, T = /opacity *= *([^)]*)/i, S = /opacity:([^;]*)/i, C = /alpha\(opacity *=.+?\)/i, A = /^(rgb|hsl)/, P = /([A-Z])/g, E = /-([a-z])/gi, L = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, O = function(t, e) {
                        return e.toUpperCase()
                    }, R = /(?:Left|Right|Width)/i, D = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, I = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, k = /,(?=[^\)]*(?:\(|$))/gi, N = /[\s,\(]/i, F = Math.PI / 180, B = 180 / Math.PI, U = {}, z = document, j = function(t) {
                        return z.createElementNS ? z.createElementNS("http://www.w3.org/1999/xhtml", t) : z.createElement(t)
                    }, V = j("div"), G = j("img"), H = s._internals = {
                        _specialProps: h
                    }, W = navigator.userAgent, X = function() {
                        var t = W.indexOf("Android")
                          , e = j("a");
                        return f = W.indexOf("Safari") !== -1 && W.indexOf("Chrome") === -1 && (t === -1 || Number(W.substr(t + 8, 1)) > 3),
                        m = f && Number(W.substr(W.indexOf("Version/") + 8, 1)) < 6,
                        d = W.indexOf("Firefox") !== -1,
                        (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(W) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(W)) && (g = parseFloat(RegExp.$1)),
                        !!e && (e.style.cssText = "top:1px;opacity:.55;",
                        /^0.55/.test(e.style.opacity))
                    }(), q = function(t) {
                        return T.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                    }, Y = function(t) {
                        window.console
                    }, Z = "", $ = "", K = function(t, e) {
                        e = e || V;
                        var i, n, r = e.style;
                        if (void 0 !== r[t])
                            return t;
                        for (t = t.charAt(0).toUpperCase() + t.substr(1),
                        i = ["O", "Moz", "ms", "Ms", "Webkit"],
                        n = 5; --n > -1 && void 0 === r[i[n] + t]; )
                            ;
                        return n >= 0 ? ($ = 3 === n ? "ms" : i[n],
                        Z = "-" + $.toLowerCase() + "-",
                        $ + t) : null
                    }, Q = z.defaultView ? z.defaultView.getComputedStyle : function() {}
                    , J = s.getStyle = function(t, e, i, n, r) {
                        var a;
                        return X || "opacity" !== e ? (!n && t.style[e] ? a = t.style[e] : (i = i || Q(t)) ? a = i[e] || i.getPropertyValue(e) || i.getPropertyValue(e.replace(P, "-$1").toLowerCase()) : t.currentStyle && (a = t.currentStyle[e]),
                        null == r || a && "none" !== a && "auto" !== a && "auto auto" !== a ? a : r) : q(t)
                    }
                    , tt = H.convertToPixels = function(t, i, n, r, a) {
                        if ("px" === r || !r)
                            return n;
                        if ("auto" === r || !n)
                            return 0;
                        var o, l, h, c = R.test(i), u = t, p = V.style, f = n < 0, d = 1 === n;
                        if (f && (n = -n),
                        d && (n *= 100),
                        "%" === r && i.indexOf("border") !== -1)
                            o = n / 100 * (c ? t.clientWidth : t.clientHeight);
                        else {
                            if (p.cssText = "border:0 solid red;position:" + J(t, "position") + ";line-height:0;",
                            "%" !== r && u.appendChild && "v" !== r.charAt(0) && "rem" !== r)
                                p[c ? "borderLeftWidth" : "borderTopWidth"] = n + r;
                            else {
                                if (u = t.parentNode || z.body,
                                l = u._gsCache,
                                h = e.ticker.frame,
                                l && c && l.time === h)
                                    return l.width * n / 100;
                                p[c ? "width" : "height"] = n + r
                            }
                            u.appendChild(V),
                            o = parseFloat(V[c ? "offsetWidth" : "offsetHeight"]),
                            u.removeChild(V),
                            c && "%" === r && s.cacheWidths !== !1 && (l = u._gsCache = u._gsCache || {},
                            l.time = h,
                            l.width = o / n * 100),
                            0 !== o || a || (o = tt(t, i, n, r, !0))
                        }
                        return d && (o /= 100),
                        f ? -o : o
                    }
                    , et = H.calculateOffset = function(t, e, i) {
                        if ("absolute" !== J(t, "position", i))
                            return 0;
                        var n = "left" === e ? "Left" : "Top"
                          , r = J(t, "margin" + n, i);
                        return t["offset" + n] - (tt(t, e, parseFloat(r), r.replace(M, "")) || 0)
                    }
                    , it = function(t, e) {
                        var i, n, r, a = {};
                        if (e = e || Q(t, null))
                            if (i = e.length)
                                for (; --i > -1; )
                                    r = e[i],
                                    r.indexOf("-transform") !== -1 && Et !== r || (a[r.replace(E, O)] = e.getPropertyValue(r));
                            else
                                for (i in e)
                                    i.indexOf("Transform") !== -1 && Pt !== i || (a[i] = e[i]);
                        else if (e = t.currentStyle || t.style)
                            for (i in e)
                                "string" == typeof i && void 0 === a[i] && (a[i.replace(E, O)] = e[i]);
                        return X || (a.opacity = q(t)),
                        n = Vt(t, e, !1),
                        a.rotation = n.rotation,
                        a.skewX = n.skewX,
                        a.scaleX = n.scaleX,
                        a.scaleY = n.scaleY,
                        a.x = n.x,
                        a.y = n.y,
                        Ot && (a.z = n.z,
                        a.rotationX = n.rotationX,
                        a.rotationY = n.rotationY,
                        a.scaleZ = n.scaleZ),
                        a.filters && delete a.filters,
                        a
                    }, nt = function(t, e, i, n, r) {
                        var a, o, s, l = {}, h = t.style;
                        for (o in i)
                            "cssText" !== o && "length" !== o && isNaN(o) && (e[o] !== (a = i[o]) || r && r[o]) && o.indexOf("Origin") === -1 && ("number" != typeof a && "string" != typeof a || (l[o] = "auto" !== a || "left" !== o && "top" !== o ? "" !== a && "auto" !== a && "none" !== a || "string" != typeof e[o] || "" === e[o].replace(w, "") ? a : 0 : et(t, o),
                            void 0 !== h[o] && (s = new yt(h,o,h[o],s))));
                        if (n)
                            for (o in n)
                                "className" !== o && (l[o] = n[o]);
                        return {
                            difs: l,
                            firstMPT: s
                        }
                    }, rt = {
                        width: ["Left", "Right"],
                        height: ["Top", "Bottom"]
                    }, at = ["marginLeft", "marginRight", "marginTop", "marginBottom"], ot = function(t, e, i) {
                        if ("svg" === (t.nodeName + "").toLowerCase())
                            return (i || Q(t))[e] || 0;
                        if (t.getBBox && Ut(t))
                            return t.getBBox()[e] || 0;
                        var n = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight)
                          , r = rt[e]
                          , a = r.length;
                        for (i = i || Q(t, null); --a > -1; )
                            n -= parseFloat(J(t, "padding" + r[a], i, !0)) || 0,
                            n -= parseFloat(J(t, "border" + r[a] + "Width", i, !0)) || 0;
                        return n
                    }, st = function(t, e) {
                        if ("contain" === t || "auto" === t || "auto auto" === t)
                            return t + " ";
                        null != t && "" !== t || (t = "0 0");
                        var i, n = t.split(" "), r = t.indexOf("left") !== -1 ? "0%" : t.indexOf("right") !== -1 ? "100%" : n[0], a = t.indexOf("top") !== -1 ? "0%" : t.indexOf("bottom") !== -1 ? "100%" : n[1];
                        if (n.length > 3 && !e) {
                            for (n = t.split(", ").join(",").split(","),
                            t = [],
                            i = 0; i < n.length; i++)
                                t.push(st(n[i]));
                            return t.join(",")
                        }
                        return null == a ? a = "center" === r ? "50%" : "0" : "center" === a && (a = "50%"),
                        ("center" === r || isNaN(parseFloat(r)) && (r + "").indexOf("=") === -1) && (r = "50%"),
                        t = r + " " + a + (n.length > 2 ? " " + n[2] : ""),
                        e && (e.oxp = r.indexOf("%") !== -1,
                        e.oyp = a.indexOf("%") !== -1,
                        e.oxr = "=" === r.charAt(1),
                        e.oyr = "=" === a.charAt(1),
                        e.ox = parseFloat(r.replace(w, "")),
                        e.oy = parseFloat(a.replace(w, "")),
                        e.v = t),
                        e || t
                    }, lt = function(t, e) {
                        return "function" == typeof t && (t = t(y, v)),
                        "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e) || 0
                    }, ht = function(t, e) {
                        return "function" == typeof t && (t = t(y, v)),
                        null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) + e : parseFloat(t) || 0
                    }, ct = function(t, e, i, n) {
                        var r, a, o, s, l, h = 1e-6;
                        return "function" == typeof t && (t = t(y, v)),
                        null == t ? s = e : "number" == typeof t ? s = t : (r = 360,
                        a = t.split("_"),
                        l = "=" === t.charAt(1),
                        o = (l ? parseInt(t.charAt(0) + "1", 10) * parseFloat(a[0].substr(2)) : parseFloat(a[0])) * (t.indexOf("rad") === -1 ? 1 : B) - (l ? 0 : e),
                        a.length && (n && (n[i] = e + o),
                        t.indexOf("short") !== -1 && (o %= r,
                        o !== o % (r / 2) && (o = o < 0 ? o + r : o - r)),
                        t.indexOf("_cw") !== -1 && o < 0 ? o = (o + 9999999999 * r) % r - (o / r | 0) * r : t.indexOf("ccw") !== -1 && o > 0 && (o = (o - 9999999999 * r) % r - (o / r | 0) * r)),
                        s = e + o),
                        s < h && s > -h && (s = 0),
                        s
                    }, ut = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0]
                    }, pt = function(t, e, i) {
                        return t = t < 0 ? t + 1 : t > 1 ? t - 1 : t,
                        255 * (6 * t < 1 ? e + (i - e) * t * 6 : t < .5 ? i : 3 * t < 2 ? e + (i - e) * (2 / 3 - t) * 6 : e) + .5 | 0
                    }, ft = s.parseColor = function(t, e) {
                        var i, n, r, a, o, s, l, h, c, u, p;
                        if (t)
                            if ("number" == typeof t)
                                i = [t >> 16, t >> 8 & 255, 255 & t];
                            else {
                                if ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)),
                                ut[t])
                                    i = ut[t];
                                else if ("#" === t.charAt(0))
                                    4 === t.length && (n = t.charAt(1),
                                    r = t.charAt(2),
                                    a = t.charAt(3),
                                    t = "#" + n + n + r + r + a + a),
                                    t = parseInt(t.substr(1), 16),
                                    i = [t >> 16, t >> 8 & 255, 255 & t];
                                else if ("hsl" === t.substr(0, 3))
                                    if (i = p = t.match(_),
                                    e) {
                                        if (t.indexOf("=") !== -1)
                                            return t.match(x)
                                    } else
                                        o = Number(i[0]) % 360 / 360,
                                        s = Number(i[1]) / 100,
                                        l = Number(i[2]) / 100,
                                        r = l <= .5 ? l * (s + 1) : l + s - l * s,
                                        n = 2 * l - r,
                                        i.length > 3 && (i[3] = Number(t[3])),
                                        i[0] = pt(o + 1 / 3, n, r),
                                        i[1] = pt(o, n, r),
                                        i[2] = pt(o - 1 / 3, n, r);
                                else
                                    i = t.match(_) || ut.transparent;
                                i[0] = Number(i[0]),
                                i[1] = Number(i[1]),
                                i[2] = Number(i[2]),
                                i.length > 3 && (i[3] = Number(i[3]))
                            }
                        else
                            i = ut.black;
                        return e && !p && (n = i[0] / 255,
                        r = i[1] / 255,
                        a = i[2] / 255,
                        h = Math.max(n, r, a),
                        c = Math.min(n, r, a),
                        l = (h + c) / 2,
                        h === c ? o = s = 0 : (u = h - c,
                        s = l > .5 ? u / (2 - h - c) : u / (h + c),
                        o = h === n ? (r - a) / u + (r < a ? 6 : 0) : h === r ? (a - n) / u + 2 : (n - r) / u + 4,
                        o *= 60),
                        i[0] = o + .5 | 0,
                        i[1] = 100 * s + .5 | 0,
                        i[2] = 100 * l + .5 | 0),
                        i
                    }
                    , dt = function(t, e) {
                        var i, n, r, a = t.match(mt) || [], o = 0, s = a.length ? "" : t;
                        for (i = 0; i < a.length; i++)
                            n = a[i],
                            r = t.substr(o, t.indexOf(n, o) - o),
                            o += r.length + n.length,
                            n = ft(n, e),
                            3 === n.length && n.push(1),
                            s += r + (e ? "hsla(" + n[0] + "," + n[1] + "%," + n[2] + "%," + n[3] : "rgba(" + n.join(",")) + ")";
                        return s + t.substr(o)
                    }, mt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                    for (c in ut)
                        mt += "|" + c + "\\b";
                    mt = new RegExp(mt + ")","gi"),
                    s.colorStringFilter = function(t) {
                        var e, i = t[0] + t[1];
                        mt.test(i) && (e = i.indexOf("hsl(") !== -1 || i.indexOf("hsla(") !== -1,
                        t[0] = dt(t[0], e),
                        t[1] = dt(t[1], e)),
                        mt.lastIndex = 0
                    }
                    ,
                    e.defaultStringFilter || (e.defaultStringFilter = s.colorStringFilter);
                    var gt = function(t, e, i, n) {
                        if (null == t)
                            return function(t) {
                                return t
                            }
                            ;
                        var r, a = e ? (t.match(mt) || [""])[0] : "", o = t.split(a).join("").match(b) || [], s = t.substr(0, t.indexOf(o[0])), l = ")" === t.charAt(t.length - 1) ? ")" : "", h = t.indexOf(" ") !== -1 ? " " : ",", c = o.length, u = c > 0 ? o[0].replace(_, "") : "";
                        return c ? r = e ? function(t) {
                            var e, p, f, d;
                            if ("number" == typeof t)
                                t += u;
                            else if (n && k.test(t)) {
                                for (d = t.replace(k, "|").split("|"),
                                f = 0; f < d.length; f++)
                                    d[f] = r(d[f]);
                                return d.join(",")
                            }
                            if (e = (t.match(mt) || [a])[0],
                            p = t.split(e).join("").match(b) || [],
                            f = p.length,
                            c > f--)
                                for (; ++f < c; )
                                    p[f] = i ? p[(f - 1) / 2 | 0] : o[f];
                            return s + p.join(h) + h + e + l + (t.indexOf("inset") !== -1 ? " inset" : "")
                        }
                        : function(t) {
                            var e, a, p;
                            if ("number" == typeof t)
                                t += u;
                            else if (n && k.test(t)) {
                                for (a = t.replace(k, "|").split("|"),
                                p = 0; p < a.length; p++)
                                    a[p] = r(a[p]);
                                return a.join(",")
                            }
                            if (e = t.match(b) || [],
                            p = e.length,
                            c > p--)
                                for (; ++p < c; )
                                    e[p] = i ? e[(p - 1) / 2 | 0] : o[p];
                            return s + e.join(h) + l
                        }
                        : function(t) {
                            return t
                        }
                    }
                      , vt = function(t) {
                        return t = t.split(","),
                        function(e, i, n, r, a, o, s) {
                            var l, h = (i + "").split(" ");
                            for (s = {},
                            l = 0; l < 4; l++)
                                s[t[l]] = h[l] = h[l] || h[(l - 1) / 2 >> 0];
                            return r.parse(e, s, a, o)
                        }
                    }
                      , yt = (H._setPluginRatio = function(t) {
                        this.plugin.setRatio(t);
                        for (var e, i, n, r, a, o = this.data, s = o.proxy, l = o.firstMPT, h = 1e-6; l; )
                            e = s[l.v],
                            l.r ? e = Math.round(e) : e < h && e > -h && (e = 0),
                            l.t[l.p] = e,
                            l = l._next;
                        if (o.autoRotate && (o.autoRotate.rotation = o.mod ? o.mod(s.rotation, this.t) : s.rotation),
                        1 === t || 0 === t)
                            for (l = o.firstMPT,
                            a = 1 === t ? "e" : "b"; l; ) {
                                if (i = l.t,
                                i.type) {
                                    if (1 === i.type) {
                                        for (r = i.xs0 + i.s + i.xs1,
                                        n = 1; n < i.l; n++)
                                            r += i["xn" + n] + i["xs" + (n + 1)];
                                        i[a] = r
                                    }
                                } else
                                    i[a] = i.s + i.xs0;
                                l = l._next
                            }
                    }
                    ,
                    function(t, e, i, n, r) {
                        this.t = t,
                        this.p = e,
                        this.v = i,
                        this.r = r,
                        n && (n._prev = this,
                        this._next = n)
                    }
                    )
                      , _t = (H._parseToProxy = function(t, e, i, n, r, a) {
                        var o, s, l, h, c, u = n, p = {}, f = {}, d = i._transform, m = U;
                        for (i._transform = null,
                        U = e,
                        n = c = i.parse(t, e, n, r),
                        U = m,
                        a && (i._transform = d,
                        u && (u._prev = null,
                        u._prev && (u._prev._next = null))); n && n !== u; ) {
                            if (n.type <= 1 && (s = n.p,
                            f[s] = n.s + n.c,
                            p[s] = n.s,
                            a || (h = new yt(n,"s",s,h,n.r),
                            n.c = 0),
                            1 === n.type))
                                for (o = n.l; --o > 0; )
                                    l = "xn" + o,
                                    s = n.p + "_" + l,
                                    f[s] = n.data[l],
                                    p[s] = n[l],
                                    a || (h = new yt(n,l,s,h,n.rxp[l]));
                            n = n._next
                        }
                        return {
                            proxy: p,
                            end: f,
                            firstMPT: h,
                            pt: c
                        }
                    }
                    ,
                    H.CSSPropTween = function(t, e, i, r, a, s, l, h, c, u, p) {
                        this.t = t,
                        this.p = e,
                        this.s = i,
                        this.c = r,
                        this.n = l || e,
                        t instanceof _t || o.push(this.n),
                        this.r = h,
                        this.type = s || 0,
                        c && (this.pr = c,
                        n = !0),
                        this.b = void 0 === u ? i : u,
                        this.e = void 0 === p ? i + r : p,
                        a && (this._next = a,
                        a._prev = this)
                    }
                    )
                      , xt = function(t, e, i, n, r, a) {
                        var o = new _t(t,e,i,n - i,r,(-1),a);
                        return o.b = i,
                        o.e = o.xs0 = n,
                        o
                    }
                      , bt = s.parseComplex = function(t, e, i, n, r, a, o, l, h, c) {
                        i = i || a || "",
                        "function" == typeof n && (n = n(y, v)),
                        o = new _t(t,e,0,0,o,c ? 2 : 1,null,(!1),l,i,n),
                        n += "",
                        r && mt.test(n + i) && (n = [i, n],
                        s.colorStringFilter(n),
                        i = n[0],
                        n = n[1]);
                        var p, f, d, m, g, b, w, M, T, S, C, A, P, E = i.split(", ").join(",").split(" "), L = n.split(", ").join(",").split(" "), O = E.length, R = u !== !1;
                        for (n.indexOf(",") === -1 && i.indexOf(",") === -1 || (E = E.join(" ").replace(k, ", ").split(" "),
                        L = L.join(" ").replace(k, ", ").split(" "),
                        O = E.length),
                        O !== L.length && (E = (a || "").split(" "),
                        O = E.length),
                        o.plugin = h,
                        o.setRatio = c,
                        mt.lastIndex = 0,
                        p = 0; p < O; p++)
                            if (m = E[p],
                            g = L[p],
                            M = parseFloat(m),
                            M || 0 === M)
                                o.appendXtra("", M, lt(g, M), g.replace(x, ""), R && g.indexOf("px") !== -1, !0);
                            else if (r && mt.test(m))
                                A = g.indexOf(")") + 1,
                                A = ")" + (A ? g.substr(A) : ""),
                                P = g.indexOf("hsl") !== -1 && X,
                                m = ft(m, P),
                                g = ft(g, P),
                                T = m.length + g.length > 6,
                                T && !X && 0 === g[3] ? (o["xs" + o.l] += o.l ? " transparent" : "transparent",
                                o.e = o.e.split(L[p]).join("transparent")) : (X || (T = !1),
                                P ? o.appendXtra(T ? "hsla(" : "hsl(", m[0], lt(g[0], m[0]), ",", !1, !0).appendXtra("", m[1], lt(g[1], m[1]), "%,", !1).appendXtra("", m[2], lt(g[2], m[2]), T ? "%," : "%" + A, !1) : o.appendXtra(T ? "rgba(" : "rgb(", m[0], g[0] - m[0], ",", !0, !0).appendXtra("", m[1], g[1] - m[1], ",", !0).appendXtra("", m[2], g[2] - m[2], T ? "," : A, !0),
                                T && (m = m.length < 4 ? 1 : m[3],
                                o.appendXtra("", m, (g.length < 4 ? 1 : g[3]) - m, A, !1))),
                                mt.lastIndex = 0;
                            else if (b = m.match(_)) {
                                if (w = g.match(x),
                                !w || w.length !== b.length)
                                    return o;
                                for (d = 0,
                                f = 0; f < b.length; f++)
                                    C = b[f],
                                    S = m.indexOf(C, d),
                                    o.appendXtra(m.substr(d, S - d), Number(C), lt(w[f], C), "", R && "px" === m.substr(S + C.length, 2), 0 === f),
                                    d = S + C.length;
                                o["xs" + o.l] += m.substr(d)
                            } else
                                o["xs" + o.l] += o.l || o["xs" + o.l] ? " " + g : g;
                        if (n.indexOf("=") !== -1 && o.data) {
                            for (A = o.xs0 + o.data.s,
                            p = 1; p < o.l; p++)
                                A += o["xs" + p] + o.data["xn" + p];
                            o.e = A + o["xs" + p]
                        }
                        return o.l || (o.type = -1,
                        o.xs0 = o.e),
                        o.xfirst || o
                    }
                      , wt = 9;
                    for (c = _t.prototype,
                    c.l = c.pr = 0; --wt > 0; )
                        c["xn" + wt] = 0,
                        c["xs" + wt] = "";
                    c.xs0 = "",
                    c._next = c._prev = c.xfirst = c.data = c.plugin = c.setRatio = c.rxp = null,
                    c.appendXtra = function(t, e, i, n, r, a) {
                        var o = this
                          , s = o.l;
                        return o["xs" + s] += a && (s || o["xs" + s]) ? " " + t : t || "",
                        i || 0 === s || o.plugin ? (o.l++,
                        o.type = o.setRatio ? 2 : 1,
                        o["xs" + o.l] = n || "",
                        s > 0 ? (o.data["xn" + s] = e + i,
                        o.rxp["xn" + s] = r,
                        o["xn" + s] = e,
                        o.plugin || (o.xfirst = new _t(o,"xn" + s,e,i,o.xfirst || o,0,o.n,r,o.pr),
                        o.xfirst.xs0 = 0),
                        o) : (o.data = {
                            s: e + i
                        },
                        o.rxp = {},
                        o.s = e,
                        o.c = i,
                        o.r = r,
                        o)) : (o["xs" + s] += e + (n || ""),
                        o)
                    }
                    ;
                    var Mt = function(t, e) {
                        e = e || {},
                        this.p = e.prefix ? K(t) || t : t,
                        h[t] = h[this.p] = this,
                        this.format = e.formatter || gt(e.defaultValue, e.color, e.collapsible, e.multi),
                        e.parser && (this.parse = e.parser),
                        this.clrs = e.color,
                        this.multi = e.multi,
                        this.keyword = e.keyword,
                        this.dflt = e.defaultValue,
                        this.pr = e.priority || 0
                    }
                      , Tt = H._registerComplexSpecialProp = function(t, e, i) {
                        "object" != typeof e && (e = {
                            parser: i
                        });
                        var n, r, a = t.split(","), o = e.defaultValue;
                        for (i = i || [o],
                        n = 0; n < a.length; n++)
                            e.prefix = 0 === n && e.prefix,
                            e.defaultValue = i[n] || o,
                            r = new Mt(a[n],e)
                    }
                      , St = H._registerPluginProp = function(t) {
                        if (!h[t]) {
                            var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                            Tt(t, {
                                parser: function(t, i, n, r, a, o, s) {
                                    var c = l.com.greensock.plugins[e];
                                    return c ? (c._cssRegister(),
                                    h[n].parse(t, i, n, r, a, o, s)) : (Y("Error: " + e + " js file not loaded."),
                                    a)
                                }
                            })
                        }
                    }
                    ;
                    c = Mt.prototype,
                    c.parseComplex = function(t, e, i, n, r, a) {
                        var o, s, l, h, c, u, p = this.keyword;
                        if (this.multi && (k.test(i) || k.test(e) ? (s = e.replace(k, "|").split("|"),
                        l = i.replace(k, "|").split("|")) : p && (s = [e],
                        l = [i])),
                        l) {
                            for (h = l.length > s.length ? l.length : s.length,
                            o = 0; o < h; o++)
                                e = s[o] = s[o] || this.dflt,
                                i = l[o] = l[o] || this.dflt,
                                p && (c = e.indexOf(p),
                                u = i.indexOf(p),
                                c !== u && (u === -1 ? s[o] = s[o].split(p).join("") : c === -1 && (s[o] += " " + p)));
                            e = s.join(", "),
                            i = l.join(", ")
                        }
                        return bt(t, this.p, e, i, this.clrs, this.dflt, n, this.pr, r, a)
                    }
                    ,
                    c.parse = function(t, e, i, n, r, o, s) {
                        return this.parseComplex(t.style, this.format(J(t, this.p, a, !1, this.dflt)), this.format(e), r, o)
                    }
                    ,
                    s.registerSpecialProp = function(t, e, i) {
                        Tt(t, {
                            parser: function(t, n, r, a, o, s, l) {
                                var h = new _t(t,r,0,0,o,2,r,(!1),i);
                                return h.plugin = s,
                                h.setRatio = e(t, n, a._tween, r),
                                h
                            },
                            priority: i
                        })
                    }
                    ,
                    s.useSVGTransformAttr = f || d;
                    var Ct, At = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","), Pt = K("transform"), Et = Z + "transform", Lt = K("transformOrigin"), Ot = null !== K("perspective"), Rt = H.Transform = function() {
                        this.perspective = parseFloat(s.defaultTransformPerspective) || 0,
                        this.force3D = !(s.defaultForce3D === !1 || !Ot) && (s.defaultForce3D || "auto")
                    }
                    , Dt = window.SVGElement, It = function(t, e, i) {
                        var n, r = z.createElementNS("http://www.w3.org/2000/svg", t), a = /([a-z])([A-Z])/g;
                        for (n in i)
                            r.setAttributeNS(null, n.replace(a, "$1-$2").toLowerCase(), i[n]);
                        return e.appendChild(r),
                        r
                    }, kt = z.documentElement, Nt = function() {
                        var t, e, i, n = g || /Android/i.test(W) && !window.chrome;
                        return z.createElementNS && !n && (t = It("svg", kt),
                        e = It("rect", t, {
                            width: 100,
                            height: 50,
                            x: 100
                        }),
                        i = e.getBoundingClientRect().width,
                        e.style[Lt] = "50% 50%",
                        e.style[Pt] = "scaleX(0.5)",
                        n = i === e.getBoundingClientRect().width && !(d && Ot),
                        kt.removeChild(t)),
                        n
                    }(), Ft = function(t, e, i, n, r, a) {
                        var o, l, h, c, u, p, f, d, m, g, v, y, _, x, b = t._gsTransform, w = jt(t, !0);
                        b && (_ = b.xOrigin,
                        x = b.yOrigin),
                        (!n || (o = n.split(" ")).length < 2) && (f = t.getBBox(),
                        e = st(e).split(" "),
                        o = [(e[0].indexOf("%") !== -1 ? parseFloat(e[0]) / 100 * f.width : parseFloat(e[0])) + f.x, (e[1].indexOf("%") !== -1 ? parseFloat(e[1]) / 100 * f.height : parseFloat(e[1])) + f.y]),
                        i.xOrigin = c = parseFloat(o[0]),
                        i.yOrigin = u = parseFloat(o[1]),
                        n && w !== zt && (p = w[0],
                        f = w[1],
                        d = w[2],
                        m = w[3],
                        g = w[4],
                        v = w[5],
                        y = p * m - f * d,
                        l = c * (m / y) + u * (-d / y) + (d * v - m * g) / y,
                        h = c * (-f / y) + u * (p / y) - (p * v - f * g) / y,
                        c = i.xOrigin = o[0] = l,
                        u = i.yOrigin = o[1] = h),
                        b && (a && (i.xOffset = b.xOffset,
                        i.yOffset = b.yOffset,
                        b = i),
                        r || r !== !1 && s.defaultSmoothOrigin !== !1 ? (l = c - _,
                        h = u - x,
                        b.xOffset += l * w[0] + h * w[2] - l,
                        b.yOffset += l * w[1] + h * w[3] - h) : b.xOffset = b.yOffset = 0),
                        a || t.setAttribute("data-svg-origin", o.join(" "))
                    }, Bt = function(t) {
                        try {
                            return t.getBBox()
                        } catch (t) {}
                    }, Ut = function(t) {
                        return !!(Dt && t.getBBox && t.getCTM && Bt(t) && (!t.parentNode || t.parentNode.getBBox && t.parentNode.getCTM))
                    }, zt = [1, 0, 0, 1, 0, 0], jt = function(t, e) {
                        var i, n, r, a, o, s, l = t._gsTransform || new Rt, h = 1e5, c = t.style;
                        if (Pt ? n = J(t, Et, null, !0) : t.currentStyle && (n = t.currentStyle.filter.match(D),
                        n = n && 4 === n.length ? [n[0].substr(4), Number(n[2].substr(4)), Number(n[1].substr(4)), n[3].substr(4), l.x || 0, l.y || 0].join(",") : ""),
                        i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                        i && Pt && ((s = "none" === Q(t).display) || !t.parentNode) && (s && (a = c.display,
                        c.display = "block"),
                        t.parentNode || (o = 1,
                        kt.appendChild(t)),
                        n = J(t, Et, null, !0),
                        i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                        a ? c.display = a : s && Xt(c, "display"),
                        o && kt.removeChild(t)),
                        (l.svg || t.getBBox && Ut(t)) && (i && (c[Pt] + "").indexOf("matrix") !== -1 && (n = c[Pt],
                        i = 0),
                        r = t.getAttribute("transform"),
                        i && r && (r.indexOf("matrix") !== -1 ? (n = r,
                        i = 0) : r.indexOf("translate") !== -1 && (n = "matrix(1,0,0,1," + r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")",
                        i = 0))),
                        i)
                            return zt;
                        for (r = (n || "").match(_) || [],
                        wt = r.length; --wt > -1; )
                            a = Number(r[wt]),
                            r[wt] = (o = a - (a |= 0)) ? (o * h + (o < 0 ? -.5 : .5) | 0) / h + a : a;
                        return e && r.length > 6 ? [r[0], r[1], r[4], r[5], r[12], r[13]] : r
                    }, Vt = H.getTransform = function(t, i, n, r) {
                        if (t._gsTransform && n && !r)
                            return t._gsTransform;
                        var a, o, l, h, c, u, p = n ? t._gsTransform || new Rt : new Rt, f = p.scaleX < 0, d = 2e-5, m = 1e5, g = Ot ? parseFloat(J(t, Lt, i, !1, "0 0 0").split(" ")[2]) || p.zOrigin || 0 : 0, v = parseFloat(s.defaultTransformPerspective) || 0;
                        if (p.svg = !(!t.getBBox || !Ut(t)),
                        p.svg && (Ft(t, J(t, Lt, i, !1, "50% 50%") + "", p, t.getAttribute("data-svg-origin")),
                        Ct = s.useSVGTransformAttr || Nt),
                        a = jt(t),
                        a !== zt) {
                            if (16 === a.length) {
                                var y, _, x, b, w, M = a[0], T = a[1], S = a[2], C = a[3], A = a[4], P = a[5], E = a[6], L = a[7], O = a[8], R = a[9], D = a[10], I = a[12], k = a[13], N = a[14], F = a[11], U = Math.atan2(E, D);
                                p.zOrigin && (N = -p.zOrigin,
                                I = O * N - a[12],
                                k = R * N - a[13],
                                N = D * N + p.zOrigin - a[14]),
                                p.rotationX = U * B,
                                U && (b = Math.cos(-U),
                                w = Math.sin(-U),
                                y = A * b + O * w,
                                _ = P * b + R * w,
                                x = E * b + D * w,
                                O = A * -w + O * b,
                                R = P * -w + R * b,
                                D = E * -w + D * b,
                                F = L * -w + F * b,
                                A = y,
                                P = _,
                                E = x),
                                U = Math.atan2(-S, D),
                                p.rotationY = U * B,
                                U && (b = Math.cos(-U),
                                w = Math.sin(-U),
                                y = M * b - O * w,
                                _ = T * b - R * w,
                                x = S * b - D * w,
                                R = T * w + R * b,
                                D = S * w + D * b,
                                F = C * w + F * b,
                                M = y,
                                T = _,
                                S = x),
                                U = Math.atan2(T, M),
                                p.rotation = U * B,
                                U && (b = Math.cos(-U),
                                w = Math.sin(-U),
                                M = M * b + A * w,
                                _ = T * b + P * w,
                                P = T * -w + P * b,
                                E = S * -w + E * b,
                                T = _),
                                p.rotationX && Math.abs(p.rotationX) + Math.abs(p.rotation) > 359.9 && (p.rotationX = p.rotation = 0,
                                p.rotationY = 180 - p.rotationY),
                                p.scaleX = (Math.sqrt(M * M + T * T) * m + .5 | 0) / m,
                                p.scaleY = (Math.sqrt(P * P + R * R) * m + .5 | 0) / m,
                                p.scaleZ = (Math.sqrt(E * E + D * D) * m + .5 | 0) / m,
                                p.rotationX || p.rotationY ? p.skewX = 0 : (p.skewX = A || P ? Math.atan2(A, P) * B + p.rotation : p.skewX || 0,
                                Math.abs(p.skewX) > 90 && Math.abs(p.skewX) < 270 && (f ? (p.scaleX *= -1,
                                p.skewX += p.rotation <= 0 ? 180 : -180,
                                p.rotation += p.rotation <= 0 ? 180 : -180) : (p.scaleY *= -1,
                                p.skewX += p.skewX <= 0 ? 180 : -180))),
                                p.perspective = F ? 1 / (F < 0 ? -F : F) : 0,
                                p.x = I,
                                p.y = k,
                                p.z = N,
                                p.svg && (p.x -= p.xOrigin - (p.xOrigin * M - p.yOrigin * A),
                                p.y -= p.yOrigin - (p.yOrigin * T - p.xOrigin * P))
                            } else if (!Ot || r || !a.length || p.x !== a[4] || p.y !== a[5] || !p.rotationX && !p.rotationY) {
                                var z = a.length >= 6
                                  , j = z ? a[0] : 1
                                  , V = a[1] || 0
                                  , G = a[2] || 0
                                  , H = z ? a[3] : 1;
                                p.x = a[4] || 0,
                                p.y = a[5] || 0,
                                l = Math.sqrt(j * j + V * V),
                                h = Math.sqrt(H * H + G * G),
                                c = j || V ? Math.atan2(V, j) * B : p.rotation || 0,
                                u = G || H ? Math.atan2(G, H) * B + c : p.skewX || 0,
                                Math.abs(u) > 90 && Math.abs(u) < 270 && (f ? (l *= -1,
                                u += c <= 0 ? 180 : -180,
                                c += c <= 0 ? 180 : -180) : (h *= -1,
                                u += u <= 0 ? 180 : -180)),
                                p.scaleX = l,
                                p.scaleY = h,
                                p.rotation = c,
                                p.skewX = u,
                                Ot && (p.rotationX = p.rotationY = p.z = 0,
                                p.perspective = v,
                                p.scaleZ = 1),
                                p.svg && (p.x -= p.xOrigin - (p.xOrigin * j + p.yOrigin * G),
                                p.y -= p.yOrigin - (p.xOrigin * V + p.yOrigin * H))
                            }
                            p.zOrigin = g;
                            for (o in p)
                                p[o] < d && p[o] > -d && (p[o] = 0)
                        }
                        return n && (t._gsTransform = p,
                        p.svg && (Ct && t.style[Pt] ? e.delayedCall(.001, function() {
                            Xt(t.style, Pt)
                        }) : !Ct && t.getAttribute("transform") && e.delayedCall(.001, function() {
                            t.removeAttribute("transform")
                        }))),
                        p
                    }
                    , Gt = function(t) {
                        var e, i, n = this.data, r = -n.rotation * F, a = r + n.skewX * F, o = 1e5, s = (Math.cos(r) * n.scaleX * o | 0) / o, l = (Math.sin(r) * n.scaleX * o | 0) / o, h = (Math.sin(a) * -n.scaleY * o | 0) / o, c = (Math.cos(a) * n.scaleY * o | 0) / o, u = this.t.style, p = this.t.currentStyle;
                        if (p) {
                            i = l,
                            l = -h,
                            h = -i,
                            e = p.filter,
                            u.filter = "";
                            var f, d, m = this.t.offsetWidth, v = this.t.offsetHeight, y = "absolute" !== p.position, _ = "progid:DXImageTransform.Microsoft.Matrix(M11=" + s + ", M12=" + l + ", M21=" + h + ", M22=" + c, x = n.x + m * n.xPercent / 100, b = n.y + v * n.yPercent / 100;
                            if (null != n.ox && (f = (n.oxp ? m * n.ox * .01 : n.ox) - m / 2,
                            d = (n.oyp ? v * n.oy * .01 : n.oy) - v / 2,
                            x += f - (f * s + d * l),
                            b += d - (f * h + d * c)),
                            y ? (f = m / 2,
                            d = v / 2,
                            _ += ", Dx=" + (f - (f * s + d * l) + x) + ", Dy=" + (d - (f * h + d * c) + b) + ")") : _ += ", sizingMethod='auto expand')",
                            e.indexOf("DXImageTransform.Microsoft.Matrix(") !== -1 ? u.filter = e.replace(I, _) : u.filter = _ + " " + e,
                            0 !== t && 1 !== t || 1 === s && 0 === l && 0 === h && 1 === c && (y && _.indexOf("Dx=0, Dy=0") === -1 || T.test(e) && 100 !== parseFloat(RegExp.$1) || e.indexOf(e.indexOf("Alpha")) === -1 && u.removeAttribute("filter")),
                            !y) {
                                var w, S, C, A = g < 8 ? 1 : -1;
                                for (f = n.ieOffsetX || 0,
                                d = n.ieOffsetY || 0,
                                n.ieOffsetX = Math.round((m - ((s < 0 ? -s : s) * m + (l < 0 ? -l : l) * v)) / 2 + x),
                                n.ieOffsetY = Math.round((v - ((c < 0 ? -c : c) * v + (h < 0 ? -h : h) * m)) / 2 + b),
                                wt = 0; wt < 4; wt++)
                                    S = at[wt],
                                    w = p[S],
                                    i = w.indexOf("px") !== -1 ? parseFloat(w) : tt(this.t, S, parseFloat(w), w.replace(M, "")) || 0,
                                    C = i !== n[S] ? wt < 2 ? -n.ieOffsetX : -n.ieOffsetY : wt < 2 ? f - n.ieOffsetX : d - n.ieOffsetY,
                                    u[S] = (n[S] = Math.round(i - C * (0 === wt || 2 === wt ? 1 : A))) + "px"
                            }
                        }
                    }, Ht = H.set3DTransformRatio = H.setTransformRatio = function(t) {
                        var e, i, n, r, a, o, s, l, h, c, u, p, f, m, g, v, y, _, x, b, w, M, T, S = this.data, C = this.t.style, A = S.rotation, P = S.rotationX, E = S.rotationY, L = S.scaleX, O = S.scaleY, R = S.scaleZ, D = S.x, I = S.y, k = S.z, N = S.svg, B = S.perspective, U = S.force3D;
                        if (((1 === t || 0 === t) && "auto" === U && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !U) && !k && !B && !E && !P && 1 === R || Ct && N || !Ot)
                            return void (A || S.skewX || N ? (A *= F,
                            M = S.skewX * F,
                            T = 1e5,
                            e = Math.cos(A) * L,
                            r = Math.sin(A) * L,
                            i = Math.sin(A - M) * -O,
                            a = Math.cos(A - M) * O,
                            M && "simple" === S.skewType && (y = Math.tan(M - S.skewY * F),
                            y = Math.sqrt(1 + y * y),
                            i *= y,
                            a *= y,
                            S.skewY && (y = Math.tan(S.skewY * F),
                            y = Math.sqrt(1 + y * y),
                            e *= y,
                            r *= y)),
                            N && (D += S.xOrigin - (S.xOrigin * e + S.yOrigin * i) + S.xOffset,
                            I += S.yOrigin - (S.xOrigin * r + S.yOrigin * a) + S.yOffset,
                            Ct && (S.xPercent || S.yPercent) && (m = this.t.getBBox(),
                            D += .01 * S.xPercent * m.width,
                            I += .01 * S.yPercent * m.height),
                            m = 1e-6,
                            D < m && D > -m && (D = 0),
                            I < m && I > -m && (I = 0)),
                            x = (e * T | 0) / T + "," + (r * T | 0) / T + "," + (i * T | 0) / T + "," + (a * T | 0) / T + "," + D + "," + I + ")",
                            N && Ct ? this.t.setAttribute("transform", "matrix(" + x) : C[Pt] = (S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) matrix(" : "matrix(") + x) : C[Pt] = (S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) matrix(" : "matrix(") + L + ",0,0," + O + "," + D + "," + I + ")");
                        if (d && (m = 1e-4,
                        L < m && L > -m && (L = R = 2e-5),
                        O < m && O > -m && (O = R = 2e-5),
                        !B || S.z || S.rotationX || S.rotationY || (B = 0)),
                        A || S.skewX)
                            A *= F,
                            g = e = Math.cos(A),
                            v = r = Math.sin(A),
                            S.skewX && (A -= S.skewX * F,
                            g = Math.cos(A),
                            v = Math.sin(A),
                            "simple" === S.skewType && (y = Math.tan((S.skewX - S.skewY) * F),
                            y = Math.sqrt(1 + y * y),
                            g *= y,
                            v *= y,
                            S.skewY && (y = Math.tan(S.skewY * F),
                            y = Math.sqrt(1 + y * y),
                            e *= y,
                            r *= y))),
                            i = -v,
                            a = g;
                        else {
                            if (!(E || P || 1 !== R || B || N))
                                return void (C[Pt] = (S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) translate3d(" : "translate3d(") + D + "px," + I + "px," + k + "px)" + (1 !== L || 1 !== O ? " scale(" + L + "," + O + ")" : ""));
                            e = a = 1,
                            i = r = 0
                        }
                        h = 1,
                        n = o = s = l = c = u = 0,
                        p = B ? -1 / B : 0,
                        f = S.zOrigin,
                        m = 1e-6,
                        b = ",",
                        w = "0",
                        A = E * F,
                        A && (g = Math.cos(A),
                        v = Math.sin(A),
                        s = -v,
                        c = p * -v,
                        n = e * v,
                        o = r * v,
                        h = g,
                        p *= g,
                        e *= g,
                        r *= g),
                        A = P * F,
                        A && (g = Math.cos(A),
                        v = Math.sin(A),
                        y = i * g + n * v,
                        _ = a * g + o * v,
                        l = h * v,
                        u = p * v,
                        n = i * -v + n * g,
                        o = a * -v + o * g,
                        h *= g,
                        p *= g,
                        i = y,
                        a = _),
                        1 !== R && (n *= R,
                        o *= R,
                        h *= R,
                        p *= R),
                        1 !== O && (i *= O,
                        a *= O,
                        l *= O,
                        u *= O),
                        1 !== L && (e *= L,
                        r *= L,
                        s *= L,
                        c *= L),
                        (f || N) && (f && (D += n * -f,
                        I += o * -f,
                        k += h * -f + f),
                        N && (D += S.xOrigin - (S.xOrigin * e + S.yOrigin * i) + S.xOffset,
                        I += S.yOrigin - (S.xOrigin * r + S.yOrigin * a) + S.yOffset),
                        D < m && D > -m && (D = w),
                        I < m && I > -m && (I = w),
                        k < m && k > -m && (k = 0)),
                        x = S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) matrix3d(" : "matrix3d(",
                        x += (e < m && e > -m ? w : e) + b + (r < m && r > -m ? w : r) + b + (s < m && s > -m ? w : s),
                        x += b + (c < m && c > -m ? w : c) + b + (i < m && i > -m ? w : i) + b + (a < m && a > -m ? w : a),
                        P || E || 1 !== R ? (x += b + (l < m && l > -m ? w : l) + b + (u < m && u > -m ? w : u) + b + (n < m && n > -m ? w : n),
                        x += b + (o < m && o > -m ? w : o) + b + (h < m && h > -m ? w : h) + b + (p < m && p > -m ? w : p) + b) : x += ",0,0,0,0,1,0,",
                        x += D + b + I + b + k + b + (B ? 1 + -k / B : 1) + ")",
                        C[Pt] = x
                    }
                    ;
                    c = Rt.prototype,
                    c.x = c.y = c.z = c.skewX = c.skewY = c.rotation = c.rotationX = c.rotationY = c.zOrigin = c.xPercent = c.yPercent = c.xOffset = c.yOffset = 0,
                    c.scaleX = c.scaleY = c.scaleZ = 1,
                    Tt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                        parser: function(t, e, i, n, r, o, l) {
                            if (n._lastParsedTransform === l)
                                return r;
                            n._lastParsedTransform = l;
                            var h;
                            "function" == typeof l[i] && (h = l[i],
                            l[i] = e);
                            var c, u, p, f, d, m, g, _, x, b = t._gsTransform, w = t.style, M = 1e-6, T = At.length, S = l, C = {}, A = "transformOrigin", P = Vt(t, a, !0, S.parseTransform), E = S.transform && ("function" == typeof S.transform ? S.transform(y, v) : S.transform);
                            if (n._transform = P,
                            E && "string" == typeof E && Pt)
                                u = V.style,
                                u[Pt] = E,
                                u.display = "block",
                                u.position = "absolute",
                                z.body.appendChild(V),
                                c = Vt(V, null, !1),
                                P.svg && (m = P.xOrigin,
                                g = P.yOrigin,
                                c.x -= P.xOffset,
                                c.y -= P.yOffset,
                                (S.transformOrigin || S.svgOrigin) && (E = {},
                                Ft(t, st(S.transformOrigin), E, S.svgOrigin, S.smoothOrigin, !0),
                                m = E.xOrigin,
                                g = E.yOrigin,
                                c.x -= E.xOffset - P.xOffset,
                                c.y -= E.yOffset - P.yOffset),
                                (m || g) && (_ = jt(V, !0),
                                c.x -= m - (m * _[0] + g * _[2]),
                                c.y -= g - (m * _[1] + g * _[3]))),
                                z.body.removeChild(V),
                                c.perspective || (c.perspective = P.perspective),
                                null != S.xPercent && (c.xPercent = ht(S.xPercent, P.xPercent)),
                                null != S.yPercent && (c.yPercent = ht(S.yPercent, P.yPercent));
                            else if ("object" == typeof S) {
                                if (c = {
                                    scaleX: ht(null != S.scaleX ? S.scaleX : S.scale, P.scaleX),
                                    scaleY: ht(null != S.scaleY ? S.scaleY : S.scale, P.scaleY),
                                    scaleZ: ht(S.scaleZ, P.scaleZ),
                                    x: ht(S.x, P.x),
                                    y: ht(S.y, P.y),
                                    z: ht(S.z, P.z),
                                    xPercent: ht(S.xPercent, P.xPercent),
                                    yPercent: ht(S.yPercent, P.yPercent),
                                    perspective: ht(S.transformPerspective, P.perspective)
                                },
                                d = S.directionalRotation,
                                null != d)
                                    if ("object" == typeof d)
                                        for (u in d)
                                            S[u] = d[u];
                                    else
                                        S.rotation = d;
                                "string" == typeof S.x && S.x.indexOf("%") !== -1 && (c.x = 0,
                                c.xPercent = ht(S.x, P.xPercent)),
                                "string" == typeof S.y && S.y.indexOf("%") !== -1 && (c.y = 0,
                                c.yPercent = ht(S.y, P.yPercent)),
                                c.rotation = ct("rotation"in S ? S.rotation : "shortRotation"in S ? S.shortRotation + "_short" : "rotationZ"in S ? S.rotationZ : P.rotation - P.skewY, P.rotation - P.skewY, "rotation", C),
                                Ot && (c.rotationX = ct("rotationX"in S ? S.rotationX : "shortRotationX"in S ? S.shortRotationX + "_short" : P.rotationX || 0, P.rotationX, "rotationX", C),
                                c.rotationY = ct("rotationY"in S ? S.rotationY : "shortRotationY"in S ? S.shortRotationY + "_short" : P.rotationY || 0, P.rotationY, "rotationY", C)),
                                c.skewX = ct(S.skewX, P.skewX - P.skewY),
                                (c.skewY = ct(S.skewY, P.skewY)) && (c.skewX += c.skewY,
                                c.rotation += c.skewY)
                            }
                            for (Ot && null != S.force3D && (P.force3D = S.force3D,
                            f = !0),
                            P.skewType = S.skewType || P.skewType || s.defaultSkewType,
                            p = P.force3D || P.z || P.rotationX || P.rotationY || c.z || c.rotationX || c.rotationY || c.perspective,
                            p || null == S.scale || (c.scaleZ = 1); --T > -1; )
                                x = At[T],
                                E = c[x] - P[x],
                                (E > M || E < -M || null != S[x] || null != U[x]) && (f = !0,
                                r = new _t(P,x,P[x],E,r),
                                x in C && (r.e = C[x]),
                                r.xs0 = 0,
                                r.plugin = o,
                                n._overwriteProps.push(r.n));
                            return E = S.transformOrigin,
                            P.svg && (E || S.svgOrigin) && (m = P.xOffset,
                            g = P.yOffset,
                            Ft(t, st(E), c, S.svgOrigin, S.smoothOrigin),
                            r = xt(P, "xOrigin", (b ? P : c).xOrigin, c.xOrigin, r, A),
                            r = xt(P, "yOrigin", (b ? P : c).yOrigin, c.yOrigin, r, A),
                            m === P.xOffset && g === P.yOffset || (r = xt(P, "xOffset", b ? m : P.xOffset, P.xOffset, r, A),
                            r = xt(P, "yOffset", b ? g : P.yOffset, P.yOffset, r, A)),
                            E = Ct ? null : "0px 0px"),
                            (E || Ot && p && P.zOrigin) && (Pt ? (f = !0,
                            x = Lt,
                            E = (E || J(t, x, a, !1, "50% 50%")) + "",
                            r = new _t(w,x,0,0,r,(-1),A),
                            r.b = w[x],
                            r.plugin = o,
                            Ot ? (u = P.zOrigin,
                            E = E.split(" "),
                            P.zOrigin = (E.length > 2 && (0 === u || "0px" !== E[2]) ? parseFloat(E[2]) : u) || 0,
                            r.xs0 = r.e = E[0] + " " + (E[1] || "50%") + " 0px",
                            r = new _t(P,"zOrigin",0,0,r,(-1),r.n),
                            r.b = u,
                            r.xs0 = r.e = P.zOrigin) : r.xs0 = r.e = E) : st(E + "", P)),
                            f && (n._transformType = P.svg && Ct || !p && 3 !== this._transformType ? 2 : 3),
                            h && (l[i] = h),
                            r
                        },
                        prefix: !0
                    }),
                    Tt("boxShadow", {
                        defaultValue: "0px 0px 0px 0px #999",
                        prefix: !0,
                        color: !0,
                        multi: !0,
                        keyword: "inset"
                    }),
                    Tt("borderRadius", {
                        defaultValue: "0px",
                        parser: function(t, e, i, n, o, s) {
                            e = this.format(e);
                            var l, h, c, u, p, f, d, m, g, v, y, _, x, b, w, M, T = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], S = t.style;
                            for (g = parseFloat(t.offsetWidth),
                            v = parseFloat(t.offsetHeight),
                            l = e.split(" "),
                            h = 0; h < T.length; h++)
                                this.p.indexOf("border") && (T[h] = K(T[h])),
                                p = u = J(t, T[h], a, !1, "0px"),
                                p.indexOf(" ") !== -1 && (u = p.split(" "),
                                p = u[0],
                                u = u[1]),
                                f = c = l[h],
                                d = parseFloat(p),
                                _ = p.substr((d + "").length),
                                x = "=" === f.charAt(1),
                                x ? (m = parseInt(f.charAt(0) + "1", 10),
                                f = f.substr(2),
                                m *= parseFloat(f),
                                y = f.substr((m + "").length - (m < 0 ? 1 : 0)) || "") : (m = parseFloat(f),
                                y = f.substr((m + "").length)),
                                "" === y && (y = r[i] || _),
                                y !== _ && (b = tt(t, "borderLeft", d, _),
                                w = tt(t, "borderTop", d, _),
                                "%" === y ? (p = b / g * 100 + "%",
                                u = w / v * 100 + "%") : "em" === y ? (M = tt(t, "borderLeft", 1, "em"),
                                p = b / M + "em",
                                u = w / M + "em") : (p = b + "px",
                                u = w + "px"),
                                x && (f = parseFloat(p) + m + y,
                                c = parseFloat(u) + m + y)),
                                o = bt(S, T[h], p + " " + u, f + " " + c, !1, "0px", o);
                            return o
                        },
                        prefix: !0,
                        formatter: gt("0px 0px 0px 0px", !1, !0)
                    }),
                    Tt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                        defaultValue: "0px",
                        parser: function(t, e, i, n, r, o) {
                            return bt(t.style, i, this.format(J(t, i, a, !1, "0px 0px")), this.format(e), !1, "0px", r)
                        },
                        prefix: !0,
                        formatter: gt("0px 0px", !1, !0)
                    }),
                    Tt("backgroundPosition", {
                        defaultValue: "0 0",
                        parser: function(t, e, i, n, r, o) {
                            var s, l, h, c, u, p, f = "background-position", d = a || Q(t, null), m = this.format((d ? g ? d.getPropertyValue(f + "-x") + " " + d.getPropertyValue(f + "-y") : d.getPropertyValue(f) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), v = this.format(e);
                            if (m.indexOf("%") !== -1 != (v.indexOf("%") !== -1) && v.split(",").length < 2 && (p = J(t, "backgroundImage").replace(L, ""),
                            p && "none" !== p)) {
                                for (s = m.split(" "),
                                l = v.split(" "),
                                G.setAttribute("src", p),
                                h = 2; --h > -1; )
                                    m = s[h],
                                    c = m.indexOf("%") !== -1,
                                    c !== (l[h].indexOf("%") !== -1) && (u = 0 === h ? t.offsetWidth - G.width : t.offsetHeight - G.height,
                                    s[h] = c ? parseFloat(m) / 100 * u + "px" : parseFloat(m) / u * 100 + "%");
                                m = s.join(" ")
                            }
                            return this.parseComplex(t.style, m, v, r, o)
                        },
                        formatter: st
                    }),
                    Tt("backgroundSize", {
                        defaultValue: "0 0",
                        formatter: function(t) {
                            return t += "",
                            st(t.indexOf(" ") === -1 ? t + " " + t : t)
                        }
                    }),
                    Tt("perspective", {
                        defaultValue: "0px",
                        prefix: !0
                    }),
                    Tt("perspectiveOrigin", {
                        defaultValue: "50% 50%",
                        prefix: !0
                    }),
                    Tt("transformStyle", {
                        prefix: !0
                    }),
                    Tt("backfaceVisibility", {
                        prefix: !0
                    }),
                    Tt("userSelect", {
                        prefix: !0
                    }),
                    Tt("margin", {
                        parser: vt("marginTop,marginRight,marginBottom,marginLeft")
                    }),
                    Tt("padding", {
                        parser: vt("paddingTop,paddingRight,paddingBottom,paddingLeft")
                    }),
                    Tt("clip", {
                        defaultValue: "rect(0px,0px,0px,0px)",
                        parser: function(t, e, i, n, r, o) {
                            var s, l, h;
                            return g < 9 ? (l = t.currentStyle,
                            h = g < 8 ? " " : ",",
                            s = "rect(" + l.clipTop + h + l.clipRight + h + l.clipBottom + h + l.clipLeft + ")",
                            e = this.format(e).split(",").join(h)) : (s = this.format(J(t, this.p, a, !1, this.dflt)),
                            e = this.format(e)),
                            this.parseComplex(t.style, s, e, r, o)
                        }
                    }),
                    Tt("textShadow", {
                        defaultValue: "0px 0px 0px #999",
                        color: !0,
                        multi: !0
                    }),
                    Tt("autoRound,strictUnits", {
                        parser: function(t, e, i, n, r) {
                            return r
                        }
                    }),
                    Tt("border", {
                        defaultValue: "0px solid #000",
                        parser: function(t, e, i, n, r, o) {
                            var s = J(t, "borderTopWidth", a, !1, "0px")
                              , l = this.format(e).split(" ")
                              , h = l[0].replace(M, "");
                            return "px" !== h && (s = parseFloat(s) / tt(t, "borderTopWidth", 1, h) + h),
                            this.parseComplex(t.style, this.format(s + " " + J(t, "borderTopStyle", a, !1, "solid") + " " + J(t, "borderTopColor", a, !1, "#000")), l.join(" "), r, o)
                        },
                        color: !0,
                        formatter: function(t) {
                            var e = t.split(" ");
                            return e[0] + " " + (e[1] || "solid") + " " + (t.match(mt) || ["#000"])[0]
                        }
                    }),
                    Tt("borderWidth", {
                        parser: vt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                    }),
                    Tt("float,cssFloat,styleFloat", {
                        parser: function(t, e, i, n, r, a) {
                            var o = t.style
                              , s = "cssFloat"in o ? "cssFloat" : "styleFloat";
                            return new _t(o,s,0,0,r,(-1),i,(!1),0,o[s],e)
                        }
                    });
                    var Wt = function(t) {
                        var e, i = this.t, n = i.filter || J(this.data, "filter") || "", r = this.s + this.c * t | 0;
                        100 === r && (n.indexOf("atrix(") === -1 && n.indexOf("radient(") === -1 && n.indexOf("oader(") === -1 ? (i.removeAttribute("filter"),
                        e = !J(this.data, "filter")) : (i.filter = n.replace(C, ""),
                        e = !0)),
                        e || (this.xn1 && (i.filter = n = n || "alpha(opacity=" + r + ")"),
                        n.indexOf("pacity") === -1 ? 0 === r && this.xn1 || (i.filter = n + " alpha(opacity=" + r + ")") : i.filter = n.replace(T, "opacity=" + r))
                    };
                    Tt("opacity,alpha,autoAlpha", {
                        defaultValue: "1",
                        parser: function(t, e, i, n, r, o) {
                            var s = parseFloat(J(t, "opacity", a, !1, "1"))
                              , l = t.style
                              , h = "autoAlpha" === i;
                            return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s),
                            h && 1 === s && "hidden" === J(t, "visibility", a) && 0 !== e && (s = 0),
                            X ? r = new _t(l,"opacity",s,e - s,r) : (r = new _t(l,"opacity",100 * s,100 * (e - s),r),
                            r.xn1 = h ? 1 : 0,
                            l.zoom = 1,
                            r.type = 2,
                            r.b = "alpha(opacity=" + r.s + ")",
                            r.e = "alpha(opacity=" + (r.s + r.c) + ")",
                            r.data = t,
                            r.plugin = o,
                            r.setRatio = Wt),
                            h && (r = new _t(l,"visibility",0,0,r,(-1),null,(!1),0,0 !== s ? "inherit" : "hidden",0 === e ? "hidden" : "inherit"),
                            r.xs0 = "inherit",
                            n._overwriteProps.push(r.n),
                            n._overwriteProps.push(i)),
                            r
                        }
                    });
                    var Xt = function(t, e) {
                        e && (t.removeProperty ? ("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6) || (e = "-" + e),
                        t.removeProperty(e.replace(P, "-$1").toLowerCase())) : t.removeAttribute(e))
                    }
                      , qt = function(t) {
                        if (this.t._gsClassPT = this,
                        1 === t || 0 === t) {
                            this.t.setAttribute("class", 0 === t ? this.b : this.e);
                            for (var e = this.data, i = this.t.style; e; )
                                e.v ? i[e.p] = e.v : Xt(i, e.p),
                                e = e._next;
                            1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                        } else
                            this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                    };
                    Tt("className", {
                        parser: function(t, e, i, r, o, s, l) {
                            var h, c, u, p, f, d = t.getAttribute("class") || "", m = t.style.cssText;
                            if (o = r._classNamePT = new _t(t,i,0,0,o,2),
                            o.setRatio = qt,
                            o.pr = -11,
                            n = !0,
                            o.b = d,
                            c = it(t, a),
                            u = t._gsClassPT) {
                                for (p = {},
                                f = u.data; f; )
                                    p[f.p] = 1,
                                    f = f._next;
                                u.setRatio(1)
                            }
                            return t._gsClassPT = o,
                            o.e = "=" !== e.charAt(1) ? e : d.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""),
                            t.setAttribute("class", o.e),
                            h = nt(t, c, it(t), l, p),
                            t.setAttribute("class", d),
                            o.data = h.firstMPT,
                            t.style.cssText = m,
                            o = o.xfirst = r.parse(t, h.difs, o, s)
                        }
                    });
                    var Yt = function(t) {
                        if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                            var e, i, n, r, a, o = this.t.style, s = h.transform.parse;
                            if ("all" === this.e)
                                o.cssText = "",
                                r = !0;
                            else
                                for (e = this.e.split(" ").join("").split(","),
                                n = e.length; --n > -1; )
                                    i = e[n],
                                    h[i] && (h[i].parse === s ? r = !0 : i = "transformOrigin" === i ? Lt : h[i].p),
                                    Xt(o, i);
                            r && (Xt(o, Pt),
                            a = this.t._gsTransform,
                            a && (a.svg && (this.t.removeAttribute("data-svg-origin"),
                            this.t.removeAttribute("transform")),
                            delete this.t._gsTransform))
                        }
                    };
                    for (Tt("clearProps", {
                        parser: function(t, e, i, r, a) {
                            return a = new _t(t,i,0,0,a,2),
                            a.setRatio = Yt,
                            a.e = e,
                            a.pr = -10,
                            a.data = r._tween,
                            n = !0,
                            a
                        }
                    }),
                    c = "bezier,throwProps,physicsProps,physics2D".split(","),
                    wt = c.length; wt--; )
                        St(c[wt]);
                    c = s.prototype,
                    c._firstPT = c._lastParsedTransform = c._transform = null,
                    c._onInitTween = function(t, e, i, l) {
                        if (!t.nodeType)
                            return !1;
                        this._target = v = t,
                        this._tween = i,
                        this._vars = e,
                        y = l,
                        u = e.autoRound,
                        n = !1,
                        r = e.suffixMap || s.suffixMap,
                        a = Q(t, ""),
                        o = this._overwriteProps;
                        var c, d, g, _, x, b, w, M, T, C = t.style;
                        if (p && "" === C.zIndex && (c = J(t, "zIndex", a),
                        "auto" !== c && "" !== c || this._addLazySet(C, "zIndex", 0)),
                        "string" == typeof e && (_ = C.cssText,
                        c = it(t, a),
                        C.cssText = _ + ";" + e,
                        c = nt(t, c, it(t)).difs,
                        !X && S.test(e) && (c.opacity = parseFloat(RegExp.$1)),
                        e = c,
                        C.cssText = _),
                        e.className ? this._firstPT = d = h.className.parse(t, e.className, "className", this, null, null, e) : this._firstPT = d = this.parse(t, e, null),
                        this._transformType) {
                            for (T = 3 === this._transformType,
                            Pt ? f && (p = !0,
                            "" === C.zIndex && (w = J(t, "zIndex", a),
                            "auto" !== w && "" !== w || this._addLazySet(C, "zIndex", 0)),
                            m && this._addLazySet(C, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (T ? "visible" : "hidden"))) : C.zoom = 1,
                            g = d; g && g._next; )
                                g = g._next;
                            M = new _t(t,"transform",0,0,null,2),
                            this._linkCSSP(M, null, g),
                            M.setRatio = Pt ? Ht : Gt,
                            M.data = this._transform || Vt(t, a, !0),
                            M.tween = i,
                            M.pr = -1,
                            o.pop()
                        }
                        if (n) {
                            for (; d; ) {
                                for (b = d._next,
                                g = _; g && g.pr > d.pr; )
                                    g = g._next;
                                (d._prev = g ? g._prev : x) ? d._prev._next = d : _ = d,
                                (d._next = g) ? g._prev = d : x = d,
                                d = b
                            }
                            this._firstPT = _
                        }
                        return !0
                    }
                    ,
                    c.parse = function(t, e, i, n) {
                        var o, s, l, c, p, f, d, m, g, _, x = t.style;
                        for (o in e)
                            f = e[o],
                            "function" == typeof f && (f = f(y, v)),
                            s = h[o],
                            s ? i = s.parse(t, f, o, this, i, n, e) : (p = J(t, o, a) + "",
                            g = "string" == typeof f,
                            "color" === o || "fill" === o || "stroke" === o || o.indexOf("Color") !== -1 || g && A.test(f) ? (g || (f = ft(f),
                            f = (f.length > 3 ? "rgba(" : "rgb(") + f.join(",") + ")"),
                            i = bt(x, o, p, f, !0, "transparent", i, 0, n)) : g && N.test(f) ? i = bt(x, o, p, f, !0, null, i, 0, n) : (l = parseFloat(p),
                            d = l || 0 === l ? p.substr((l + "").length) : "",
                            "" !== p && "auto" !== p || ("width" === o || "height" === o ? (l = ot(t, o, a),
                            d = "px") : "left" === o || "top" === o ? (l = et(t, o, a),
                            d = "px") : (l = "opacity" !== o ? 0 : 1,
                            d = "")),
                            _ = g && "=" === f.charAt(1),
                            _ ? (c = parseInt(f.charAt(0) + "1", 10),
                            f = f.substr(2),
                            c *= parseFloat(f),
                            m = f.replace(M, "")) : (c = parseFloat(f),
                            m = g ? f.replace(M, "") : ""),
                            "" === m && (m = o in r ? r[o] : d),
                            f = c || 0 === c ? (_ ? c + l : c) + m : e[o],
                            d !== m && "" !== m && (c || 0 === c) && l && (l = tt(t, o, l, d),
                            "%" === m ? (l /= tt(t, o, 100, "%") / 100,
                            e.strictUnits !== !0 && (p = l + "%")) : "em" === m || "rem" === m || "vw" === m || "vh" === m ? l /= tt(t, o, 1, m) : "px" !== m && (c = tt(t, o, c, m),
                            m = "px"),
                            _ && (c || 0 === c) && (f = c + l + m)),
                            _ && (c += l),
                            !l && 0 !== l || !c && 0 !== c ? void 0 !== x[o] && (f || f + "" != "NaN" && null != f) ? (i = new _t(x,o,c || l || 0,0,i,(-1),o,(!1),0,p,f),
                            i.xs0 = "none" !== f || "display" !== o && o.indexOf("Style") === -1 ? f : p) : Y("invalid " + o + " tween value: " + e[o]) : (i = new _t(x,o,l,c - l,i,0,o,u !== !1 && ("px" === m || "zIndex" === o),0,p,f),
                            i.xs0 = m))),
                            n && i && !i.plugin && (i.plugin = n);
                        return i
                    }
                    ,
                    c.setRatio = function(t) {
                        var e, i, n, r = this._firstPT, a = 1e-6;
                        if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                            if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
                                for (; r; ) {
                                    if (e = r.c * t + r.s,
                                    r.r ? e = Math.round(e) : e < a && e > -a && (e = 0),
                                    r.type)
                                        if (1 === r.type)
                                            if (n = r.l,
                                            2 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2;
                                            else if (3 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
                                            else if (4 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4;
                                            else if (5 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5;
                                            else {
                                                for (i = r.xs0 + e + r.xs1,
                                                n = 1; n < r.l; n++)
                                                    i += r["xn" + n] + r["xs" + (n + 1)];
                                                r.t[r.p] = i
                                            }
                                        else
                                            r.type === -1 ? r.t[r.p] = r.xs0 : r.setRatio && r.setRatio(t);
                                    else
                                        r.t[r.p] = e + r.xs0;
                                    r = r._next
                                }
                            else
                                for (; r; )
                                    2 !== r.type ? r.t[r.p] = r.b : r.setRatio(t),
                                    r = r._next;
                        else
                            for (; r; ) {
                                if (2 !== r.type)
                                    if (r.r && r.type !== -1)
                                        if (e = Math.round(r.s + r.c),
                                        r.type) {
                                            if (1 === r.type) {
                                                for (n = r.l,
                                                i = r.xs0 + e + r.xs1,
                                                n = 1; n < r.l; n++)
                                                    i += r["xn" + n] + r["xs" + (n + 1)];
                                                r.t[r.p] = i
                                            }
                                        } else
                                            r.t[r.p] = e + r.xs0;
                                    else
                                        r.t[r.p] = r.e;
                                else
                                    r.setRatio(t);
                                r = r._next
                            }
                    }
                    ,
                    c._enableTransforms = function(t) {
                        this._transform = this._transform || Vt(this._target, a, !0),
                        this._transformType = this._transform.svg && Ct || !t && 3 !== this._transformType ? 2 : 3
                    }
                    ;
                    var Zt = function(t) {
                        this.t[this.p] = this.e,
                        this.data._linkCSSP(this, this._next, null, !0)
                    };
                    c._addLazySet = function(t, e, i) {
                        var n = this._firstPT = new _t(t,e,0,0,this._firstPT,2);
                        n.e = i,
                        n.setRatio = Zt,
                        n.data = this
                    }
                    ,
                    c._linkCSSP = function(t, e, i, n) {
                        return t && (e && (e._prev = t),
                        t._next && (t._next._prev = t._prev),
                        t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next,
                        n = !0),
                        i ? i._next = t : n || null !== this._firstPT || (this._firstPT = t),
                        t._next = e,
                        t._prev = i),
                        t
                    }
                    ,
                    c._mod = function(t) {
                        for (var e = this._firstPT; e; )
                            "function" == typeof t[e.p] && t[e.p] === Math.round && (e.r = 1),
                            e = e._next
                    }
                    ,
                    c._kill = function(e) {
                        var i, n, r, a = e;
                        if (e.autoAlpha || e.alpha) {
                            a = {};
                            for (n in e)
                                a[n] = e[n];
                            a.opacity = 1,
                            a.autoAlpha && (a.visibility = 1)
                        }
                        for (e.className && (i = this._classNamePT) && (r = i.xfirst,
                        r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next),
                        i._next && this._linkCSSP(i._next, i._next._next, r._prev),
                        this._classNamePT = null),
                        i = this._firstPT; i; )
                            i.plugin && i.plugin !== n && i.plugin._kill && (i.plugin._kill(e),
                            n = i.plugin),
                            i = i._next;
                        return t.prototype._kill.call(this, a)
                    }
                    ;
                    var $t = function(t, e, i) {
                        var n, r, a, o;
                        if (t.slice)
                            for (r = t.length; --r > -1; )
                                $t(t[r], e, i);
                        else
                            for (n = t.childNodes,
                            r = n.length; --r > -1; )
                                a = n[r],
                                o = a.type,
                                a.style && (e.push(it(a)),
                                i && i.push(a)),
                                1 !== o && 9 !== o && 11 !== o || !a.childNodes.length || $t(a, e, i)
                    };
                    return s.cascadeTo = function(t, i, n) {
                        var r, a, o, s, l = e.to(t, i, n), h = [l], c = [], u = [], p = [], f = e._internals.reservedProps;
                        for (t = l._targets || l.target,
                        $t(t, c, p),
                        l.render(i, !0, !0),
                        $t(t, u),
                        l.render(0, !0, !0),
                        l._enabled(!0),
                        r = p.length; --r > -1; )
                            if (a = nt(p[r], c[r], u[r]),
                            a.firstMPT) {
                                a = a.difs;
                                for (o in n)
                                    f[o] && (a[o] = n[o]);
                                s = {};
                                for (o in a)
                                    s[o] = c[r][o];
                                h.push(e.fromTo(p[r], i, s, a))
                            }
                        return h
                    }
                    ,
                    t.activate([s]),
                    s
                }, !0),
                function() {
                    var t = i._gsDefine.plugin({
                        propName: "roundProps",
                        version: "1.6.0",
                        priority: -1,
                        API: 2,
                        init: function(t, e, i) {
                            return this._tween = i,
                            !0
                        }
                    })
                      , e = function(t) {
                        for (; t; )
                            t.f || t.blob || (t.m = Math.round),
                            t = t._next
                    }
                      , n = t.prototype;
                    n._onInitAllProps = function() {
                        for (var t, i, n, r = this._tween, a = r.vars.roundProps.join ? r.vars.roundProps : r.vars.roundProps.split(","), o = a.length, s = {}, l = r._propLookup.roundProps; --o > -1; )
                            s[a[o]] = Math.round;
                        for (o = a.length; --o > -1; )
                            for (t = a[o],
                            i = r._firstPT; i; )
                                n = i._next,
                                i.pg ? i.t._mod(s) : i.n === t && (2 === i.f && i.t ? e(i.t._firstPT) : (this._add(i.t, t, i.s, i.c),
                                n && (n._prev = i._prev),
                                i._prev ? i._prev._next = n : r._firstPT === i && (r._firstPT = n),
                                i._next = i._prev = null,
                                r._propLookup[t] = l)),
                                i = n;
                        return !1
                    }
                    ,
                    n._add = function(t, e, i, n) {
                        this._addTween(t, e, i, i + n, e, Math.round),
                        this._overwriteProps.push(e)
                    }
                }(),
                function() {
                    i._gsDefine.plugin({
                        propName: "attr",
                        API: 2,
                        version: "0.6.0",
                        init: function(t, e, i, n) {
                            var r, a;
                            if ("function" != typeof t.setAttribute)
                                return !1;
                            for (r in e)
                                a = e[r],
                                "function" == typeof a && (a = a(n, t)),
                                this._addTween(t, "setAttribute", t.getAttribute(r) + "", a + "", r, !1, r),
                                this._overwriteProps.push(r);
                            return !0
                        }
                    })
                }(),
                i._gsDefine.plugin({
                    propName: "directionalRotation",
                    version: "0.3.0",
                    API: 2,
                    init: function(t, e, i, n) {
                        "object" != typeof e && (e = {
                            rotation: e
                        }),
                        this.finals = {};
                        var r, a, o, s, l, h, c = e.useRadians === !0 ? 2 * Math.PI : 360, u = 1e-6;
                        for (r in e)
                            "useRadians" !== r && (s = e[r],
                            "function" == typeof s && (s = s(n, t)),
                            h = (s + "").split("_"),
                            a = h[0],
                            o = parseFloat("function" != typeof t[r] ? t[r] : t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)]()),
                            s = this.finals[r] = "string" == typeof a && "=" === a.charAt(1) ? o + parseInt(a.charAt(0) + "1", 10) * Number(a.substr(2)) : Number(a) || 0,
                            l = s - o,
                            h.length && (a = h.join("_"),
                            a.indexOf("short") !== -1 && (l %= c,
                            l !== l % (c / 2) && (l = l < 0 ? l + c : l - c)),
                            a.indexOf("_cw") !== -1 && l < 0 ? l = (l + 9999999999 * c) % c - (l / c | 0) * c : a.indexOf("ccw") !== -1 && l > 0 && (l = (l - 9999999999 * c) % c - (l / c | 0) * c)),
                            (l > u || l < -u) && (this._addTween(t, r, o, o + l, r),
                            this._overwriteProps.push(r)));
                        return !0
                    },
                    set: function(t) {
                        var e;
                        if (1 !== t)
                            this._super.setRatio.call(this, t);
                        else
                            for (e = this._firstPT; e; )
                                e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p],
                                e = e._next
                    }
                })._autoCSS = !0,
                i._gsDefine("easing.Back", ["easing.Ease"], function(t) {
                    var e, n, r, a = i.GreenSockGlobals || i, o = a.com.greensock, s = 2 * Math.PI, l = Math.PI / 2, h = o._class, c = function(e, i) {
                        var n = h("easing." + e, function() {}, !0)
                          , r = n.prototype = new t;
                        return r.constructor = n,
                        r.getRatio = i,
                        n
                    }, u = t.register || function() {}
                    , p = function(t, e, i, n, r) {
                        var a = h("easing." + t, {
                            easeOut: new e,
                            easeIn: new i,
                            easeInOut: new n
                        }, !0);
                        return u(a, t),
                        a
                    }, f = function(t, e, i) {
                        this.t = t,
                        this.v = e,
                        i && (this.next = i,
                        i.prev = this,
                        this.c = i.v - e,
                        this.gap = i.t - t)
                    }, d = function(e, i) {
                        var n = h("easing." + e, function(t) {
                            this._p1 = t || 0 === t ? t : 1.70158,
                            this._p2 = 1.525 * this._p1
                        }, !0)
                          , r = n.prototype = new t;
                        return r.constructor = n,
                        r.getRatio = i,
                        r.config = function(t) {
                            return new n(t)
                        }
                        ,
                        n
                    }, m = p("Back", d("BackOut", function(t) {
                        return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
                    }), d("BackIn", function(t) {
                        return t * t * ((this._p1 + 1) * t - this._p1)
                    }), d("BackInOut", function(t) {
                        return (t *= 2) < 1 ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
                    })), g = h("easing.SlowMo", function(t, e, i) {
                        e = e || 0 === e ? e : .7,
                        null == t ? t = .7 : t > 1 && (t = 1),
                        this._p = 1 !== t ? e : 0,
                        this._p1 = (1 - t) / 2,
                        this._p2 = t,
                        this._p3 = this._p1 + this._p2,
                        this._calcEnd = i === !0
                    }, !0), v = g.prototype = new t;
                    return v.constructor = g,
                    v.getRatio = function(t) {
                        var e = t + (.5 - t) * this._p;
                        return t < this._p1 ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
                    }
                    ,
                    g.ease = new g(.7,.7),
                    v.config = g.config = function(t, e, i) {
                        return new g(t,e,i)
                    }
                    ,
                    e = h("easing.SteppedEase", function(t) {
                        t = t || 1,
                        this._p1 = 1 / t,
                        this._p2 = t + 1
                    }, !0),
                    v = e.prototype = new t,
                    v.constructor = e,
                    v.getRatio = function(t) {
                        return t < 0 ? t = 0 : t >= 1 && (t = .999999999),
                        (this._p2 * t >> 0) * this._p1
                    }
                    ,
                    v.config = e.config = function(t) {
                        return new e(t)
                    }
                    ,
                    n = h("easing.RoughEase", function(e) {
                        e = e || {};
                        for (var i, n, r, a, o, s, l = e.taper || "none", h = [], c = 0, u = 0 | (e.points || 20), p = u, d = e.randomize !== !1, m = e.clamp === !0, g = e.template instanceof t ? e.template : null, v = "number" == typeof e.strength ? .4 * e.strength : .4; --p > -1; )
                            i = d ? Math.random() : 1 / u * p,
                            n = g ? g.getRatio(i) : i,
                            "none" === l ? r = v : "out" === l ? (a = 1 - i,
                            r = a * a * v) : "in" === l ? r = i * i * v : i < .5 ? (a = 2 * i,
                            r = a * a * .5 * v) : (a = 2 * (1 - i),
                            r = a * a * .5 * v),
                            d ? n += Math.random() * r - .5 * r : p % 2 ? n += .5 * r : n -= .5 * r,
                            m && (n > 1 ? n = 1 : n < 0 && (n = 0)),
                            h[c++] = {
                                x: i,
                                y: n
                            };
                        for (h.sort(function(t, e) {
                            return t.x - e.x
                        }),
                        s = new f(1,1,null),
                        p = u; --p > -1; )
                            o = h[p],
                            s = new f(o.x,o.y,s);
                        this._prev = new f(0,0,0 !== s.t ? s : s.next)
                    }, !0),
                    v = n.prototype = new t,
                    v.constructor = n,
                    v.getRatio = function(t) {
                        var e = this._prev;
                        if (t > e.t) {
                            for (; e.next && t >= e.t; )
                                e = e.next;
                            e = e.prev
                        } else
                            for (; e.prev && t <= e.t; )
                                e = e.prev;
                        return this._prev = e,
                        e.v + (t - e.t) / e.gap * e.c
                    }
                    ,
                    v.config = function(t) {
                        return new n(t)
                    }
                    ,
                    n.ease = new n,
                    p("Bounce", c("BounceOut", function(t) {
                        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
                    }), c("BounceIn", function(t) {
                        return (t = 1 - t) < 1 / 2.75 ? 1 - 7.5625 * t * t : t < 2 / 2.75 ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : t < 2.5 / 2.75 ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
                    }), c("BounceInOut", function(t) {
                        var e = t < .5;
                        return t = e ? 1 - 2 * t : 2 * t - 1,
                        t = t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375,
                        e ? .5 * (1 - t) : .5 * t + .5
                    })),
                    p("Circ", c("CircOut", function(t) {
                        return Math.sqrt(1 - (t -= 1) * t)
                    }), c("CircIn", function(t) {
                        return -(Math.sqrt(1 - t * t) - 1)
                    }), c("CircInOut", function(t) {
                        return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
                    })),
                    r = function(e, i, n) {
                        var r = h("easing." + e, function(t, e) {
                            this._p1 = t >= 1 ? t : 1,
                            this._p2 = (e || n) / (t < 1 ? t : 1),
                            this._p3 = this._p2 / s * (Math.asin(1 / this._p1) || 0),
                            this._p2 = s / this._p2
                        }, !0)
                          , a = r.prototype = new t;
                        return a.constructor = r,
                        a.getRatio = i,
                        a.config = function(t, e) {
                            return new r(t,e)
                        }
                        ,
                        r
                    }
                    ,
                    p("Elastic", r("ElasticOut", function(t) {
                        return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * this._p2) + 1
                    }, .3), r("ElasticIn", function(t) {
                        return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2))
                    }, .3), r("ElasticInOut", function(t) {
                        return (t *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * .5 + 1
                    }, .45)),
                    p("Expo", c("ExpoOut", function(t) {
                        return 1 - Math.pow(2, -10 * t)
                    }), c("ExpoIn", function(t) {
                        return Math.pow(2, 10 * (t - 1)) - .001
                    }), c("ExpoInOut", function(t) {
                        return (t *= 2) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
                    })),
                    p("Sine", c("SineOut", function(t) {
                        return Math.sin(t * l)
                    }), c("SineIn", function(t) {
                        return -Math.cos(t * l) + 1
                    }), c("SineInOut", function(t) {
                        return -.5 * (Math.cos(Math.PI * t) - 1)
                    })),
                    h("easing.EaseLookup", {
                        find: function(e) {
                            return t.map[e]
                        }
                    }, !0),
                    u(a.SlowMo, "SlowMo", "ease,"),
                    u(n, "RoughEase", "ease,"),
                    u(e, "SteppedEase", "ease,"),
                    m
                }, !0)
            }),
            i._gsDefine && i._gsQueue.pop()(),
            function(t, i) {
                "use strict";
                var n = {}
                  , r = t.GreenSockGlobals = t.GreenSockGlobals || t;
                if (!r.TweenLite) {
                    var a, o, s, l, h, c = function(t) {
                        var e, i = t.split("."), n = r;
                        for (e = 0; e < i.length; e++)
                            n[i[e]] = n = n[i[e]] || {};
                        return n
                    }, u = c("com.greensock"), p = 1e-10, f = function(t) {
                        var e, i = [], n = t.length;
                        for (e = 0; e !== n; i.push(t[e++]))
                            ;
                        return i
                    }, d = function() {}, m = function() {
                        var t = Object.prototype.toString
                          , e = t.call([]);
                        return function(i) {
                            return null != i && (i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e)
                        }
                    }(), g = {}, v = function(a, o, s, l) {
                        this.sc = g[a] ? g[a].sc : [],
                        g[a] = this,
                        this.gsClass = null,
                        this.func = s;
                        var h = [];
                        this.check = function(u) {
                            for (var p, f, d, m, y, _ = o.length, x = _; --_ > -1; )
                                (p = g[o[_]] || new v(o[_],[])).gsClass ? (h[_] = p.gsClass,
                                x--) : u && p.sc.push(this);
                            if (0 === x && s) {
                                if (f = ("com.greensock." + a).split("."),
                                d = f.pop(),
                                m = c(f.join("."))[d] = this.gsClass = s.apply(s, h),
                                l)
                                    if (r[d] = n[d] = m,
                                    y = "undefined" != typeof e && e.exports,
                                    !y && "function" == typeof define && define.amd)
                                        define((t.GreenSockAMDPath ? t.GreenSockAMDPath + "/" : "") + a.split(".").pop(), [], function() {
                                            return m
                                        });
                                    else if (y)
                                        if (a === i) {
                                            e.exports = n[i] = m;
                                            for (_ in n)
                                                m[_] = n[_]
                                        } else
                                            n[i] && (n[i][d] = m);
                                for (_ = 0; _ < this.sc.length; _++)
                                    this.sc[_].check()
                            }
                        }
                        ,
                        this.check(!0)
                    }, y = t._gsDefine = function(t, e, i, n) {
                        return new v(t,e,i,n)
                    }
                    , _ = u._class = function(t, e, i) {
                        return e = e || function() {}
                        ,
                        y(t, [], function() {
                            return e
                        }, i),
                        e
                    }
                    ;
                    y.globals = r;
                    var x = [0, 0, 1, 1]
                      , b = _("easing.Ease", function(t, e, i, n) {
                        this._func = t,
                        this._type = i || 0,
                        this._power = n || 0,
                        this._params = e ? x.concat(e) : x
                    }, !0)
                      , w = b.map = {}
                      , M = b.register = function(t, e, i, n) {
                        for (var r, a, o, s, l = e.split(","), h = l.length, c = (i || "easeIn,easeOut,easeInOut").split(","); --h > -1; )
                            for (a = l[h],
                            r = n ? _("easing." + a, null, !0) : u.easing[a] || {},
                            o = c.length; --o > -1; )
                                s = c[o],
                                w[a + "." + s] = w[s + a] = r[s] = t.getRatio ? t : t[s] || new t
                    }
                    ;
                    for (s = b.prototype,
                    s._calcEnd = !1,
                    s.getRatio = function(t) {
                        if (this._func)
                            return this._params[0] = t,
                            this._func.apply(null, this._params);
                        var e = this._type
                          , i = this._power
                          , n = 1 === e ? 1 - t : 2 === e ? t : t < .5 ? 2 * t : 2 * (1 - t);
                        return 1 === i ? n *= n : 2 === i ? n *= n * n : 3 === i ? n *= n * n * n : 4 === i && (n *= n * n * n * n),
                        1 === e ? 1 - n : 2 === e ? n : t < .5 ? n / 2 : 1 - n / 2
                    }
                    ,
                    a = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                    o = a.length; --o > -1; )
                        s = a[o] + ",Power" + o,
                        M(new b(null,null,1,o), s, "easeOut", !0),
                        M(new b(null,null,2,o), s, "easeIn" + (0 === o ? ",easeNone" : "")),
                        M(new b(null,null,3,o), s, "easeInOut");
                    w.linear = u.easing.Linear.easeIn,
                    w.swing = u.easing.Quad.easeInOut;
                    var T = _("events.EventDispatcher", function(t) {
                        this._listeners = {},
                        this._eventTarget = t || this
                    });
                    s = T.prototype,
                    s.addEventListener = function(t, e, i, n, r) {
                        r = r || 0;
                        var a, o, s = this._listeners[t], c = 0;
                        for (this !== l || h || l.wake(),
                        null == s && (this._listeners[t] = s = []),
                        o = s.length; --o > -1; )
                            a = s[o],
                            a.c === e && a.s === i ? s.splice(o, 1) : 0 === c && a.pr < r && (c = o + 1);
                        s.splice(c, 0, {
                            c: e,
                            s: i,
                            up: n,
                            pr: r
                        })
                    }
                    ,
                    s.removeEventListener = function(t, e) {
                        var i, n = this._listeners[t];
                        if (n)
                            for (i = n.length; --i > -1; )
                                if (n[i].c === e)
                                    return void n.splice(i, 1)
                    }
                    ,
                    s.dispatchEvent = function(t) {
                        var e, i, n, r = this._listeners[t];
                        if (r)
                            for (e = r.length,
                            e > 1 && (r = r.slice(0)),
                            i = this._eventTarget; --e > -1; )
                                n = r[e],
                                n && (n.up ? n.c.call(n.s || i, {
                                    type: t,
                                    target: i
                                }) : n.c.call(n.s || i))
                    }
                    ;
                    var S = t.requestAnimationFrame
                      , C = t.cancelAnimationFrame
                      , A = Date.now || function() {
                        return (new Date).getTime()
                    }
                      , P = A();
                    for (a = ["ms", "moz", "webkit", "o"],
                    o = a.length; --o > -1 && !S; )
                        S = t[a[o] + "RequestAnimationFrame"],
                        C = t[a[o] + "CancelAnimationFrame"] || t[a[o] + "CancelRequestAnimationFrame"];
                    _("Ticker", function(t, e) {
                        var i, n, r, a, o, s = this, c = A(), u = !(e === !1 || !S) && "auto", f = 500, m = 33, g = "tick", v = function(t) {
                            var e, l, h = A() - P;
                            h > f && (c += h - m),
                            P += h,
                            s.time = (P - c) / 1e3,
                            e = s.time - o,
                            (!i || e > 0 || t === !0) && (s.frame++,
                            o += e + (e >= a ? .004 : a - e),
                            l = !0),
                            t !== !0 && (r = n(v)),
                            l && s.dispatchEvent(g)
                        };
                        T.call(s),
                        s.time = s.frame = 0,
                        s.tick = function() {
                            v(!0)
                        }
                        ,
                        s.lagSmoothing = function(t, e) {
                            f = t || 1 / p,
                            m = Math.min(e, f, 0)
                        }
                        ,
                        s.sleep = function() {
                            null != r && (u && C ? C(r) : clearTimeout(r),
                            n = d,
                            r = null,
                            s === l && (h = !1))
                        }
                        ,
                        s.wake = function(t) {
                            null !== r ? s.sleep() : t ? c += -P + (P = A()) : s.frame > 10 && (P = A() - f + 5),
                            n = 0 === i ? d : u && S ? S : function(t) {
                                return setTimeout(t, 1e3 * (o - s.time) + 1 | 0)
                            }
                            ,
                            s === l && (h = !0),
                            v(2)
                        }
                        ,
                        s.fps = function(t) {
                            return arguments.length ? (i = t,
                            a = 1 / (i || 60),
                            o = this.time + a,
                            void s.wake()) : i
                        }
                        ,
                        s.useRAF = function(t) {
                            return arguments.length ? (s.sleep(),
                            u = t,
                            void s.fps(i)) : u
                        }
                        ,
                        s.fps(t),
                        setTimeout(function() {
                            "auto" === u && s.frame < 5 && "hidden" !== document.visibilityState && s.useRAF(!1)
                        }, 1500)
                    }),
                    s = u.Ticker.prototype = new u.events.EventDispatcher,
                    s.constructor = u.Ticker;
                    var E = _("core.Animation", function(t, e) {
                        if (this.vars = e = e || {},
                        this._duration = this._totalDuration = t || 0,
                        this._delay = Number(e.delay) || 0,
                        this._timeScale = 1,
                        this._active = e.immediateRender === !0,
                        this.data = e.data,
                        this._reversed = e.reversed === !0,
                        Y) {
                            h || l.wake();
                            var i = this.vars.useFrames ? q : Y;
                            i.add(this, i._time),
                            this.vars.paused && this.paused(!0)
                        }
                    });
                    l = E.ticker = new u.Ticker,
                    s = E.prototype,
                    s._dirty = s._gc = s._initted = s._paused = !1,
                    s._totalTime = s._time = 0,
                    s._rawPrevTime = -1,
                    s._next = s._last = s._onUpdate = s._timeline = s.timeline = null,
                    s._paused = !1;
                    var L = function() {
                        h && A() - P > 2e3 && l.wake(),
                        setTimeout(L, 2e3)
                    };
                    L(),
                    s.play = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.reversed(!1).paused(!1)
                    }
                    ,
                    s.pause = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.paused(!0)
                    }
                    ,
                    s.resume = function(t, e) {
                        return null != t && this.seek(t, e),
                        this.paused(!1)
                    }
                    ,
                    s.seek = function(t, e) {
                        return this.totalTime(Number(t), e !== !1)
                    }
                    ,
                    s.restart = function(t, e) {
                        return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, e !== !1, !0)
                    }
                    ,
                    s.reverse = function(t, e) {
                        return null != t && this.seek(t || this.totalDuration(), e),
                        this.reversed(!0).paused(!1)
                    }
                    ,
                    s.render = function(t, e, i) {}
                    ,
                    s.invalidate = function() {
                        return this._time = this._totalTime = 0,
                        this._initted = this._gc = !1,
                        this._rawPrevTime = -1,
                        !this._gc && this.timeline || this._enabled(!0),
                        this
                    }
                    ,
                    s.isActive = function() {
                        var t, e = this._timeline, i = this._startTime;
                        return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= i && t < i + this.totalDuration() / this._timeScale
                    }
                    ,
                    s._enabled = function(t, e) {
                        return h || l.wake(),
                        this._gc = !t,
                        this._active = this.isActive(),
                        e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
                        !1
                    }
                    ,
                    s._kill = function(t, e) {
                        return this._enabled(!1, !1)
                    }
                    ,
                    s.kill = function(t, e) {
                        return this._kill(t, e),
                        this
                    }
                    ,
                    s._uncache = function(t) {
                        for (var e = t ? this : this.timeline; e; )
                            e._dirty = !0,
                            e = e.timeline;
                        return this
                    }
                    ,
                    s._swapSelfInParams = function(t) {
                        for (var e = t.length, i = t.concat(); --e > -1; )
                            "{self}" === t[e] && (i[e] = this);
                        return i
                    }
                    ,
                    s._callback = function(t) {
                        var e = this.vars
                          , i = e[t]
                          , n = e[t + "Params"]
                          , r = e[t + "Scope"] || e.callbackScope || this
                          , a = n ? n.length : 0;
                        switch (a) {
                        case 0:
                            i.call(r);
                            break;
                        case 1:
                            i.call(r, n[0]);
                            break;
                        case 2:
                            i.call(r, n[0], n[1]);
                            break;
                        default:
                            i.apply(r, n)
                        }
                    }
                    ,
                    s.eventCallback = function(t, e, i, n) {
                        if ("on" === (t || "").substr(0, 2)) {
                            var r = this.vars;
                            if (1 === arguments.length)
                                return r[t];
                            null == e ? delete r[t] : (r[t] = e,
                            r[t + "Params"] = m(i) && i.join("").indexOf("{self}") !== -1 ? this._swapSelfInParams(i) : i,
                            r[t + "Scope"] = n),
                            "onUpdate" === t && (this._onUpdate = e)
                        }
                        return this
                    }
                    ,
                    s.delay = function(t) {
                        return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay),
                        this._delay = t,
                        this) : this._delay
                    }
                    ,
                    s.duration = function(t) {
                        return arguments.length ? (this._duration = this._totalDuration = t,
                        this._uncache(!0),
                        this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
                        this) : (this._dirty = !1,
                        this._duration)
                    }
                    ,
                    s.totalDuration = function(t) {
                        return this._dirty = !1,
                        arguments.length ? this.duration(t) : this._totalDuration
                    }
                    ,
                    s.time = function(t, e) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
                    }
                    ,
                    s.totalTime = function(t, e, i) {
                        if (h || l.wake(),
                        !arguments.length)
                            return this._totalTime;
                        if (this._timeline) {
                            if (t < 0 && !i && (t += this.totalDuration()),
                            this._timeline.smoothChildTiming) {
                                this._dirty && this.totalDuration();
                                var n = this._totalDuration
                                  , r = this._timeline;
                                if (t > n && !i && (t = n),
                                this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? n - t : t) / this._timeScale,
                                r._dirty || this._uncache(!1),
                                r._timeline)
                                    for (; r._timeline; )
                                        r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0),
                                        r = r._timeline
                            }
                            this._gc && this._enabled(!0, !1),
                            this._totalTime === t && 0 !== this._duration || (k.length && $(),
                            this.render(t, e, !1),
                            k.length && $())
                        }
                        return this
                    }
                    ,
                    s.progress = s.totalProgress = function(t, e) {
                        var i = this.duration();
                        return arguments.length ? this.totalTime(i * t, e) : i ? this._time / i : this.ratio
                    }
                    ,
                    s.startTime = function(t) {
                        return arguments.length ? (t !== this._startTime && (this._startTime = t,
                        this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)),
                        this) : this._startTime
                    }
                    ,
                    s.endTime = function(t) {
                        return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale
                    }
                    ,
                    s.timeScale = function(t) {
                        if (!arguments.length)
                            return this._timeScale;
                        if (t = t || p,
                        this._timeline && this._timeline.smoothChildTiming) {
                            var e = this._pauseTime
                              , i = e || 0 === e ? e : this._timeline.totalTime();
                            this._startTime = i - (i - this._startTime) * this._timeScale / t
                        }
                        return this._timeScale = t,
                        this._uncache(!1)
                    }
                    ,
                    s.reversed = function(t) {
                        return arguments.length ? (t != this._reversed && (this._reversed = t,
                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                        this) : this._reversed
                    }
                    ,
                    s.paused = function(t) {
                        if (!arguments.length)
                            return this._paused;
                        var e, i, n = this._timeline;
                        return t != this._paused && n && (h || t || l.wake(),
                        e = n.rawTime(),
                        i = e - this._pauseTime,
                        !t && n.smoothChildTiming && (this._startTime += i,
                        this._uncache(!1)),
                        this._pauseTime = t ? e : null,
                        this._paused = t,
                        this._active = this.isActive(),
                        !t && 0 !== i && this._initted && this.duration() && (e = n.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale,
                        this.render(e, e === this._totalTime, !0))),
                        this._gc && !t && this._enabled(!0, !1),
                        this
                    }
                    ;
                    var O = _("core.SimpleTimeline", function(t) {
                        E.call(this, 0, t),
                        this.autoRemoveChildren = this.smoothChildTiming = !0
                    });
                    s = O.prototype = new E,
                    s.constructor = O,
                    s.kill()._gc = !1,
                    s._first = s._last = s._recent = null,
                    s._sortChildren = !1,
                    s.add = s.insert = function(t, e, i, n) {
                        var r, a;
                        if (t._startTime = Number(e || 0) + t._delay,
                        t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
                        t.timeline && t.timeline._remove(t, !0),
                        t.timeline = t._timeline = this,
                        t._gc && t._enabled(!0, !0),
                        r = this._last,
                        this._sortChildren)
                            for (a = t._startTime; r && r._startTime > a; )
                                r = r._prev;
                        return r ? (t._next = r._next,
                        r._next = t) : (t._next = this._first,
                        this._first = t),
                        t._next ? t._next._prev = t : this._last = t,
                        t._prev = r,
                        this._recent = t,
                        this._timeline && this._uncache(!0),
                        this
                    }
                    ,
                    s._remove = function(t, e) {
                        return t.timeline === this && (e || t._enabled(!1, !0),
                        t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next),
                        t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev),
                        t._next = t._prev = t.timeline = null,
                        t === this._recent && (this._recent = this._last),
                        this._timeline && this._uncache(!0)),
                        this
                    }
                    ,
                    s.render = function(t, e, i) {
                        var n, r = this._first;
                        for (this._totalTime = this._time = this._rawPrevTime = t; r; )
                            n = r._next,
                            (r._active || t >= r._startTime && !r._paused) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                            r = n
                    }
                    ,
                    s.rawTime = function() {
                        return h || l.wake(),
                        this._totalTime
                    }
                    ;
                    var R = _("TweenLite", function(e, i, n) {
                        if (E.call(this, i, n),
                        this.render = R.prototype.render,
                        null == e)
                            throw "Cannot tween a null target.";
                        this.target = e = "string" != typeof e ? e : R.selector(e) || e;
                        var r, a, o, s = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType), l = this.vars.overwrite;
                        if (this._overwrite = l = null == l ? X[R.defaultOverwrite] : "number" == typeof l ? l >> 0 : X[l],
                        (s || e instanceof Array || e.push && m(e)) && "number" != typeof e[0])
                            for (this._targets = o = f(e),
                            this._propLookup = [],
                            this._siblings = [],
                            r = 0; r < o.length; r++)
                                a = o[r],
                                a ? "string" != typeof a ? a.length && a !== t && a[0] && (a[0] === t || a[0].nodeType && a[0].style && !a.nodeType) ? (o.splice(r--, 1),
                                this._targets = o = o.concat(f(a))) : (this._siblings[r] = K(a, this, !1),
                                1 === l && this._siblings[r].length > 1 && J(a, this, null, 1, this._siblings[r])) : (a = o[r--] = R.selector(a),
                                "string" == typeof a && o.splice(r + 1, 1)) : o.splice(r--, 1);
                        else
                            this._propLookup = {},
                            this._siblings = K(e, this, !1),
                            1 === l && this._siblings.length > 1 && J(e, this, null, 1, this._siblings);
                        (this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -p,
                        this.render(Math.min(0, -this._delay)))
                    }, !0)
                      , D = function(e) {
                        return e && e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType)
                    }
                      , I = function(t, e) {
                        var i, n = {};
                        for (i in t)
                            W[i] || i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!V[i] || V[i] && V[i]._autoCSS) || (n[i] = t[i],
                            delete t[i]);
                        t.css = n
                    };
                    s = R.prototype = new E,
                    s.constructor = R,
                    s.kill()._gc = !1,
                    s.ratio = 0,
                    s._firstPT = s._targets = s._overwrittenProps = s._startAt = null,
                    s._notifyPluginsOfEnabled = s._lazy = !1,
                    R.version = "1.19.0",
                    R.defaultEase = s._ease = new b(null,null,1,1),
                    R.defaultOverwrite = "auto",
                    R.ticker = l,
                    R.autoSleep = 120,
                    R.lagSmoothing = function(t, e) {
                        l.lagSmoothing(t, e)
                    }
                    ,
                    R.selector = t.$ || t.jQuery || function(e) {
                        var i = t.$ || t.jQuery;
                        return i ? (R.selector = i,
                        i(e)) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e)
                    }
                    ;
                    var k = []
                      , N = {}
                      , F = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                      , B = function(t) {
                        for (var e, i = this._firstPT, n = 1e-6; i; )
                            e = i.blob ? t ? this.join("") : this.start : i.c * t + i.s,
                            i.m ? e = i.m(e, this._target || i.t) : e < n && e > -n && (e = 0),
                            i.f ? i.fp ? i.t[i.p](i.fp, e) : i.t[i.p](e) : i.t[i.p] = e,
                            i = i._next
                    }
                      , U = function(t, e, i, n) {
                        var r, a, o, s, l, h, c, u = [t, e], p = 0, f = "", d = 0;
                        for (u.start = t,
                        i && (i(u),
                        t = u[0],
                        e = u[1]),
                        u.length = 0,
                        r = t.match(F) || [],
                        a = e.match(F) || [],
                        n && (n._next = null,
                        n.blob = 1,
                        u._firstPT = u._applyPT = n),
                        l = a.length,
                        s = 0; s < l; s++)
                            c = a[s],
                            h = e.substr(p, e.indexOf(c, p) - p),
                            f += h || !s ? h : ",",
                            p += h.length,
                            d ? d = (d + 1) % 5 : "rgba(" === h.substr(-5) && (d = 1),
                            c === r[s] || r.length <= s ? f += c : (f && (u.push(f),
                            f = ""),
                            o = parseFloat(r[s]),
                            u.push(o),
                            u._firstPT = {
                                _next: u._firstPT,
                                t: u,
                                p: u.length - 1,
                                s: o,
                                c: ("=" === c.charAt(1) ? parseInt(c.charAt(0) + "1", 10) * parseFloat(c.substr(2)) : parseFloat(c) - o) || 0,
                                f: 0,
                                m: d && d < 4 ? Math.round : 0
                            }),
                            p += c.length;
                        return f += e.substr(p),
                        f && u.push(f),
                        u.setRatio = B,
                        u
                    }
                      , z = function(t, e, i, n, r, a, o, s, l) {
                        "function" == typeof n && (n = n(l || 0, t));
                        var h, c, u = "get" === i ? t[e] : i, p = typeof t[e], f = "string" == typeof n && "=" === n.charAt(1), d = {
                            t: t,
                            p: e,
                            s: u,
                            f: "function" === p,
                            pg: 0,
                            n: r || e,
                            m: a ? "function" == typeof a ? a : Math.round : 0,
                            pr: 0,
                            c: f ? parseInt(n.charAt(0) + "1", 10) * parseFloat(n.substr(2)) : parseFloat(n) - u || 0
                        };
                        if ("number" !== p && ("function" === p && "get" === i && (c = e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3),
                        d.s = u = o ? t[c](o) : t[c]()),
                        "string" == typeof u && (o || isNaN(u)) ? (d.fp = o,
                        h = U(u, n, s || R.defaultStringFilter, d),
                        d = {
                            t: h,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 2,
                            pg: 0,
                            n: r || e,
                            pr: 0,
                            m: 0
                        }) : f || (d.s = parseFloat(u),
                        d.c = parseFloat(n) - d.s || 0)),
                        d.c)
                            return (d._next = this._firstPT) && (d._next._prev = d),
                            this._firstPT = d,
                            d
                    }
                      , j = R._internals = {
                        isArray: m,
                        isSelector: D,
                        lazyTweens: k,
                        blobDif: U
                    }
                      , V = R._plugins = {}
                      , G = j.tweenLookup = {}
                      , H = 0
                      , W = j.reservedProps = {
                        ease: 1,
                        delay: 1,
                        overwrite: 1,
                        onComplete: 1,
                        onCompleteParams: 1,
                        onCompleteScope: 1,
                        useFrames: 1,
                        runBackwards: 1,
                        startAt: 1,
                        onUpdate: 1,
                        onUpdateParams: 1,
                        onUpdateScope: 1,
                        onStart: 1,
                        onStartParams: 1,
                        onStartScope: 1,
                        onReverseComplete: 1,
                        onReverseCompleteParams: 1,
                        onReverseCompleteScope: 1,
                        onRepeat: 1,
                        onRepeatParams: 1,
                        onRepeatScope: 1,
                        easeParams: 1,
                        yoyo: 1,
                        immediateRender: 1,
                        repeat: 1,
                        repeatDelay: 1,
                        data: 1,
                        paused: 1,
                        reversed: 1,
                        autoCSS: 1,
                        lazy: 1,
                        onOverwrite: 1,
                        callbackScope: 1,
                        stringFilter: 1,
                        id: 1
                    }
                      , X = {
                        none: 0,
                        all: 1,
                        auto: 2,
                        concurrent: 3,
                        allOnStart: 4,
                        preexisting: 5,
                        "true": 1,
                        "false": 0
                    }
                      , q = E._rootFramesTimeline = new O
                      , Y = E._rootTimeline = new O
                      , Z = 30
                      , $ = j.lazyRender = function() {
                        var t, e = k.length;
                        for (N = {}; --e > -1; )
                            t = k[e],
                            t && t._lazy !== !1 && (t.render(t._lazy[0], t._lazy[1], !0),
                            t._lazy = !1);
                        k.length = 0
                    }
                    ;
                    Y._startTime = l.time,
                    q._startTime = l.frame,
                    Y._active = q._active = !0,
                    setTimeout($, 1),
                    E._updateRoot = R.render = function() {
                        var t, e, i;
                        if (k.length && $(),
                        Y.render((l.time - Y._startTime) * Y._timeScale, !1, !1),
                        q.render((l.frame - q._startTime) * q._timeScale, !1, !1),
                        k.length && $(),
                        l.frame >= Z) {
                            Z = l.frame + (parseInt(R.autoSleep, 10) || 120);
                            for (i in G) {
                                for (e = G[i].tweens,
                                t = e.length; --t > -1; )
                                    e[t]._gc && e.splice(t, 1);
                                0 === e.length && delete G[i]
                            }
                            if (i = Y._first,
                            (!i || i._paused) && R.autoSleep && !q._first && 1 === l._listeners.tick.length) {
                                for (; i && i._paused; )
                                    i = i._next;
                                i || l.sleep()
                            }
                        }
                    }
                    ,
                    l.addEventListener("tick", E._updateRoot);
                    var K = function(t, e, i) {
                        var n, r, a = t._gsTweenID;
                        if (G[a || (t._gsTweenID = a = "t" + H++)] || (G[a] = {
                            target: t,
                            tweens: []
                        }),
                        e && (n = G[a].tweens,
                        n[r = n.length] = e,
                        i))
                            for (; --r > -1; )
                                n[r] === e && n.splice(r, 1);
                        return G[a].tweens
                    }
                      , Q = function(t, e, i, n) {
                        var r, a, o = t.vars.onOverwrite;
                        return o && (r = o(t, e, i, n)),
                        o = R.onOverwrite,
                        o && (a = o(t, e, i, n)),
                        r !== !1 && a !== !1
                    }
                      , J = function(t, e, i, n, r) {
                        var a, o, s, l;
                        if (1 === n || n >= 4) {
                            for (l = r.length,
                            a = 0; a < l; a++)
                                if ((s = r[a]) !== e)
                                    s._gc || s._kill(null, t, e) && (o = !0);
                                else if (5 === n)
                                    break;
                            return o
                        }
                        var h, c = e._startTime + p, u = [], f = 0, d = 0 === e._duration;
                        for (a = r.length; --a > -1; )
                            (s = r[a]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (h = h || tt(e, 0, d),
                            0 === tt(s, h, d) && (u[f++] = s)) : s._startTime <= c && s._startTime + s.totalDuration() / s._timeScale > c && ((d || !s._initted) && c - s._startTime <= 2e-10 || (u[f++] = s)));
                        for (a = f; --a > -1; )
                            if (s = u[a],
                            2 === n && s._kill(i, t, e) && (o = !0),
                            2 !== n || !s._firstPT && s._initted) {
                                if (2 !== n && !Q(s, e))
                                    continue;
                                s._enabled(!1, !1) && (o = !0)
                            }
                        return o
                    }
                      , tt = function(t, e, i) {
                        for (var n = t._timeline, r = n._timeScale, a = t._startTime; n._timeline; ) {
                            if (a += n._startTime,
                            r *= n._timeScale,
                            n._paused)
                                return -100;
                            n = n._timeline
                        }
                        return a /= r,
                        a > e ? a - e : i && a === e || !t._initted && a - e < 2 * p ? p : (a += t.totalDuration() / t._timeScale / r) > e + p ? 0 : a - e - p
                    };
                    s._init = function() {
                        var t, e, i, n, r, a, o = this.vars, s = this._overwrittenProps, l = this._duration, h = !!o.immediateRender, c = o.ease;
                        if (o.startAt) {
                            this._startAt && (this._startAt.render(-1, !0),
                            this._startAt.kill()),
                            r = {};
                            for (n in o.startAt)
                                r[n] = o.startAt[n];
                            if (r.overwrite = !1,
                            r.immediateRender = !0,
                            r.lazy = h && o.lazy !== !1,
                            r.startAt = r.delay = null,
                            this._startAt = R.to(this.target, 0, r),
                            h)
                                if (this._time > 0)
                                    this._startAt = null;
                                else if (0 !== l)
                                    return
                        } else if (o.runBackwards && 0 !== l)
                            if (this._startAt)
                                this._startAt.render(-1, !0),
                                this._startAt.kill(),
                                this._startAt = null;
                            else {
                                0 !== this._time && (h = !1),
                                i = {};
                                for (n in o)
                                    W[n] && "autoCSS" !== n || (i[n] = o[n]);
                                if (i.overwrite = 0,
                                i.data = "isFromStart",
                                i.lazy = h && o.lazy !== !1,
                                i.immediateRender = h,
                                this._startAt = R.to(this.target, 0, i),
                                h) {
                                    if (0 === this._time)
                                        return
                                } else
                                    this._startAt._init(),
                                    this._startAt._enabled(!1),
                                    this.vars.immediateRender && (this._startAt = null)
                            }
                        if (this._ease = c = c ? c instanceof b ? c : "function" == typeof c ? new b(c,o.easeParams) : w[c] || R.defaultEase : R.defaultEase,
                        o.easeParams instanceof Array && c.config && (this._ease = c.config.apply(c, o.easeParams)),
                        this._easeType = this._ease._type,
                        this._easePower = this._ease._power,
                        this._firstPT = null,
                        this._targets)
                            for (a = this._targets.length,
                            t = 0; t < a; t++)
                                this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], s ? s[t] : null, t) && (e = !0);
                        else
                            e = this._initProps(this.target, this._propLookup, this._siblings, s, 0);
                        if (e && R._onPluginEvent("_onInitAllProps", this),
                        s && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                        o.runBackwards)
                            for (i = this._firstPT; i; )
                                i.s += i.c,
                                i.c = -i.c,
                                i = i._next;
                        this._onUpdate = o.onUpdate,
                        this._initted = !0
                    }
                    ,
                    s._initProps = function(e, i, n, r, a) {
                        var o, s, l, h, c, u;
                        if (null == e)
                            return !1;
                        N[e._gsTweenID] && $(),
                        this.vars.css || e.style && e !== t && e.nodeType && V.css && this.vars.autoCSS !== !1 && I(this.vars, e);
                        for (o in this.vars)
                            if (u = this.vars[o],
                            W[o])
                                u && (u instanceof Array || u.push && m(u)) && u.join("").indexOf("{self}") !== -1 && (this.vars[o] = u = this._swapSelfInParams(u, this));
                            else if (V[o] && (h = new V[o])._onInitTween(e, this.vars[o], this, a)) {
                                for (this._firstPT = c = {
                                    _next: this._firstPT,
                                    t: h,
                                    p: "setRatio",
                                    s: 0,
                                    c: 1,
                                    f: 1,
                                    n: o,
                                    pg: 1,
                                    pr: h._priority,
                                    m: 0
                                },
                                s = h._overwriteProps.length; --s > -1; )
                                    i[h._overwriteProps[s]] = this._firstPT;
                                (h._priority || h._onInitAllProps) && (l = !0),
                                (h._onDisable || h._onEnable) && (this._notifyPluginsOfEnabled = !0),
                                c._next && (c._next._prev = c)
                            } else
                                i[o] = z.call(this, e, o, "get", u, o, 0, null, this.vars.stringFilter, a);
                        return r && this._kill(r, e) ? this._initProps(e, i, n, r, a) : this._overwrite > 1 && this._firstPT && n.length > 1 && J(e, this, i, this._overwrite, n) ? (this._kill(i, e),
                        this._initProps(e, i, n, r, a)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (N[e._gsTweenID] = !0),
                        l)
                    }
                    ,
                    s.render = function(t, e, i) {
                        var n, r, a, o, s = this._time, l = this._duration, h = this._rawPrevTime;
                        if (t >= l - 1e-7)
                            this._totalTime = this._time = l,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                            this._reversed || (n = !0,
                            r = "onComplete",
                            i = i || this._timeline.autoRemoveChildren),
                            0 === l && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0),
                            (h < 0 || t <= 0 && t >= -1e-7 || h === p && "isPause" !== this.data) && h !== t && (i = !0,
                            h > p && (r = "onReverseComplete")),
                            this._rawPrevTime = o = !e || t || h === t ? t : p);
                        else if (t < 1e-7)
                            this._totalTime = this._time = 0,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                            (0 !== s || 0 === l && h > 0) && (r = "onReverseComplete",
                            n = this._reversed),
                            t < 0 && (this._active = !1,
                            0 === l && (this._initted || !this.vars.lazy || i) && (h >= 0 && (h !== p || "isPause" !== this.data) && (i = !0),
                            this._rawPrevTime = o = !e || t || h === t ? t : p)),
                            this._initted || (i = !0);
                        else if (this._totalTime = this._time = t,
                        this._easeType) {
                            var c = t / l
                              , u = this._easeType
                              , f = this._easePower;
                            (1 === u || 3 === u && c >= .5) && (c = 1 - c),
                            3 === u && (c *= 2),
                            1 === f ? c *= c : 2 === f ? c *= c * c : 3 === f ? c *= c * c * c : 4 === f && (c *= c * c * c * c),
                            1 === u ? this.ratio = 1 - c : 2 === u ? this.ratio = c : t / l < .5 ? this.ratio = c / 2 : this.ratio = 1 - c / 2
                        } else
                            this.ratio = this._ease.getRatio(t / l);
                        if (this._time !== s || i) {
                            if (!this._initted) {
                                if (this._init(),
                                !this._initted || this._gc)
                                    return;
                                if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                                    return this._time = this._totalTime = s,
                                    this._rawPrevTime = h,
                                    k.push(this),
                                    void (this._lazy = [t, e]);
                                this._time && !n ? this.ratio = this._ease.getRatio(this._time / l) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                            }
                            for (this._lazy !== !1 && (this._lazy = !1),
                            this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0),
                            0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")),
                            this.vars.onStart && (0 === this._time && 0 !== l || e || this._callback("onStart"))),
                            a = this._firstPT; a; )
                                a.f ? a.t[a.p](a.c * this.ratio + a.s) : a.t[a.p] = a.c * this.ratio + a.s,
                                a = a._next;
                            this._onUpdate && (t < 0 && this._startAt && t !== -1e-4 && this._startAt.render(t, e, i),
                            e || (this._time !== s || n || i) && this._callback("onUpdate")),
                            r && (this._gc && !i || (t < 0 && this._startAt && !this._onUpdate && t !== -1e-4 && this._startAt.render(t, e, i),
                            n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !e && this.vars[r] && this._callback(r),
                            0 === l && this._rawPrevTime === p && o !== p && (this._rawPrevTime = 0)))
                        }
                    }
                    ,
                    s._kill = function(t, e, i) {
                        if ("all" === t && (t = null),
                        null == t && (null == e || e === this.target))
                            return this._lazy = !1,
                            this._enabled(!1, !1);
                        e = "string" != typeof e ? e || this._targets || this.target : R.selector(e) || e;
                        var n, r, a, o, s, l, h, c, u, p = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline;
                        if ((m(e) || D(e)) && "number" != typeof e[0])
                            for (n = e.length; --n > -1; )
                                this._kill(t, e[n], i) && (l = !0);
                        else {
                            if (this._targets) {
                                for (n = this._targets.length; --n > -1; )
                                    if (e === this._targets[n]) {
                                        s = this._propLookup[n] || {},
                                        this._overwrittenProps = this._overwrittenProps || [],
                                        r = this._overwrittenProps[n] = t ? this._overwrittenProps[n] || {} : "all";
                                        break
                                    }
                            } else {
                                if (e !== this.target)
                                    return !1;
                                s = this._propLookup,
                                r = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                            }
                            if (s) {
                                if (h = t || s,
                                c = t !== r && "all" !== r && t !== s && ("object" != typeof t || !t._tempKill),
                                i && (R.onOverwrite || this.vars.onOverwrite)) {
                                    for (a in h)
                                        s[a] && (u || (u = []),
                                        u.push(a));
                                    if ((u || !t) && !Q(this, i, e, u))
                                        return !1
                                }
                                for (a in h)
                                    (o = s[a]) && (p && (o.f ? o.t[o.p](o.s) : o.t[o.p] = o.s,
                                    l = !0),
                                    o.pg && o.t._kill(h) && (l = !0),
                                    o.pg && 0 !== o.t._overwriteProps.length || (o._prev ? o._prev._next = o._next : o === this._firstPT && (this._firstPT = o._next),
                                    o._next && (o._next._prev = o._prev),
                                    o._next = o._prev = null),
                                    delete s[a]),
                                    c && (r[a] = 1);
                                !this._firstPT && this._initted && this._enabled(!1, !1)
                            }
                        }
                        return l
                    }
                    ,
                    s.invalidate = function() {
                        return this._notifyPluginsOfEnabled && R._onPluginEvent("_onDisable", this),
                        this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null,
                        this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                        this._propLookup = this._targets ? {} : [],
                        E.prototype.invalidate.call(this),
                        this.vars.immediateRender && (this._time = -p,
                        this.render(Math.min(0, -this._delay))),
                        this
                    }
                    ,
                    s._enabled = function(t, e) {
                        if (h || l.wake(),
                        t && this._gc) {
                            var i, n = this._targets;
                            if (n)
                                for (i = n.length; --i > -1; )
                                    this._siblings[i] = K(n[i], this, !0);
                            else
                                this._siblings = K(this.target, this, !0)
                        }
                        return E.prototype._enabled.call(this, t, e),
                        !(!this._notifyPluginsOfEnabled || !this._firstPT) && R._onPluginEvent(t ? "_onEnable" : "_onDisable", this)
                    }
                    ,
                    R.to = function(t, e, i) {
                        return new R(t,e,i)
                    }
                    ,
                    R.from = function(t, e, i) {
                        return i.runBackwards = !0,
                        i.immediateRender = 0 != i.immediateRender,
                        new R(t,e,i)
                    }
                    ,
                    R.fromTo = function(t, e, i, n) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        new R(t,e,n)
                    }
                    ,
                    R.delayedCall = function(t, e, i, n, r) {
                        return new R(e,0,{
                            delay: t,
                            onComplete: e,
                            onCompleteParams: i,
                            callbackScope: n,
                            onReverseComplete: e,
                            onReverseCompleteParams: i,
                            immediateRender: !1,
                            lazy: !1,
                            useFrames: r,
                            overwrite: 0
                        })
                    }
                    ,
                    R.set = function(t, e) {
                        return new R(t,0,e)
                    }
                    ,
                    R.getTweensOf = function(t, e) {
                        if (null == t)
                            return [];
                        t = "string" != typeof t ? t : R.selector(t) || t;
                        var i, n, r, a;
                        if ((m(t) || D(t)) && "number" != typeof t[0]) {
                            for (i = t.length,
                            n = []; --i > -1; )
                                n = n.concat(R.getTweensOf(t[i], e));
                            for (i = n.length; --i > -1; )
                                for (a = n[i],
                                r = i; --r > -1; )
                                    a === n[r] && n.splice(i, 1)
                        } else
                            for (n = K(t).concat(),
                            i = n.length; --i > -1; )
                                (n[i]._gc || e && !n[i].isActive()) && n.splice(i, 1);
                        return n
                    }
                    ,
                    R.killTweensOf = R.killDelayedCallsTo = function(t, e, i) {
                        "object" == typeof e && (i = e,
                        e = !1);
                        for (var n = R.getTweensOf(t, e), r = n.length; --r > -1; )
                            n[r]._kill(i, t)
                    }
                    ;
                    var et = _("plugins.TweenPlugin", function(t, e) {
                        this._overwriteProps = (t || "").split(","),
                        this._propName = this._overwriteProps[0],
                        this._priority = e || 0,
                        this._super = et.prototype
                    }, !0);
                    if (s = et.prototype,
                    et.version = "1.19.0",
                    et.API = 2,
                    s._firstPT = null,
                    s._addTween = z,
                    s.setRatio = B,
                    s._kill = function(t) {
                        var e, i = this._overwriteProps, n = this._firstPT;
                        if (null != t[this._propName])
                            this._overwriteProps = [];
                        else
                            for (e = i.length; --e > -1; )
                                null != t[i[e]] && i.splice(e, 1);
                        for (; n; )
                            null != t[n.n] && (n._next && (n._next._prev = n._prev),
                            n._prev ? (n._prev._next = n._next,
                            n._prev = null) : this._firstPT === n && (this._firstPT = n._next)),
                            n = n._next;
                        return !1
                    }
                    ,
                    s._mod = s._roundProps = function(t) {
                        for (var e, i = this._firstPT; i; )
                            e = t[this._propName] || null != i.n && t[i.n.split(this._propName + "_").join("")],
                            e && "function" == typeof e && (2 === i.f ? i.t._applyPT.m = e : i.m = e),
                            i = i._next
                    }
                    ,
                    R._onPluginEvent = function(t, e) {
                        var i, n, r, a, o, s = e._firstPT;
                        if ("_onInitAllProps" === t) {
                            for (; s; ) {
                                for (o = s._next,
                                n = r; n && n.pr > s.pr; )
                                    n = n._next;
                                (s._prev = n ? n._prev : a) ? s._prev._next = s : r = s,
                                (s._next = n) ? n._prev = s : a = s,
                                s = o
                            }
                            s = e._firstPT = r
                        }
                        for (; s; )
                            s.pg && "function" == typeof s.t[t] && s.t[t]() && (i = !0),
                            s = s._next;
                        return i
                    }
                    ,
                    et.activate = function(t) {
                        for (var e = t.length; --e > -1; )
                            t[e].API === et.API && (V[(new t[e])._propName] = t[e]);
                        return !0
                    }
                    ,
                    y.plugin = function(t) {
                        if (!(t && t.propName && t.init && t.API))
                            throw "illegal plugin definition.";
                        var e, i = t.propName, n = t.priority || 0, r = t.overwriteProps, a = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_mod",
                            mod: "_mod",
                            initAll: "_onInitAllProps"
                        }, o = _("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function() {
                            et.call(this, i, n),
                            this._overwriteProps = r || []
                        }, t.global === !0), s = o.prototype = new et(i);
                        s.constructor = o,
                        o.API = t.API;
                        for (e in a)
                            "function" == typeof t[e] && (s[a[e]] = t[e]);
                        return o.version = t.version,
                        et.activate([o]),
                        o
                    }
                    ,
                    a = t._gsQueue) {
                        for (o = 0; o < a.length; o++)
                            a[o]();
                        for (s in g)
                            !g[s].func
                    }
                    h = !1
                }
            }("undefined" != typeof e && e.exports && "undefined" != typeof t ? t : this || window, "TweenMax")
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    3: [function(t, e, i) {
        (function(i) {
            /*!
 * VERSION: 1.19.0
 * DATE: 2016-07-14
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
            var n = "undefined" != typeof e && e.exports && "undefined" != typeof i ? i : this || window;
            (n._gsQueue || (n._gsQueue = [])).push(function() {
                "use strict";
                n._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(t, e) {
                    var i, r, a, o, s = function() {
                        t.call(this, "css"),
                        this._overwriteProps.length = 0,
                        this.setRatio = s.prototype.setRatio
                    }, l = n._gsDefine.globals, h = {}, c = s.prototype = new t("css");
                    c.constructor = s,
                    s.version = "1.19.0",
                    s.API = 2,
                    s.defaultTransformPerspective = 0,
                    s.defaultSkewType = "compensated",
                    s.defaultSmoothOrigin = !0,
                    c = "px",
                    s.suffixMap = {
                        top: c,
                        right: c,
                        bottom: c,
                        left: c,
                        width: c,
                        height: c,
                        fontSize: c,
                        padding: c,
                        margin: c,
                        perspective: c,
                        lineHeight: ""
                    };
                    var u, p, f, d, m, g, v, y, _ = /(?:\-|\.|\b)(\d|\.|e\-)+/g, x = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, b = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, w = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, M = /(?:\d|\-|\+|=|#|\.)*/g, T = /opacity *= *([^)]*)/i, S = /opacity:([^;]*)/i, C = /alpha\(opacity *=.+?\)/i, A = /^(rgb|hsl)/, P = /([A-Z])/g, E = /-([a-z])/gi, L = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, O = function(t, e) {
                        return e.toUpperCase()
                    }, R = /(?:Left|Right|Width)/i, D = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, I = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, k = /,(?=[^\)]*(?:\(|$))/gi, N = /[\s,\(]/i, F = Math.PI / 180, B = 180 / Math.PI, U = {}, z = document, j = function(t) {
                        return z.createElementNS ? z.createElementNS("http://www.w3.org/1999/xhtml", t) : z.createElement(t)
                    }, V = j("div"), G = j("img"), H = s._internals = {
                        _specialProps: h
                    }, W = navigator.userAgent, X = function() {
                        var t = W.indexOf("Android")
                          , e = j("a");
                        return f = W.indexOf("Safari") !== -1 && W.indexOf("Chrome") === -1 && (t === -1 || Number(W.substr(t + 8, 1)) > 3),
                        m = f && Number(W.substr(W.indexOf("Version/") + 8, 1)) < 6,
                        d = W.indexOf("Firefox") !== -1,
                        (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(W) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(W)) && (g = parseFloat(RegExp.$1)),
                        !!e && (e.style.cssText = "top:1px;opacity:.55;",
                        /^0.55/.test(e.style.opacity))
                    }(), q = function(t) {
                        return T.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                    }, Y = function(t) {
                        window.console
                    }, Z = "", $ = "", K = function(t, e) {
                        e = e || V;
                        var i, n, r = e.style;
                        if (void 0 !== r[t])
                            return t;
                        for (t = t.charAt(0).toUpperCase() + t.substr(1),
                        i = ["O", "Moz", "ms", "Ms", "Webkit"],
                        n = 5; --n > -1 && void 0 === r[i[n] + t]; )
                            ;
                        return n >= 0 ? ($ = 3 === n ? "ms" : i[n],
                        Z = "-" + $.toLowerCase() + "-",
                        $ + t) : null
                    }, Q = z.defaultView ? z.defaultView.getComputedStyle : function() {}
                    , J = s.getStyle = function(t, e, i, n, r) {
                        var a;
                        return X || "opacity" !== e ? (!n && t.style[e] ? a = t.style[e] : (i = i || Q(t)) ? a = i[e] || i.getPropertyValue(e) || i.getPropertyValue(e.replace(P, "-$1").toLowerCase()) : t.currentStyle && (a = t.currentStyle[e]),
                        null == r || a && "none" !== a && "auto" !== a && "auto auto" !== a ? a : r) : q(t)
                    }
                    , tt = H.convertToPixels = function(t, i, n, r, a) {
                        if ("px" === r || !r)
                            return n;
                        if ("auto" === r || !n)
                            return 0;
                        var o, l, h, c = R.test(i), u = t, p = V.style, f = n < 0, d = 1 === n;
                        if (f && (n = -n),
                        d && (n *= 100),
                        "%" === r && i.indexOf("border") !== -1)
                            o = n / 100 * (c ? t.clientWidth : t.clientHeight);
                        else {
                            if (p.cssText = "border:0 solid red;position:" + J(t, "position") + ";line-height:0;",
                            "%" !== r && u.appendChild && "v" !== r.charAt(0) && "rem" !== r)
                                p[c ? "borderLeftWidth" : "borderTopWidth"] = n + r;
                            else {
                                if (u = t.parentNode || z.body,
                                l = u._gsCache,
                                h = e.ticker.frame,
                                l && c && l.time === h)
                                    return l.width * n / 100;
                                p[c ? "width" : "height"] = n + r
                            }
                            u.appendChild(V),
                            o = parseFloat(V[c ? "offsetWidth" : "offsetHeight"]),
                            u.removeChild(V),
                            c && "%" === r && s.cacheWidths !== !1 && (l = u._gsCache = u._gsCache || {},
                            l.time = h,
                            l.width = o / n * 100),
                            0 !== o || a || (o = tt(t, i, n, r, !0))
                        }
                        return d && (o /= 100),
                        f ? -o : o
                    }
                    , et = H.calculateOffset = function(t, e, i) {
                        if ("absolute" !== J(t, "position", i))
                            return 0;
                        var n = "left" === e ? "Left" : "Top"
                          , r = J(t, "margin" + n, i);
                        return t["offset" + n] - (tt(t, e, parseFloat(r), r.replace(M, "")) || 0)
                    }
                    , it = function(t, e) {
                        var i, n, r, a = {};
                        if (e = e || Q(t, null))
                            if (i = e.length)
                                for (; --i > -1; )
                                    r = e[i],
                                    r.indexOf("-transform") !== -1 && Et !== r || (a[r.replace(E, O)] = e.getPropertyValue(r));
                            else
                                for (i in e)
                                    i.indexOf("Transform") !== -1 && Pt !== i || (a[i] = e[i]);
                        else if (e = t.currentStyle || t.style)
                            for (i in e)
                                "string" == typeof i && void 0 === a[i] && (a[i.replace(E, O)] = e[i]);
                        return X || (a.opacity = q(t)),
                        n = Vt(t, e, !1),
                        a.rotation = n.rotation,
                        a.skewX = n.skewX,
                        a.scaleX = n.scaleX,
                        a.scaleY = n.scaleY,
                        a.x = n.x,
                        a.y = n.y,
                        Ot && (a.z = n.z,
                        a.rotationX = n.rotationX,
                        a.rotationY = n.rotationY,
                        a.scaleZ = n.scaleZ),
                        a.filters && delete a.filters,
                        a
                    }, nt = function(t, e, i, n, r) {
                        var a, o, s, l = {}, h = t.style;
                        for (o in i)
                            "cssText" !== o && "length" !== o && isNaN(o) && (e[o] !== (a = i[o]) || r && r[o]) && o.indexOf("Origin") === -1 && ("number" != typeof a && "string" != typeof a || (l[o] = "auto" !== a || "left" !== o && "top" !== o ? "" !== a && "auto" !== a && "none" !== a || "string" != typeof e[o] || "" === e[o].replace(w, "") ? a : 0 : et(t, o),
                            void 0 !== h[o] && (s = new yt(h,o,h[o],s))));
                        if (n)
                            for (o in n)
                                "className" !== o && (l[o] = n[o]);
                        return {
                            difs: l,
                            firstMPT: s
                        }
                    }, rt = {
                        width: ["Left", "Right"],
                        height: ["Top", "Bottom"]
                    }, at = ["marginLeft", "marginRight", "marginTop", "marginBottom"], ot = function(t, e, i) {
                        if ("svg" === (t.nodeName + "").toLowerCase())
                            return (i || Q(t))[e] || 0;
                        if (t.getBBox && Ut(t))
                            return t.getBBox()[e] || 0;
                        var n = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight)
                          , r = rt[e]
                          , a = r.length;
                        for (i = i || Q(t, null); --a > -1; )
                            n -= parseFloat(J(t, "padding" + r[a], i, !0)) || 0,
                            n -= parseFloat(J(t, "border" + r[a] + "Width", i, !0)) || 0;
                        return n
                    }, st = function(t, e) {
                        if ("contain" === t || "auto" === t || "auto auto" === t)
                            return t + " ";
                        null != t && "" !== t || (t = "0 0");
                        var i, n = t.split(" "), r = t.indexOf("left") !== -1 ? "0%" : t.indexOf("right") !== -1 ? "100%" : n[0], a = t.indexOf("top") !== -1 ? "0%" : t.indexOf("bottom") !== -1 ? "100%" : n[1];
                        if (n.length > 3 && !e) {
                            for (n = t.split(", ").join(",").split(","),
                            t = [],
                            i = 0; i < n.length; i++)
                                t.push(st(n[i]));
                            return t.join(",")
                        }
                        return null == a ? a = "center" === r ? "50%" : "0" : "center" === a && (a = "50%"),
                        ("center" === r || isNaN(parseFloat(r)) && (r + "").indexOf("=") === -1) && (r = "50%"),
                        t = r + " " + a + (n.length > 2 ? " " + n[2] : ""),
                        e && (e.oxp = r.indexOf("%") !== -1,
                        e.oyp = a.indexOf("%") !== -1,
                        e.oxr = "=" === r.charAt(1),
                        e.oyr = "=" === a.charAt(1),
                        e.ox = parseFloat(r.replace(w, "")),
                        e.oy = parseFloat(a.replace(w, "")),
                        e.v = t),
                        e || t
                    }, lt = function(t, e) {
                        return "function" == typeof t && (t = t(y, v)),
                        "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e) || 0
                    }, ht = function(t, e) {
                        return "function" == typeof t && (t = t(y, v)),
                        null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) + e : parseFloat(t) || 0
                    }, ct = function(t, e, i, n) {
                        var r, a, o, s, l, h = 1e-6;
                        return "function" == typeof t && (t = t(y, v)),
                        null == t ? s = e : "number" == typeof t ? s = t : (r = 360,
                        a = t.split("_"),
                        l = "=" === t.charAt(1),
                        o = (l ? parseInt(t.charAt(0) + "1", 10) * parseFloat(a[0].substr(2)) : parseFloat(a[0])) * (t.indexOf("rad") === -1 ? 1 : B) - (l ? 0 : e),
                        a.length && (n && (n[i] = e + o),
                        t.indexOf("short") !== -1 && (o %= r,
                        o !== o % (r / 2) && (o = o < 0 ? o + r : o - r)),
                        t.indexOf("_cw") !== -1 && o < 0 ? o = (o + 9999999999 * r) % r - (o / r | 0) * r : t.indexOf("ccw") !== -1 && o > 0 && (o = (o - 9999999999 * r) % r - (o / r | 0) * r)),
                        s = e + o),
                        s < h && s > -h && (s = 0),
                        s
                    }, ut = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0]
                    }, pt = function(t, e, i) {
                        return t = t < 0 ? t + 1 : t > 1 ? t - 1 : t,
                        255 * (6 * t < 1 ? e + (i - e) * t * 6 : t < .5 ? i : 3 * t < 2 ? e + (i - e) * (2 / 3 - t) * 6 : e) + .5 | 0
                    }, ft = s.parseColor = function(t, e) {
                        var i, n, r, a, o, s, l, h, c, u, p;
                        if (t)
                            if ("number" == typeof t)
                                i = [t >> 16, t >> 8 & 255, 255 & t];
                            else {
                                if ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)),
                                ut[t])
                                    i = ut[t];
                                else if ("#" === t.charAt(0))
                                    4 === t.length && (n = t.charAt(1),
                                    r = t.charAt(2),
                                    a = t.charAt(3),
                                    t = "#" + n + n + r + r + a + a),
                                    t = parseInt(t.substr(1), 16),
                                    i = [t >> 16, t >> 8 & 255, 255 & t];
                                else if ("hsl" === t.substr(0, 3))
                                    if (i = p = t.match(_),
                                    e) {
                                        if (t.indexOf("=") !== -1)
                                            return t.match(x)
                                    } else
                                        o = Number(i[0]) % 360 / 360,
                                        s = Number(i[1]) / 100,
                                        l = Number(i[2]) / 100,
                                        r = l <= .5 ? l * (s + 1) : l + s - l * s,
                                        n = 2 * l - r,
                                        i.length > 3 && (i[3] = Number(t[3])),
                                        i[0] = pt(o + 1 / 3, n, r),
                                        i[1] = pt(o, n, r),
                                        i[2] = pt(o - 1 / 3, n, r);
                                else
                                    i = t.match(_) || ut.transparent;
                                i[0] = Number(i[0]),
                                i[1] = Number(i[1]),
                                i[2] = Number(i[2]),
                                i.length > 3 && (i[3] = Number(i[3]))
                            }
                        else
                            i = ut.black;
                        return e && !p && (n = i[0] / 255,
                        r = i[1] / 255,
                        a = i[2] / 255,
                        h = Math.max(n, r, a),
                        c = Math.min(n, r, a),
                        l = (h + c) / 2,
                        h === c ? o = s = 0 : (u = h - c,
                        s = l > .5 ? u / (2 - h - c) : u / (h + c),
                        o = h === n ? (r - a) / u + (r < a ? 6 : 0) : h === r ? (a - n) / u + 2 : (n - r) / u + 4,
                        o *= 60),
                        i[0] = o + .5 | 0,
                        i[1] = 100 * s + .5 | 0,
                        i[2] = 100 * l + .5 | 0),
                        i
                    }
                    , dt = function(t, e) {
                        var i, n, r, a = t.match(mt) || [], o = 0, s = a.length ? "" : t;
                        for (i = 0; i < a.length; i++)
                            n = a[i],
                            r = t.substr(o, t.indexOf(n, o) - o),
                            o += r.length + n.length,
                            n = ft(n, e),
                            3 === n.length && n.push(1),
                            s += r + (e ? "hsla(" + n[0] + "," + n[1] + "%," + n[2] + "%," + n[3] : "rgba(" + n.join(",")) + ")";
                        return s + t.substr(o)
                    }, mt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                    for (c in ut)
                        mt += "|" + c + "\\b";
                    mt = new RegExp(mt + ")","gi"),
                    s.colorStringFilter = function(t) {
                        var e, i = t[0] + t[1];
                        mt.test(i) && (e = i.indexOf("hsl(") !== -1 || i.indexOf("hsla(") !== -1,
                        t[0] = dt(t[0], e),
                        t[1] = dt(t[1], e)),
                        mt.lastIndex = 0
                    }
                    ,
                    e.defaultStringFilter || (e.defaultStringFilter = s.colorStringFilter);
                    var gt = function(t, e, i, n) {
                        if (null == t)
                            return function(t) {
                                return t
                            }
                            ;
                        var r, a = e ? (t.match(mt) || [""])[0] : "", o = t.split(a).join("").match(b) || [], s = t.substr(0, t.indexOf(o[0])), l = ")" === t.charAt(t.length - 1) ? ")" : "", h = t.indexOf(" ") !== -1 ? " " : ",", c = o.length, u = c > 0 ? o[0].replace(_, "") : "";
                        return c ? r = e ? function(t) {
                            var e, p, f, d;
                            if ("number" == typeof t)
                                t += u;
                            else if (n && k.test(t)) {
                                for (d = t.replace(k, "|").split("|"),
                                f = 0; f < d.length; f++)
                                    d[f] = r(d[f]);
                                return d.join(",")
                            }
                            if (e = (t.match(mt) || [a])[0],
                            p = t.split(e).join("").match(b) || [],
                            f = p.length,
                            c > f--)
                                for (; ++f < c; )
                                    p[f] = i ? p[(f - 1) / 2 | 0] : o[f];
                            return s + p.join(h) + h + e + l + (t.indexOf("inset") !== -1 ? " inset" : "")
                        }
                        : function(t) {
                            var e, a, p;
                            if ("number" == typeof t)
                                t += u;
                            else if (n && k.test(t)) {
                                for (a = t.replace(k, "|").split("|"),
                                p = 0; p < a.length; p++)
                                    a[p] = r(a[p]);
                                return a.join(",")
                            }
                            if (e = t.match(b) || [],
                            p = e.length,
                            c > p--)
                                for (; ++p < c; )
                                    e[p] = i ? e[(p - 1) / 2 | 0] : o[p];
                            return s + e.join(h) + l
                        }
                        : function(t) {
                            return t
                        }
                    }
                      , vt = function(t) {
                        return t = t.split(","),
                        function(e, i, n, r, a, o, s) {
                            var l, h = (i + "").split(" ");
                            for (s = {},
                            l = 0; l < 4; l++)
                                s[t[l]] = h[l] = h[l] || h[(l - 1) / 2 >> 0];
                            return r.parse(e, s, a, o)
                        }
                    }
                      , yt = (H._setPluginRatio = function(t) {
                        this.plugin.setRatio(t);
                        for (var e, i, n, r, a, o = this.data, s = o.proxy, l = o.firstMPT, h = 1e-6; l; )
                            e = s[l.v],
                            l.r ? e = Math.round(e) : e < h && e > -h && (e = 0),
                            l.t[l.p] = e,
                            l = l._next;
                        if (o.autoRotate && (o.autoRotate.rotation = o.mod ? o.mod(s.rotation, this.t) : s.rotation),
                        1 === t || 0 === t)
                            for (l = o.firstMPT,
                            a = 1 === t ? "e" : "b"; l; ) {
                                if (i = l.t,
                                i.type) {
                                    if (1 === i.type) {
                                        for (r = i.xs0 + i.s + i.xs1,
                                        n = 1; n < i.l; n++)
                                            r += i["xn" + n] + i["xs" + (n + 1)];
                                        i[a] = r
                                    }
                                } else
                                    i[a] = i.s + i.xs0;
                                l = l._next
                            }
                    }
                    ,
                    function(t, e, i, n, r) {
                        this.t = t,
                        this.p = e,
                        this.v = i,
                        this.r = r,
                        n && (n._prev = this,
                        this._next = n)
                    }
                    )
                      , _t = (H._parseToProxy = function(t, e, i, n, r, a) {
                        var o, s, l, h, c, u = n, p = {}, f = {}, d = i._transform, m = U;
                        for (i._transform = null,
                        U = e,
                        n = c = i.parse(t, e, n, r),
                        U = m,
                        a && (i._transform = d,
                        u && (u._prev = null,
                        u._prev && (u._prev._next = null))); n && n !== u; ) {
                            if (n.type <= 1 && (s = n.p,
                            f[s] = n.s + n.c,
                            p[s] = n.s,
                            a || (h = new yt(n,"s",s,h,n.r),
                            n.c = 0),
                            1 === n.type))
                                for (o = n.l; --o > 0; )
                                    l = "xn" + o,
                                    s = n.p + "_" + l,
                                    f[s] = n.data[l],
                                    p[s] = n[l],
                                    a || (h = new yt(n,l,s,h,n.rxp[l]));
                            n = n._next
                        }
                        return {
                            proxy: p,
                            end: f,
                            firstMPT: h,
                            pt: c
                        }
                    }
                    ,
                    H.CSSPropTween = function(t, e, n, r, a, s, l, h, c, u, p) {
                        this.t = t,
                        this.p = e,
                        this.s = n,
                        this.c = r,
                        this.n = l || e,
                        t instanceof _t || o.push(this.n),
                        this.r = h,
                        this.type = s || 0,
                        c && (this.pr = c,
                        i = !0),
                        this.b = void 0 === u ? n : u,
                        this.e = void 0 === p ? n + r : p,
                        a && (this._next = a,
                        a._prev = this)
                    }
                    )
                      , xt = function(t, e, i, n, r, a) {
                        var o = new _t(t,e,i,n - i,r,(-1),a);
                        return o.b = i,
                        o.e = o.xs0 = n,
                        o
                    }
                      , bt = s.parseComplex = function(t, e, i, n, r, a, o, l, h, c) {
                        i = i || a || "",
                        "function" == typeof n && (n = n(y, v)),
                        o = new _t(t,e,0,0,o,c ? 2 : 1,null,(!1),l,i,n),
                        n += "",
                        r && mt.test(n + i) && (n = [i, n],
                        s.colorStringFilter(n),
                        i = n[0],
                        n = n[1]);
                        var p, f, d, m, g, b, w, M, T, S, C, A, P, E = i.split(", ").join(",").split(" "), L = n.split(", ").join(",").split(" "), O = E.length, R = u !== !1;
                        for (n.indexOf(",") === -1 && i.indexOf(",") === -1 || (E = E.join(" ").replace(k, ", ").split(" "),
                        L = L.join(" ").replace(k, ", ").split(" "),
                        O = E.length),
                        O !== L.length && (E = (a || "").split(" "),
                        O = E.length),
                        o.plugin = h,
                        o.setRatio = c,
                        mt.lastIndex = 0,
                        p = 0; p < O; p++)
                            if (m = E[p],
                            g = L[p],
                            M = parseFloat(m),
                            M || 0 === M)
                                o.appendXtra("", M, lt(g, M), g.replace(x, ""), R && g.indexOf("px") !== -1, !0);
                            else if (r && mt.test(m))
                                A = g.indexOf(")") + 1,
                                A = ")" + (A ? g.substr(A) : ""),
                                P = g.indexOf("hsl") !== -1 && X,
                                m = ft(m, P),
                                g = ft(g, P),
                                T = m.length + g.length > 6,
                                T && !X && 0 === g[3] ? (o["xs" + o.l] += o.l ? " transparent" : "transparent",
                                o.e = o.e.split(L[p]).join("transparent")) : (X || (T = !1),
                                P ? o.appendXtra(T ? "hsla(" : "hsl(", m[0], lt(g[0], m[0]), ",", !1, !0).appendXtra("", m[1], lt(g[1], m[1]), "%,", !1).appendXtra("", m[2], lt(g[2], m[2]), T ? "%," : "%" + A, !1) : o.appendXtra(T ? "rgba(" : "rgb(", m[0], g[0] - m[0], ",", !0, !0).appendXtra("", m[1], g[1] - m[1], ",", !0).appendXtra("", m[2], g[2] - m[2], T ? "," : A, !0),
                                T && (m = m.length < 4 ? 1 : m[3],
                                o.appendXtra("", m, (g.length < 4 ? 1 : g[3]) - m, A, !1))),
                                mt.lastIndex = 0;
                            else if (b = m.match(_)) {
                                if (w = g.match(x),
                                !w || w.length !== b.length)
                                    return o;
                                for (d = 0,
                                f = 0; f < b.length; f++)
                                    C = b[f],
                                    S = m.indexOf(C, d),
                                    o.appendXtra(m.substr(d, S - d), Number(C), lt(w[f], C), "", R && "px" === m.substr(S + C.length, 2), 0 === f),
                                    d = S + C.length;
                                o["xs" + o.l] += m.substr(d)
                            } else
                                o["xs" + o.l] += o.l || o["xs" + o.l] ? " " + g : g;
                        if (n.indexOf("=") !== -1 && o.data) {
                            for (A = o.xs0 + o.data.s,
                            p = 1; p < o.l; p++)
                                A += o["xs" + p] + o.data["xn" + p];
                            o.e = A + o["xs" + p]
                        }
                        return o.l || (o.type = -1,
                        o.xs0 = o.e),
                        o.xfirst || o
                    }
                      , wt = 9;
                    for (c = _t.prototype,
                    c.l = c.pr = 0; --wt > 0; )
                        c["xn" + wt] = 0,
                        c["xs" + wt] = "";
                    c.xs0 = "",
                    c._next = c._prev = c.xfirst = c.data = c.plugin = c.setRatio = c.rxp = null,
                    c.appendXtra = function(t, e, i, n, r, a) {
                        var o = this
                          , s = o.l;
                        return o["xs" + s] += a && (s || o["xs" + s]) ? " " + t : t || "",
                        i || 0 === s || o.plugin ? (o.l++,
                        o.type = o.setRatio ? 2 : 1,
                        o["xs" + o.l] = n || "",
                        s > 0 ? (o.data["xn" + s] = e + i,
                        o.rxp["xn" + s] = r,
                        o["xn" + s] = e,
                        o.plugin || (o.xfirst = new _t(o,"xn" + s,e,i,o.xfirst || o,0,o.n,r,o.pr),
                        o.xfirst.xs0 = 0),
                        o) : (o.data = {
                            s: e + i
                        },
                        o.rxp = {},
                        o.s = e,
                        o.c = i,
                        o.r = r,
                        o)) : (o["xs" + s] += e + (n || ""),
                        o)
                    }
                    ;
                    var Mt = function(t, e) {
                        e = e || {},
                        this.p = e.prefix ? K(t) || t : t,
                        h[t] = h[this.p] = this,
                        this.format = e.formatter || gt(e.defaultValue, e.color, e.collapsible, e.multi),
                        e.parser && (this.parse = e.parser),
                        this.clrs = e.color,
                        this.multi = e.multi,
                        this.keyword = e.keyword,
                        this.dflt = e.defaultValue,
                        this.pr = e.priority || 0
                    }
                      , Tt = H._registerComplexSpecialProp = function(t, e, i) {
                        "object" != typeof e && (e = {
                            parser: i
                        });
                        var n, r, a = t.split(","), o = e.defaultValue;
                        for (i = i || [o],
                        n = 0; n < a.length; n++)
                            e.prefix = 0 === n && e.prefix,
                            e.defaultValue = i[n] || o,
                            r = new Mt(a[n],e)
                    }
                      , St = H._registerPluginProp = function(t) {
                        if (!h[t]) {
                            var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                            Tt(t, {
                                parser: function(t, i, n, r, a, o, s) {
                                    var c = l.com.greensock.plugins[e];
                                    return c ? (c._cssRegister(),
                                    h[n].parse(t, i, n, r, a, o, s)) : (Y("Error: " + e + " js file not loaded."),
                                    a)
                                }
                            })
                        }
                    }
                    ;
                    c = Mt.prototype,
                    c.parseComplex = function(t, e, i, n, r, a) {
                        var o, s, l, h, c, u, p = this.keyword;
                        if (this.multi && (k.test(i) || k.test(e) ? (s = e.replace(k, "|").split("|"),
                        l = i.replace(k, "|").split("|")) : p && (s = [e],
                        l = [i])),
                        l) {
                            for (h = l.length > s.length ? l.length : s.length,
                            o = 0; o < h; o++)
                                e = s[o] = s[o] || this.dflt,
                                i = l[o] = l[o] || this.dflt,
                                p && (c = e.indexOf(p),
                                u = i.indexOf(p),
                                c !== u && (u === -1 ? s[o] = s[o].split(p).join("") : c === -1 && (s[o] += " " + p)));
                            e = s.join(", "),
                            i = l.join(", ")
                        }
                        return bt(t, this.p, e, i, this.clrs, this.dflt, n, this.pr, r, a)
                    }
                    ,
                    c.parse = function(t, e, i, n, r, o, s) {
                        return this.parseComplex(t.style, this.format(J(t, this.p, a, !1, this.dflt)), this.format(e), r, o)
                    }
                    ,
                    s.registerSpecialProp = function(t, e, i) {
                        Tt(t, {
                            parser: function(t, n, r, a, o, s, l) {
                                var h = new _t(t,r,0,0,o,2,r,(!1),i);
                                return h.plugin = s,
                                h.setRatio = e(t, n, a._tween, r),
                                h
                            },
                            priority: i
                        })
                    }
                    ,
                    s.useSVGTransformAttr = f || d;
                    var Ct, At = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","), Pt = K("transform"), Et = Z + "transform", Lt = K("transformOrigin"), Ot = null !== K("perspective"), Rt = H.Transform = function() {
                        this.perspective = parseFloat(s.defaultTransformPerspective) || 0,
                        this.force3D = !(s.defaultForce3D === !1 || !Ot) && (s.defaultForce3D || "auto")
                    }
                    , Dt = window.SVGElement, It = function(t, e, i) {
                        var n, r = z.createElementNS("http://www.w3.org/2000/svg", t), a = /([a-z])([A-Z])/g;
                        for (n in i)
                            r.setAttributeNS(null, n.replace(a, "$1-$2").toLowerCase(), i[n]);
                        return e.appendChild(r),
                        r
                    }, kt = z.documentElement, Nt = function() {
                        var t, e, i, n = g || /Android/i.test(W) && !window.chrome;
                        return z.createElementNS && !n && (t = It("svg", kt),
                        e = It("rect", t, {
                            width: 100,
                            height: 50,
                            x: 100
                        }),
                        i = e.getBoundingClientRect().width,
                        e.style[Lt] = "50% 50%",
                        e.style[Pt] = "scaleX(0.5)",
                        n = i === e.getBoundingClientRect().width && !(d && Ot),
                        kt.removeChild(t)),
                        n
                    }(), Ft = function(t, e, i, n, r, a) {
                        var o, l, h, c, u, p, f, d, m, g, v, y, _, x, b = t._gsTransform, w = jt(t, !0);
                        b && (_ = b.xOrigin,
                        x = b.yOrigin),
                        (!n || (o = n.split(" ")).length < 2) && (f = t.getBBox(),
                        e = st(e).split(" "),
                        o = [(e[0].indexOf("%") !== -1 ? parseFloat(e[0]) / 100 * f.width : parseFloat(e[0])) + f.x, (e[1].indexOf("%") !== -1 ? parseFloat(e[1]) / 100 * f.height : parseFloat(e[1])) + f.y]),
                        i.xOrigin = c = parseFloat(o[0]),
                        i.yOrigin = u = parseFloat(o[1]),
                        n && w !== zt && (p = w[0],
                        f = w[1],
                        d = w[2],
                        m = w[3],
                        g = w[4],
                        v = w[5],
                        y = p * m - f * d,
                        l = c * (m / y) + u * (-d / y) + (d * v - m * g) / y,
                        h = c * (-f / y) + u * (p / y) - (p * v - f * g) / y,
                        c = i.xOrigin = o[0] = l,
                        u = i.yOrigin = o[1] = h),
                        b && (a && (i.xOffset = b.xOffset,
                        i.yOffset = b.yOffset,
                        b = i),
                        r || r !== !1 && s.defaultSmoothOrigin !== !1 ? (l = c - _,
                        h = u - x,
                        b.xOffset += l * w[0] + h * w[2] - l,
                        b.yOffset += l * w[1] + h * w[3] - h) : b.xOffset = b.yOffset = 0),
                        a || t.setAttribute("data-svg-origin", o.join(" "))
                    }, Bt = function(t) {
                        try {
                            return t.getBBox()
                        } catch (t) {}
                    }, Ut = function(t) {
                        return !!(Dt && t.getBBox && t.getCTM && Bt(t) && (!t.parentNode || t.parentNode.getBBox && t.parentNode.getCTM))
                    }, zt = [1, 0, 0, 1, 0, 0], jt = function(t, e) {
                        var i, n, r, a, o, s, l = t._gsTransform || new Rt, h = 1e5, c = t.style;
                        if (Pt ? n = J(t, Et, null, !0) : t.currentStyle && (n = t.currentStyle.filter.match(D),
                        n = n && 4 === n.length ? [n[0].substr(4), Number(n[2].substr(4)), Number(n[1].substr(4)), n[3].substr(4), l.x || 0, l.y || 0].join(",") : ""),
                        i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                        i && Pt && ((s = "none" === Q(t).display) || !t.parentNode) && (s && (a = c.display,
                        c.display = "block"),
                        t.parentNode || (o = 1,
                        kt.appendChild(t)),
                        n = J(t, Et, null, !0),
                        i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                        a ? c.display = a : s && Xt(c, "display"),
                        o && kt.removeChild(t)),
                        (l.svg || t.getBBox && Ut(t)) && (i && (c[Pt] + "").indexOf("matrix") !== -1 && (n = c[Pt],
                        i = 0),
                        r = t.getAttribute("transform"),
                        i && r && (r.indexOf("matrix") !== -1 ? (n = r,
                        i = 0) : r.indexOf("translate") !== -1 && (n = "matrix(1,0,0,1," + r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")",
                        i = 0))),
                        i)
                            return zt;
                        for (r = (n || "").match(_) || [],
                        wt = r.length; --wt > -1; )
                            a = Number(r[wt]),
                            r[wt] = (o = a - (a |= 0)) ? (o * h + (o < 0 ? -.5 : .5) | 0) / h + a : a;
                        return e && r.length > 6 ? [r[0], r[1], r[4], r[5], r[12], r[13]] : r
                    }, Vt = H.getTransform = function(t, i, n, r) {
                        if (t._gsTransform && n && !r)
                            return t._gsTransform;
                        var a, o, l, h, c, u, p = n ? t._gsTransform || new Rt : new Rt, f = p.scaleX < 0, d = 2e-5, m = 1e5, g = Ot ? parseFloat(J(t, Lt, i, !1, "0 0 0").split(" ")[2]) || p.zOrigin || 0 : 0, v = parseFloat(s.defaultTransformPerspective) || 0;
                        if (p.svg = !(!t.getBBox || !Ut(t)),
                        p.svg && (Ft(t, J(t, Lt, i, !1, "50% 50%") + "", p, t.getAttribute("data-svg-origin")),
                        Ct = s.useSVGTransformAttr || Nt),
                        a = jt(t),
                        a !== zt) {
                            if (16 === a.length) {
                                var y, _, x, b, w, M = a[0], T = a[1], S = a[2], C = a[3], A = a[4], P = a[5], E = a[6], L = a[7], O = a[8], R = a[9], D = a[10], I = a[12], k = a[13], N = a[14], F = a[11], U = Math.atan2(E, D);
                                p.zOrigin && (N = -p.zOrigin,
                                I = O * N - a[12],
                                k = R * N - a[13],
                                N = D * N + p.zOrigin - a[14]),
                                p.rotationX = U * B,
                                U && (b = Math.cos(-U),
                                w = Math.sin(-U),
                                y = A * b + O * w,
                                _ = P * b + R * w,
                                x = E * b + D * w,
                                O = A * -w + O * b,
                                R = P * -w + R * b,
                                D = E * -w + D * b,
                                F = L * -w + F * b,
                                A = y,
                                P = _,
                                E = x),
                                U = Math.atan2(-S, D),
                                p.rotationY = U * B,
                                U && (b = Math.cos(-U),
                                w = Math.sin(-U),
                                y = M * b - O * w,
                                _ = T * b - R * w,
                                x = S * b - D * w,
                                R = T * w + R * b,
                                D = S * w + D * b,
                                F = C * w + F * b,
                                M = y,
                                T = _,
                                S = x),
                                U = Math.atan2(T, M),
                                p.rotation = U * B,
                                U && (b = Math.cos(-U),
                                w = Math.sin(-U),
                                M = M * b + A * w,
                                _ = T * b + P * w,
                                P = T * -w + P * b,
                                E = S * -w + E * b,
                                T = _),
                                p.rotationX && Math.abs(p.rotationX) + Math.abs(p.rotation) > 359.9 && (p.rotationX = p.rotation = 0,
                                p.rotationY = 180 - p.rotationY),
                                p.scaleX = (Math.sqrt(M * M + T * T) * m + .5 | 0) / m,
                                p.scaleY = (Math.sqrt(P * P + R * R) * m + .5 | 0) / m,
                                p.scaleZ = (Math.sqrt(E * E + D * D) * m + .5 | 0) / m,
                                p.rotationX || p.rotationY ? p.skewX = 0 : (p.skewX = A || P ? Math.atan2(A, P) * B + p.rotation : p.skewX || 0,
                                Math.abs(p.skewX) > 90 && Math.abs(p.skewX) < 270 && (f ? (p.scaleX *= -1,
                                p.skewX += p.rotation <= 0 ? 180 : -180,
                                p.rotation += p.rotation <= 0 ? 180 : -180) : (p.scaleY *= -1,
                                p.skewX += p.skewX <= 0 ? 180 : -180))),
                                p.perspective = F ? 1 / (F < 0 ? -F : F) : 0,
                                p.x = I,
                                p.y = k,
                                p.z = N,
                                p.svg && (p.x -= p.xOrigin - (p.xOrigin * M - p.yOrigin * A),
                                p.y -= p.yOrigin - (p.yOrigin * T - p.xOrigin * P))
                            } else if (!Ot || r || !a.length || p.x !== a[4] || p.y !== a[5] || !p.rotationX && !p.rotationY) {
                                var z = a.length >= 6
                                  , j = z ? a[0] : 1
                                  , V = a[1] || 0
                                  , G = a[2] || 0
                                  , H = z ? a[3] : 1;
                                p.x = a[4] || 0,
                                p.y = a[5] || 0,
                                l = Math.sqrt(j * j + V * V),
                                h = Math.sqrt(H * H + G * G),
                                c = j || V ? Math.atan2(V, j) * B : p.rotation || 0,
                                u = G || H ? Math.atan2(G, H) * B + c : p.skewX || 0,
                                Math.abs(u) > 90 && Math.abs(u) < 270 && (f ? (l *= -1,
                                u += c <= 0 ? 180 : -180,
                                c += c <= 0 ? 180 : -180) : (h *= -1,
                                u += u <= 0 ? 180 : -180)),
                                p.scaleX = l,
                                p.scaleY = h,
                                p.rotation = c,
                                p.skewX = u,
                                Ot && (p.rotationX = p.rotationY = p.z = 0,
                                p.perspective = v,
                                p.scaleZ = 1),
                                p.svg && (p.x -= p.xOrigin - (p.xOrigin * j + p.yOrigin * G),
                                p.y -= p.yOrigin - (p.xOrigin * V + p.yOrigin * H))
                            }
                            p.zOrigin = g;
                            for (o in p)
                                p[o] < d && p[o] > -d && (p[o] = 0)
                        }
                        return n && (t._gsTransform = p,
                        p.svg && (Ct && t.style[Pt] ? e.delayedCall(.001, function() {
                            Xt(t.style, Pt)
                        }) : !Ct && t.getAttribute("transform") && e.delayedCall(.001, function() {
                            t.removeAttribute("transform")
                        }))),
                        p
                    }
                    , Gt = function(t) {
                        var e, i, n = this.data, r = -n.rotation * F, a = r + n.skewX * F, o = 1e5, s = (Math.cos(r) * n.scaleX * o | 0) / o, l = (Math.sin(r) * n.scaleX * o | 0) / o, h = (Math.sin(a) * -n.scaleY * o | 0) / o, c = (Math.cos(a) * n.scaleY * o | 0) / o, u = this.t.style, p = this.t.currentStyle;
                        if (p) {
                            i = l,
                            l = -h,
                            h = -i,
                            e = p.filter,
                            u.filter = "";
                            var f, d, m = this.t.offsetWidth, v = this.t.offsetHeight, y = "absolute" !== p.position, _ = "progid:DXImageTransform.Microsoft.Matrix(M11=" + s + ", M12=" + l + ", M21=" + h + ", M22=" + c, x = n.x + m * n.xPercent / 100, b = n.y + v * n.yPercent / 100;
                            if (null != n.ox && (f = (n.oxp ? m * n.ox * .01 : n.ox) - m / 2,
                            d = (n.oyp ? v * n.oy * .01 : n.oy) - v / 2,
                            x += f - (f * s + d * l),
                            b += d - (f * h + d * c)),
                            y ? (f = m / 2,
                            d = v / 2,
                            _ += ", Dx=" + (f - (f * s + d * l) + x) + ", Dy=" + (d - (f * h + d * c) + b) + ")") : _ += ", sizingMethod='auto expand')",
                            e.indexOf("DXImageTransform.Microsoft.Matrix(") !== -1 ? u.filter = e.replace(I, _) : u.filter = _ + " " + e,
                            0 !== t && 1 !== t || 1 === s && 0 === l && 0 === h && 1 === c && (y && _.indexOf("Dx=0, Dy=0") === -1 || T.test(e) && 100 !== parseFloat(RegExp.$1) || e.indexOf(e.indexOf("Alpha")) === -1 && u.removeAttribute("filter")),
                            !y) {
                                var w, S, C, A = g < 8 ? 1 : -1;
                                for (f = n.ieOffsetX || 0,
                                d = n.ieOffsetY || 0,
                                n.ieOffsetX = Math.round((m - ((s < 0 ? -s : s) * m + (l < 0 ? -l : l) * v)) / 2 + x),
                                n.ieOffsetY = Math.round((v - ((c < 0 ? -c : c) * v + (h < 0 ? -h : h) * m)) / 2 + b),
                                wt = 0; wt < 4; wt++)
                                    S = at[wt],
                                    w = p[S],
                                    i = w.indexOf("px") !== -1 ? parseFloat(w) : tt(this.t, S, parseFloat(w), w.replace(M, "")) || 0,
                                    C = i !== n[S] ? wt < 2 ? -n.ieOffsetX : -n.ieOffsetY : wt < 2 ? f - n.ieOffsetX : d - n.ieOffsetY,
                                    u[S] = (n[S] = Math.round(i - C * (0 === wt || 2 === wt ? 1 : A))) + "px"
                            }
                        }
                    }, Ht = H.set3DTransformRatio = H.setTransformRatio = function(t) {
                        var e, i, n, r, a, o, s, l, h, c, u, p, f, m, g, v, y, _, x, b, w, M, T, S = this.data, C = this.t.style, A = S.rotation, P = S.rotationX, E = S.rotationY, L = S.scaleX, O = S.scaleY, R = S.scaleZ, D = S.x, I = S.y, k = S.z, N = S.svg, B = S.perspective, U = S.force3D;
                        if (((1 === t || 0 === t) && "auto" === U && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !U) && !k && !B && !E && !P && 1 === R || Ct && N || !Ot)
                            return void (A || S.skewX || N ? (A *= F,
                            M = S.skewX * F,
                            T = 1e5,
                            e = Math.cos(A) * L,
                            r = Math.sin(A) * L,
                            i = Math.sin(A - M) * -O,
                            a = Math.cos(A - M) * O,
                            M && "simple" === S.skewType && (y = Math.tan(M - S.skewY * F),
                            y = Math.sqrt(1 + y * y),
                            i *= y,
                            a *= y,
                            S.skewY && (y = Math.tan(S.skewY * F),
                            y = Math.sqrt(1 + y * y),
                            e *= y,
                            r *= y)),
                            N && (D += S.xOrigin - (S.xOrigin * e + S.yOrigin * i) + S.xOffset,
                            I += S.yOrigin - (S.xOrigin * r + S.yOrigin * a) + S.yOffset,
                            Ct && (S.xPercent || S.yPercent) && (m = this.t.getBBox(),
                            D += .01 * S.xPercent * m.width,
                            I += .01 * S.yPercent * m.height),
                            m = 1e-6,
                            D < m && D > -m && (D = 0),
                            I < m && I > -m && (I = 0)),
                            x = (e * T | 0) / T + "," + (r * T | 0) / T + "," + (i * T | 0) / T + "," + (a * T | 0) / T + "," + D + "," + I + ")",
                            N && Ct ? this.t.setAttribute("transform", "matrix(" + x) : C[Pt] = (S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) matrix(" : "matrix(") + x) : C[Pt] = (S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) matrix(" : "matrix(") + L + ",0,0," + O + "," + D + "," + I + ")");
                        if (d && (m = 1e-4,
                        L < m && L > -m && (L = R = 2e-5),
                        O < m && O > -m && (O = R = 2e-5),
                        !B || S.z || S.rotationX || S.rotationY || (B = 0)),
                        A || S.skewX)
                            A *= F,
                            g = e = Math.cos(A),
                            v = r = Math.sin(A),
                            S.skewX && (A -= S.skewX * F,
                            g = Math.cos(A),
                            v = Math.sin(A),
                            "simple" === S.skewType && (y = Math.tan((S.skewX - S.skewY) * F),
                            y = Math.sqrt(1 + y * y),
                            g *= y,
                            v *= y,
                            S.skewY && (y = Math.tan(S.skewY * F),
                            y = Math.sqrt(1 + y * y),
                            e *= y,
                            r *= y))),
                            i = -v,
                            a = g;
                        else {
                            if (!(E || P || 1 !== R || B || N))
                                return void (C[Pt] = (S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) translate3d(" : "translate3d(") + D + "px," + I + "px," + k + "px)" + (1 !== L || 1 !== O ? " scale(" + L + "," + O + ")" : ""));
                            e = a = 1,
                            i = r = 0
                        }
                        h = 1,
                        n = o = s = l = c = u = 0,
                        p = B ? -1 / B : 0,
                        f = S.zOrigin,
                        m = 1e-6,
                        b = ",",
                        w = "0",
                        A = E * F,
                        A && (g = Math.cos(A),
                        v = Math.sin(A),
                        s = -v,
                        c = p * -v,
                        n = e * v,
                        o = r * v,
                        h = g,
                        p *= g,
                        e *= g,
                        r *= g),
                        A = P * F,
                        A && (g = Math.cos(A),
                        v = Math.sin(A),
                        y = i * g + n * v,
                        _ = a * g + o * v,
                        l = h * v,
                        u = p * v,
                        n = i * -v + n * g,
                        o = a * -v + o * g,
                        h *= g,
                        p *= g,
                        i = y,
                        a = _),
                        1 !== R && (n *= R,
                        o *= R,
                        h *= R,
                        p *= R),
                        1 !== O && (i *= O,
                        a *= O,
                        l *= O,
                        u *= O),
                        1 !== L && (e *= L,
                        r *= L,
                        s *= L,
                        c *= L),
                        (f || N) && (f && (D += n * -f,
                        I += o * -f,
                        k += h * -f + f),
                        N && (D += S.xOrigin - (S.xOrigin * e + S.yOrigin * i) + S.xOffset,
                        I += S.yOrigin - (S.xOrigin * r + S.yOrigin * a) + S.yOffset),
                        D < m && D > -m && (D = w),
                        I < m && I > -m && (I = w),
                        k < m && k > -m && (k = 0)),
                        x = S.xPercent || S.yPercent ? "translate(" + S.xPercent + "%," + S.yPercent + "%) matrix3d(" : "matrix3d(",
                        x += (e < m && e > -m ? w : e) + b + (r < m && r > -m ? w : r) + b + (s < m && s > -m ? w : s),
                        x += b + (c < m && c > -m ? w : c) + b + (i < m && i > -m ? w : i) + b + (a < m && a > -m ? w : a),
                        P || E || 1 !== R ? (x += b + (l < m && l > -m ? w : l) + b + (u < m && u > -m ? w : u) + b + (n < m && n > -m ? w : n),
                        x += b + (o < m && o > -m ? w : o) + b + (h < m && h > -m ? w : h) + b + (p < m && p > -m ? w : p) + b) : x += ",0,0,0,0,1,0,",
                        x += D + b + I + b + k + b + (B ? 1 + -k / B : 1) + ")",
                        C[Pt] = x
                    }
                    ;
                    c = Rt.prototype,
                    c.x = c.y = c.z = c.skewX = c.skewY = c.rotation = c.rotationX = c.rotationY = c.zOrigin = c.xPercent = c.yPercent = c.xOffset = c.yOffset = 0,
                    c.scaleX = c.scaleY = c.scaleZ = 1,
                    Tt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                        parser: function(t, e, i, n, r, o, l) {
                            if (n._lastParsedTransform === l)
                                return r;
                            n._lastParsedTransform = l;
                            var h;
                            "function" == typeof l[i] && (h = l[i],
                            l[i] = e);
                            var c, u, p, f, d, m, g, _, x, b = t._gsTransform, w = t.style, M = 1e-6, T = At.length, S = l, C = {}, A = "transformOrigin", P = Vt(t, a, !0, S.parseTransform), E = S.transform && ("function" == typeof S.transform ? S.transform(y, v) : S.transform);
                            if (n._transform = P,
                            E && "string" == typeof E && Pt)
                                u = V.style,
                                u[Pt] = E,
                                u.display = "block",
                                u.position = "absolute",
                                z.body.appendChild(V),
                                c = Vt(V, null, !1),
                                P.svg && (m = P.xOrigin,
                                g = P.yOrigin,
                                c.x -= P.xOffset,
                                c.y -= P.yOffset,
                                (S.transformOrigin || S.svgOrigin) && (E = {},
                                Ft(t, st(S.transformOrigin), E, S.svgOrigin, S.smoothOrigin, !0),
                                m = E.xOrigin,
                                g = E.yOrigin,
                                c.x -= E.xOffset - P.xOffset,
                                c.y -= E.yOffset - P.yOffset),
                                (m || g) && (_ = jt(V, !0),
                                c.x -= m - (m * _[0] + g * _[2]),
                                c.y -= g - (m * _[1] + g * _[3]))),
                                z.body.removeChild(V),
                                c.perspective || (c.perspective = P.perspective),
                                null != S.xPercent && (c.xPercent = ht(S.xPercent, P.xPercent)),
                                null != S.yPercent && (c.yPercent = ht(S.yPercent, P.yPercent));
                            else if ("object" == typeof S) {
                                if (c = {
                                    scaleX: ht(null != S.scaleX ? S.scaleX : S.scale, P.scaleX),
                                    scaleY: ht(null != S.scaleY ? S.scaleY : S.scale, P.scaleY),
                                    scaleZ: ht(S.scaleZ, P.scaleZ),
                                    x: ht(S.x, P.x),
                                    y: ht(S.y, P.y),
                                    z: ht(S.z, P.z),
                                    xPercent: ht(S.xPercent, P.xPercent),
                                    yPercent: ht(S.yPercent, P.yPercent),
                                    perspective: ht(S.transformPerspective, P.perspective)
                                },
                                d = S.directionalRotation,
                                null != d)
                                    if ("object" == typeof d)
                                        for (u in d)
                                            S[u] = d[u];
                                    else
                                        S.rotation = d;
                                "string" == typeof S.x && S.x.indexOf("%") !== -1 && (c.x = 0,
                                c.xPercent = ht(S.x, P.xPercent)),
                                "string" == typeof S.y && S.y.indexOf("%") !== -1 && (c.y = 0,
                                c.yPercent = ht(S.y, P.yPercent)),
                                c.rotation = ct("rotation"in S ? S.rotation : "shortRotation"in S ? S.shortRotation + "_short" : "rotationZ"in S ? S.rotationZ : P.rotation - P.skewY, P.rotation - P.skewY, "rotation", C),
                                Ot && (c.rotationX = ct("rotationX"in S ? S.rotationX : "shortRotationX"in S ? S.shortRotationX + "_short" : P.rotationX || 0, P.rotationX, "rotationX", C),
                                c.rotationY = ct("rotationY"in S ? S.rotationY : "shortRotationY"in S ? S.shortRotationY + "_short" : P.rotationY || 0, P.rotationY, "rotationY", C)),
                                c.skewX = ct(S.skewX, P.skewX - P.skewY),
                                (c.skewY = ct(S.skewY, P.skewY)) && (c.skewX += c.skewY,
                                c.rotation += c.skewY)
                            }
                            for (Ot && null != S.force3D && (P.force3D = S.force3D,
                            f = !0),
                            P.skewType = S.skewType || P.skewType || s.defaultSkewType,
                            p = P.force3D || P.z || P.rotationX || P.rotationY || c.z || c.rotationX || c.rotationY || c.perspective,
                            p || null == S.scale || (c.scaleZ = 1); --T > -1; )
                                x = At[T],
                                E = c[x] - P[x],
                                (E > M || E < -M || null != S[x] || null != U[x]) && (f = !0,
                                r = new _t(P,x,P[x],E,r),
                                x in C && (r.e = C[x]),
                                r.xs0 = 0,
                                r.plugin = o,
                                n._overwriteProps.push(r.n));
                            return E = S.transformOrigin,
                            P.svg && (E || S.svgOrigin) && (m = P.xOffset,
                            g = P.yOffset,
                            Ft(t, st(E), c, S.svgOrigin, S.smoothOrigin),
                            r = xt(P, "xOrigin", (b ? P : c).xOrigin, c.xOrigin, r, A),
                            r = xt(P, "yOrigin", (b ? P : c).yOrigin, c.yOrigin, r, A),
                            m === P.xOffset && g === P.yOffset || (r = xt(P, "xOffset", b ? m : P.xOffset, P.xOffset, r, A),
                            r = xt(P, "yOffset", b ? g : P.yOffset, P.yOffset, r, A)),
                            E = Ct ? null : "0px 0px"),
                            (E || Ot && p && P.zOrigin) && (Pt ? (f = !0,
                            x = Lt,
                            E = (E || J(t, x, a, !1, "50% 50%")) + "",
                            r = new _t(w,x,0,0,r,(-1),A),
                            r.b = w[x],
                            r.plugin = o,
                            Ot ? (u = P.zOrigin,
                            E = E.split(" "),
                            P.zOrigin = (E.length > 2 && (0 === u || "0px" !== E[2]) ? parseFloat(E[2]) : u) || 0,
                            r.xs0 = r.e = E[0] + " " + (E[1] || "50%") + " 0px",
                            r = new _t(P,"zOrigin",0,0,r,(-1),r.n),
                            r.b = u,
                            r.xs0 = r.e = P.zOrigin) : r.xs0 = r.e = E) : st(E + "", P)),
                            f && (n._transformType = P.svg && Ct || !p && 3 !== this._transformType ? 2 : 3),
                            h && (l[i] = h),
                            r
                        },
                        prefix: !0
                    }),
                    Tt("boxShadow", {
                        defaultValue: "0px 0px 0px 0px #999",
                        prefix: !0,
                        color: !0,
                        multi: !0,
                        keyword: "inset"
                    }),
                    Tt("borderRadius", {
                        defaultValue: "0px",
                        parser: function(t, e, i, n, o, s) {
                            e = this.format(e);
                            var l, h, c, u, p, f, d, m, g, v, y, _, x, b, w, M, T = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], S = t.style;
                            for (g = parseFloat(t.offsetWidth),
                            v = parseFloat(t.offsetHeight),
                            l = e.split(" "),
                            h = 0; h < T.length; h++)
                                this.p.indexOf("border") && (T[h] = K(T[h])),
                                p = u = J(t, T[h], a, !1, "0px"),
                                p.indexOf(" ") !== -1 && (u = p.split(" "),
                                p = u[0],
                                u = u[1]),
                                f = c = l[h],
                                d = parseFloat(p),
                                _ = p.substr((d + "").length),
                                x = "=" === f.charAt(1),
                                x ? (m = parseInt(f.charAt(0) + "1", 10),
                                f = f.substr(2),
                                m *= parseFloat(f),
                                y = f.substr((m + "").length - (m < 0 ? 1 : 0)) || "") : (m = parseFloat(f),
                                y = f.substr((m + "").length)),
                                "" === y && (y = r[i] || _),
                                y !== _ && (b = tt(t, "borderLeft", d, _),
                                w = tt(t, "borderTop", d, _),
                                "%" === y ? (p = b / g * 100 + "%",
                                u = w / v * 100 + "%") : "em" === y ? (M = tt(t, "borderLeft", 1, "em"),
                                p = b / M + "em",
                                u = w / M + "em") : (p = b + "px",
                                u = w + "px"),
                                x && (f = parseFloat(p) + m + y,
                                c = parseFloat(u) + m + y)),
                                o = bt(S, T[h], p + " " + u, f + " " + c, !1, "0px", o);
                            return o
                        },
                        prefix: !0,
                        formatter: gt("0px 0px 0px 0px", !1, !0)
                    }),
                    Tt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                        defaultValue: "0px",
                        parser: function(t, e, i, n, r, o) {
                            return bt(t.style, i, this.format(J(t, i, a, !1, "0px 0px")), this.format(e), !1, "0px", r)
                        },
                        prefix: !0,
                        formatter: gt("0px 0px", !1, !0)
                    }),
                    Tt("backgroundPosition", {
                        defaultValue: "0 0",
                        parser: function(t, e, i, n, r, o) {
                            var s, l, h, c, u, p, f = "background-position", d = a || Q(t, null), m = this.format((d ? g ? d.getPropertyValue(f + "-x") + " " + d.getPropertyValue(f + "-y") : d.getPropertyValue(f) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), v = this.format(e);
                            if (m.indexOf("%") !== -1 != (v.indexOf("%") !== -1) && v.split(",").length < 2 && (p = J(t, "backgroundImage").replace(L, ""),
                            p && "none" !== p)) {
                                for (s = m.split(" "),
                                l = v.split(" "),
                                G.setAttribute("src", p),
                                h = 2; --h > -1; )
                                    m = s[h],
                                    c = m.indexOf("%") !== -1,
                                    c !== (l[h].indexOf("%") !== -1) && (u = 0 === h ? t.offsetWidth - G.width : t.offsetHeight - G.height,
                                    s[h] = c ? parseFloat(m) / 100 * u + "px" : parseFloat(m) / u * 100 + "%");
                                m = s.join(" ")
                            }
                            return this.parseComplex(t.style, m, v, r, o)
                        },
                        formatter: st
                    }),
                    Tt("backgroundSize", {
                        defaultValue: "0 0",
                        formatter: function(t) {
                            return t += "",
                            st(t.indexOf(" ") === -1 ? t + " " + t : t)
                        }
                    }),
                    Tt("perspective", {
                        defaultValue: "0px",
                        prefix: !0
                    }),
                    Tt("perspectiveOrigin", {
                        defaultValue: "50% 50%",
                        prefix: !0
                    }),
                    Tt("transformStyle", {
                        prefix: !0
                    }),
                    Tt("backfaceVisibility", {
                        prefix: !0
                    }),
                    Tt("userSelect", {
                        prefix: !0
                    }),
                    Tt("margin", {
                        parser: vt("marginTop,marginRight,marginBottom,marginLeft")
                    }),
                    Tt("padding", {
                        parser: vt("paddingTop,paddingRight,paddingBottom,paddingLeft")
                    }),
                    Tt("clip", {
                        defaultValue: "rect(0px,0px,0px,0px)",
                        parser: function(t, e, i, n, r, o) {
                            var s, l, h;
                            return g < 9 ? (l = t.currentStyle,
                            h = g < 8 ? " " : ",",
                            s = "rect(" + l.clipTop + h + l.clipRight + h + l.clipBottom + h + l.clipLeft + ")",
                            e = this.format(e).split(",").join(h)) : (s = this.format(J(t, this.p, a, !1, this.dflt)),
                            e = this.format(e)),
                            this.parseComplex(t.style, s, e, r, o)
                        }
                    }),
                    Tt("textShadow", {
                        defaultValue: "0px 0px 0px #999",
                        color: !0,
                        multi: !0
                    }),
                    Tt("autoRound,strictUnits", {
                        parser: function(t, e, i, n, r) {
                            return r
                        }
                    }),
                    Tt("border", {
                        defaultValue: "0px solid #000",
                        parser: function(t, e, i, n, r, o) {
                            var s = J(t, "borderTopWidth", a, !1, "0px")
                              , l = this.format(e).split(" ")
                              , h = l[0].replace(M, "");
                            return "px" !== h && (s = parseFloat(s) / tt(t, "borderTopWidth", 1, h) + h),
                            this.parseComplex(t.style, this.format(s + " " + J(t, "borderTopStyle", a, !1, "solid") + " " + J(t, "borderTopColor", a, !1, "#000")), l.join(" "), r, o)
                        },
                        color: !0,
                        formatter: function(t) {
                            var e = t.split(" ");
                            return e[0] + " " + (e[1] || "solid") + " " + (t.match(mt) || ["#000"])[0]
                        }
                    }),
                    Tt("borderWidth", {
                        parser: vt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                    }),
                    Tt("float,cssFloat,styleFloat", {
                        parser: function(t, e, i, n, r, a) {
                            var o = t.style
                              , s = "cssFloat"in o ? "cssFloat" : "styleFloat";
                            return new _t(o,s,0,0,r,(-1),i,(!1),0,o[s],e)
                        }
                    });
                    var Wt = function(t) {
                        var e, i = this.t, n = i.filter || J(this.data, "filter") || "", r = this.s + this.c * t | 0;
                        100 === r && (n.indexOf("atrix(") === -1 && n.indexOf("radient(") === -1 && n.indexOf("oader(") === -1 ? (i.removeAttribute("filter"),
                        e = !J(this.data, "filter")) : (i.filter = n.replace(C, ""),
                        e = !0)),
                        e || (this.xn1 && (i.filter = n = n || "alpha(opacity=" + r + ")"),
                        n.indexOf("pacity") === -1 ? 0 === r && this.xn1 || (i.filter = n + " alpha(opacity=" + r + ")") : i.filter = n.replace(T, "opacity=" + r))
                    };
                    Tt("opacity,alpha,autoAlpha", {
                        defaultValue: "1",
                        parser: function(t, e, i, n, r, o) {
                            var s = parseFloat(J(t, "opacity", a, !1, "1"))
                              , l = t.style
                              , h = "autoAlpha" === i;
                            return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s),
                            h && 1 === s && "hidden" === J(t, "visibility", a) && 0 !== e && (s = 0),
                            X ? r = new _t(l,"opacity",s,e - s,r) : (r = new _t(l,"opacity",100 * s,100 * (e - s),r),
                            r.xn1 = h ? 1 : 0,
                            l.zoom = 1,
                            r.type = 2,
                            r.b = "alpha(opacity=" + r.s + ")",
                            r.e = "alpha(opacity=" + (r.s + r.c) + ")",
                            r.data = t,
                            r.plugin = o,
                            r.setRatio = Wt),
                            h && (r = new _t(l,"visibility",0,0,r,(-1),null,(!1),0,0 !== s ? "inherit" : "hidden",0 === e ? "hidden" : "inherit"),
                            r.xs0 = "inherit",
                            n._overwriteProps.push(r.n),
                            n._overwriteProps.push(i)),
                            r
                        }
                    });
                    var Xt = function(t, e) {
                        e && (t.removeProperty ? ("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6) || (e = "-" + e),
                        t.removeProperty(e.replace(P, "-$1").toLowerCase())) : t.removeAttribute(e))
                    }
                      , qt = function(t) {
                        if (this.t._gsClassPT = this,
                        1 === t || 0 === t) {
                            this.t.setAttribute("class", 0 === t ? this.b : this.e);
                            for (var e = this.data, i = this.t.style; e; )
                                e.v ? i[e.p] = e.v : Xt(i, e.p),
                                e = e._next;
                            1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                        } else
                            this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                    };
                    Tt("className", {
                        parser: function(t, e, n, r, o, s, l) {
                            var h, c, u, p, f, d = t.getAttribute("class") || "", m = t.style.cssText;
                            if (o = r._classNamePT = new _t(t,n,0,0,o,2),
                            o.setRatio = qt,
                            o.pr = -11,
                            i = !0,
                            o.b = d,
                            c = it(t, a),
                            u = t._gsClassPT) {
                                for (p = {},
                                f = u.data; f; )
                                    p[f.p] = 1,
                                    f = f._next;
                                u.setRatio(1)
                            }
                            return t._gsClassPT = o,
                            o.e = "=" !== e.charAt(1) ? e : d.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""),
                            t.setAttribute("class", o.e),
                            h = nt(t, c, it(t), l, p),
                            t.setAttribute("class", d),
                            o.data = h.firstMPT,
                            t.style.cssText = m,
                            o = o.xfirst = r.parse(t, h.difs, o, s)
                        }
                    });
                    var Yt = function(t) {
                        if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                            var e, i, n, r, a, o = this.t.style, s = h.transform.parse;
                            if ("all" === this.e)
                                o.cssText = "",
                                r = !0;
                            else
                                for (e = this.e.split(" ").join("").split(","),
                                n = e.length; --n > -1; )
                                    i = e[n],
                                    h[i] && (h[i].parse === s ? r = !0 : i = "transformOrigin" === i ? Lt : h[i].p),
                                    Xt(o, i);
                            r && (Xt(o, Pt),
                            a = this.t._gsTransform,
                            a && (a.svg && (this.t.removeAttribute("data-svg-origin"),
                            this.t.removeAttribute("transform")),
                            delete this.t._gsTransform))
                        }
                    };
                    for (Tt("clearProps", {
                        parser: function(t, e, n, r, a) {
                            return a = new _t(t,n,0,0,a,2),
                            a.setRatio = Yt,
                            a.e = e,
                            a.pr = -10,
                            a.data = r._tween,
                            i = !0,
                            a
                        }
                    }),
                    c = "bezier,throwProps,physicsProps,physics2D".split(","),
                    wt = c.length; wt--; )
                        St(c[wt]);
                    c = s.prototype,
                    c._firstPT = c._lastParsedTransform = c._transform = null,
                    c._onInitTween = function(t, e, n, l) {
                        if (!t.nodeType)
                            return !1;
                        this._target = v = t,
                        this._tween = n,
                        this._vars = e,
                        y = l,
                        u = e.autoRound,
                        i = !1,
                        r = e.suffixMap || s.suffixMap,
                        a = Q(t, ""),
                        o = this._overwriteProps;
                        var c, d, g, _, x, b, w, M, T, C = t.style;
                        if (p && "" === C.zIndex && (c = J(t, "zIndex", a),
                        "auto" !== c && "" !== c || this._addLazySet(C, "zIndex", 0)),
                        "string" == typeof e && (_ = C.cssText,
                        c = it(t, a),
                        C.cssText = _ + ";" + e,
                        c = nt(t, c, it(t)).difs,
                        !X && S.test(e) && (c.opacity = parseFloat(RegExp.$1)),
                        e = c,
                        C.cssText = _),
                        e.className ? this._firstPT = d = h.className.parse(t, e.className, "className", this, null, null, e) : this._firstPT = d = this.parse(t, e, null),
                        this._transformType) {
                            for (T = 3 === this._transformType,
                            Pt ? f && (p = !0,
                            "" === C.zIndex && (w = J(t, "zIndex", a),
                            "auto" !== w && "" !== w || this._addLazySet(C, "zIndex", 0)),
                            m && this._addLazySet(C, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (T ? "visible" : "hidden"))) : C.zoom = 1,
                            g = d; g && g._next; )
                                g = g._next;
                            M = new _t(t,"transform",0,0,null,2),
                            this._linkCSSP(M, null, g),
                            M.setRatio = Pt ? Ht : Gt,
                            M.data = this._transform || Vt(t, a, !0),
                            M.tween = n,
                            M.pr = -1,
                            o.pop()
                        }
                        if (i) {
                            for (; d; ) {
                                for (b = d._next,
                                g = _; g && g.pr > d.pr; )
                                    g = g._next;
                                (d._prev = g ? g._prev : x) ? d._prev._next = d : _ = d,
                                (d._next = g) ? g._prev = d : x = d,
                                d = b
                            }
                            this._firstPT = _
                        }
                        return !0
                    }
                    ,
                    c.parse = function(t, e, i, n) {
                        var o, s, l, c, p, f, d, m, g, _, x = t.style;
                        for (o in e)
                            f = e[o],
                            "function" == typeof f && (f = f(y, v)),
                            s = h[o],
                            s ? i = s.parse(t, f, o, this, i, n, e) : (p = J(t, o, a) + "",
                            g = "string" == typeof f,
                            "color" === o || "fill" === o || "stroke" === o || o.indexOf("Color") !== -1 || g && A.test(f) ? (g || (f = ft(f),
                            f = (f.length > 3 ? "rgba(" : "rgb(") + f.join(",") + ")"),
                            i = bt(x, o, p, f, !0, "transparent", i, 0, n)) : g && N.test(f) ? i = bt(x, o, p, f, !0, null, i, 0, n) : (l = parseFloat(p),
                            d = l || 0 === l ? p.substr((l + "").length) : "",
                            "" !== p && "auto" !== p || ("width" === o || "height" === o ? (l = ot(t, o, a),
                            d = "px") : "left" === o || "top" === o ? (l = et(t, o, a),
                            d = "px") : (l = "opacity" !== o ? 0 : 1,
                            d = "")),
                            _ = g && "=" === f.charAt(1),
                            _ ? (c = parseInt(f.charAt(0) + "1", 10),
                            f = f.substr(2),
                            c *= parseFloat(f),
                            m = f.replace(M, "")) : (c = parseFloat(f),
                            m = g ? f.replace(M, "") : ""),
                            "" === m && (m = o in r ? r[o] : d),
                            f = c || 0 === c ? (_ ? c + l : c) + m : e[o],
                            d !== m && "" !== m && (c || 0 === c) && l && (l = tt(t, o, l, d),
                            "%" === m ? (l /= tt(t, o, 100, "%") / 100,
                            e.strictUnits !== !0 && (p = l + "%")) : "em" === m || "rem" === m || "vw" === m || "vh" === m ? l /= tt(t, o, 1, m) : "px" !== m && (c = tt(t, o, c, m),
                            m = "px"),
                            _ && (c || 0 === c) && (f = c + l + m)),
                            _ && (c += l),
                            !l && 0 !== l || !c && 0 !== c ? void 0 !== x[o] && (f || f + "" != "NaN" && null != f) ? (i = new _t(x,o,c || l || 0,0,i,(-1),o,(!1),0,p,f),
                            i.xs0 = "none" !== f || "display" !== o && o.indexOf("Style") === -1 ? f : p) : Y("invalid " + o + " tween value: " + e[o]) : (i = new _t(x,o,l,c - l,i,0,o,u !== !1 && ("px" === m || "zIndex" === o),0,p,f),
                            i.xs0 = m))),
                            n && i && !i.plugin && (i.plugin = n);
                        return i
                    }
                    ,
                    c.setRatio = function(t) {
                        var e, i, n, r = this._firstPT, a = 1e-6;
                        if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                            if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
                                for (; r; ) {
                                    if (e = r.c * t + r.s,
                                    r.r ? e = Math.round(e) : e < a && e > -a && (e = 0),
                                    r.type)
                                        if (1 === r.type)
                                            if (n = r.l,
                                            2 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2;
                                            else if (3 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
                                            else if (4 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4;
                                            else if (5 === n)
                                                r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5;
                                            else {
                                                for (i = r.xs0 + e + r.xs1,
                                                n = 1; n < r.l; n++)
                                                    i += r["xn" + n] + r["xs" + (n + 1)];
                                                r.t[r.p] = i
                                            }
                                        else
                                            r.type === -1 ? r.t[r.p] = r.xs0 : r.setRatio && r.setRatio(t);
                                    else
                                        r.t[r.p] = e + r.xs0;
                                    r = r._next
                                }
                            else
                                for (; r; )
                                    2 !== r.type ? r.t[r.p] = r.b : r.setRatio(t),
                                    r = r._next;
                        else
                            for (; r; ) {
                                if (2 !== r.type)
                                    if (r.r && r.type !== -1)
                                        if (e = Math.round(r.s + r.c),
                                        r.type) {
                                            if (1 === r.type) {
                                                for (n = r.l,
                                                i = r.xs0 + e + r.xs1,
                                                n = 1; n < r.l; n++)
                                                    i += r["xn" + n] + r["xs" + (n + 1)];
                                                r.t[r.p] = i
                                            }
                                        } else
                                            r.t[r.p] = e + r.xs0;
                                    else
                                        r.t[r.p] = r.e;
                                else
                                    r.setRatio(t);
                                r = r._next
                            }
                    }
                    ,
                    c._enableTransforms = function(t) {
                        this._transform = this._transform || Vt(this._target, a, !0),
                        this._transformType = this._transform.svg && Ct || !t && 3 !== this._transformType ? 2 : 3
                    }
                    ;
                    var Zt = function(t) {
                        this.t[this.p] = this.e,
                        this.data._linkCSSP(this, this._next, null, !0)
                    };
                    c._addLazySet = function(t, e, i) {
                        var n = this._firstPT = new _t(t,e,0,0,this._firstPT,2);
                        n.e = i,
                        n.setRatio = Zt,
                        n.data = this
                    }
                    ,
                    c._linkCSSP = function(t, e, i, n) {
                        return t && (e && (e._prev = t),
                        t._next && (t._next._prev = t._prev),
                        t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next,
                        n = !0),
                        i ? i._next = t : n || null !== this._firstPT || (this._firstPT = t),
                        t._next = e,
                        t._prev = i),
                        t
                    }
                    ,
                    c._mod = function(t) {
                        for (var e = this._firstPT; e; )
                            "function" == typeof t[e.p] && t[e.p] === Math.round && (e.r = 1),
                            e = e._next
                    }
                    ,
                    c._kill = function(e) {
                        var i, n, r, a = e;
                        if (e.autoAlpha || e.alpha) {
                            a = {};
                            for (n in e)
                                a[n] = e[n];
                            a.opacity = 1,
                            a.autoAlpha && (a.visibility = 1)
                        }
                        for (e.className && (i = this._classNamePT) && (r = i.xfirst,
                        r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next),
                        i._next && this._linkCSSP(i._next, i._next._next, r._prev),
                        this._classNamePT = null),
                        i = this._firstPT; i; )
                            i.plugin && i.plugin !== n && i.plugin._kill && (i.plugin._kill(e),
                            n = i.plugin),
                            i = i._next;
                        return t.prototype._kill.call(this, a)
                    }
                    ;
                    var $t = function(t, e, i) {
                        var n, r, a, o;
                        if (t.slice)
                            for (r = t.length; --r > -1; )
                                $t(t[r], e, i);
                        else
                            for (n = t.childNodes,
                            r = n.length; --r > -1; )
                                a = n[r],
                                o = a.type,
                                a.style && (e.push(it(a)),
                                i && i.push(a)),
                                1 !== o && 9 !== o && 11 !== o || !a.childNodes.length || $t(a, e, i)
                    };
                    return s.cascadeTo = function(t, i, n) {
                        var r, a, o, s, l = e.to(t, i, n), h = [l], c = [], u = [], p = [], f = e._internals.reservedProps;
                        for (t = l._targets || l.target,
                        $t(t, c, p),
                        l.render(i, !0, !0),
                        $t(t, u),
                        l.render(0, !0, !0),
                        l._enabled(!0),
                        r = p.length; --r > -1; )
                            if (a = nt(p[r], c[r], u[r]),
                            a.firstMPT) {
                                a = a.difs;
                                for (o in n)
                                    f[o] && (a[o] = n[o]);
                                s = {};
                                for (o in a)
                                    s[o] = c[r][o];
                                h.push(e.fromTo(p[r], i, s, a))
                            }
                        return h
                    }
                    ,
                    t.activate([s]),
                    s
                }, !0)
            }),
            n._gsDefine && n._gsQueue.pop()(),
            function(i) {
                "use strict";
                var r = function() {
                    return (n.GreenSockGlobals || n)[i]
                };
                "function" == typeof define && define.amd ? define(["TweenLite"], r) : "undefined" != typeof e && e.exports && (t("../TweenLite.js"),
                e.exports = r())
            }("CSSPlugin")
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {
        "../TweenLite.js": 1
    }],
    4: [function(t, e, i) {
        (function(i) {
            /*!
 * VERSION: 1.8.0
 * DATE: 2016-07-09
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/
            var n = "undefined" != typeof e && e.exports && "undefined" != typeof i ? i : this || window;
            (n._gsQueue || (n._gsQueue = [])).push(function() {
                "use strict";
                var t = document.documentElement
                  , e = window
                  , i = function(i, n) {
                    var r = "x" === n ? "Width" : "Height"
                      , a = "scroll" + r
                      , o = "client" + r
                      , s = document.body;
                    return i === e || i === t || i === s ? Math.max(t[a], s[a]) - (e["inner" + r] || t[o] || s[o]) : i[a] - i["offset" + r]
                }
                  , r = function(t) {
                    return "string" == typeof t && (t = TweenLite.selector(t)),
                    t.length && t !== e && t[0] && t[0].style && !t.nodeType && (t = t[0]),
                    t === e || t.nodeType && t.style ? t : null
                }
                  , a = function(i, n) {
                    var r = "scroll" + ("x" === n ? "Left" : "Top");
                    return i === e && (null != i.pageXOffset ? r = "page" + n.toUpperCase() + "Offset" : i = null != t[r] ? t : document.body),
                    function() {
                        return i[r]
                    }
                }
                  , o = function(i, n) {
                    var o = r(i).getBoundingClientRect()
                      , s = !n || n === e || n === document.body
                      , l = (s ? t : n).getBoundingClientRect()
                      , h = {
                        x: o.left - l.left,
                        y: o.top - l.top
                    };
                    return !s && n && (h.x += a(n, "x")(),
                    h.y += a(n, "y")()),
                    h
                }
                  , s = function(t, e, n) {
                    var r = typeof t;
                    return "number" === r || "string" === r && "=" === t.charAt(1) ? t : "max" === t ? i(e, n) : Math.min(i(e, n), o(t, e)[n])
                }
                  , l = n._gsDefine.plugin({
                    propName: "scrollTo",
                    API: 2,
                    version: "1.8.0",
                    init: function(t, i, n) {
                        return this._wdw = t === e,
                        this._target = t,
                        this._tween = n,
                        "object" != typeof i ? (i = {
                            y: i
                        },
                        "string" == typeof i.y && "max" !== i.y && "=" !== i.y.charAt(1) && (i.x = i.y)) : i.nodeType && (i = {
                            y: i,
                            x: i
                        }),
                        this.vars = i,
                        this._autoKill = i.autoKill !== !1,
                        this.getX = a(t, "x"),
                        this.getY = a(t, "y"),
                        this.x = this.xPrev = this.getX(),
                        this.y = this.yPrev = this.getY(),
                        null != i.x ? (this._addTween(this, "x", this.x, s(i.x, t, "x") - (i.offsetX || 0), "scrollTo_x", !0),
                        this._overwriteProps.push("scrollTo_x")) : this.skipX = !0,
                        null != i.y ? (this._addTween(this, "y", this.y, s(i.y, t, "y") - (i.offsetY || 0), "scrollTo_y", !0),
                        this._overwriteProps.push("scrollTo_y")) : this.skipY = !0,
                        !0
                    },
                    set: function(t) {
                        this._super.setRatio.call(this, t);
                        var n = this._wdw || !this.skipX ? this.getX() : this.xPrev
                          , r = this._wdw || !this.skipY ? this.getY() : this.yPrev
                          , a = r - this.yPrev
                          , o = n - this.xPrev
                          , s = l.autoKillThreshold;
                        this.x < 0 && (this.x = 0),
                        this.y < 0 && (this.y = 0),
                        this._autoKill && (!this.skipX && (o > s || o < -s) && n < i(this._target, "x") && (this.skipX = !0),
                        !this.skipY && (a > s || a < -s) && r < i(this._target, "y") && (this.skipY = !0),
                        this.skipX && this.skipY && (this._tween.kill(),
                        this.vars.onAutoKill && this.vars.onAutoKill.apply(this.vars.onAutoKillScope || this._tween, this.vars.onAutoKillParams || []))),
                        this._wdw ? e.scrollTo(this.skipX ? n : this.x, this.skipY ? r : this.y) : (this.skipY || (this._target.scrollTop = this.y),
                        this.skipX || (this._target.scrollLeft = this.x)),
                        this.xPrev = this.x,
                        this.yPrev = this.y
                    }
                })
                  , h = l.prototype;
                l.max = i,
                l.getOffset = o,
                l.autoKillThreshold = 7,
                h._kill = function(t) {
                    return t.scrollTo_x && (this.skipX = !0),
                    t.scrollTo_y && (this.skipY = !0),
                    this._super._kill.call(this, t)
                }
            }),
            n._gsDefine && n._gsQueue.pop()(),
            function(i) {
                "use strict";
                var r = function() {
                    return (n.GreenSockGlobals || n)[i]
                };
                "function" == typeof define && define.amd ? define(["TweenLite"], r) : "undefined" != typeof e && e.exports && (t("../TweenLite.js"),
                e.exports = r())
            }("ScrollToPlugin")
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {
        "../TweenLite.js": 1
    }],
    5: [function(t, e, i) {
        /*!
 * jQuery JavaScript Library v3.1.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-07-07T21:44Z
 */
        !function(t, i) {
            "use strict";
            "object" == typeof e && "object" == typeof e.exports ? e.exports = t.document ? i(t, !0) : function(t) {
                if (!t.document)
                    throw new Error("jQuery requires a window with a document");
                return i(t)
            }
            : i(t)
        }("undefined" != typeof window ? window : this, function(t, e) {
            "use strict";
            function i(t, e) {
                e = e || J;
                var i = e.createElement("script");
                i.text = t,
                e.head.appendChild(i).parentNode.removeChild(i)
            }
            function n(t) {
                var e = !!t && "length"in t && t.length
                  , i = pt.type(t);
                return "function" !== i && !pt.isWindow(t) && ("array" === i || 0 === e || "number" == typeof e && e > 0 && e - 1 in t)
            }
            function r(t, e, i) {
                if (pt.isFunction(e))
                    return pt.grep(t, function(t, n) {
                        return !!e.call(t, n, t) !== i
                    });
                if (e.nodeType)
                    return pt.grep(t, function(t) {
                        return t === e !== i
                    });
                if ("string" == typeof e) {
                    if (wt.test(e))
                        return pt.filter(e, t, i);
                    e = pt.filter(e, t)
                }
                return pt.grep(t, function(t) {
                    return rt.call(e, t) > -1 !== i && 1 === t.nodeType
                })
            }
            function a(t, e) {
                for (; (t = t[e]) && 1 !== t.nodeType; )
                    ;
                return t
            }
            function o(t) {
                var e = {};
                return pt.each(t.match(Pt) || [], function(t, i) {
                    e[i] = !0
                }),
                e
            }
            function s(t) {
                return t
            }
            function l(t) {
                throw t
            }
            function h(t, e, i) {
                var n;
                try {
                    t && pt.isFunction(n = t.promise) ? n.call(t).done(e).fail(i) : t && pt.isFunction(n = t.then) ? n.call(t, e, i) : e.call(void 0, t)
                } catch (t) {
                    i.call(void 0, t)
                }
            }
            function c() {
                J.removeEventListener("DOMContentLoaded", c),
                t.removeEventListener("load", c),
                pt.ready()
            }
            function u() {
                this.expando = pt.expando + u.uid++
            }
            function p(t, e, i) {
                var n;
                if (void 0 === i && 1 === t.nodeType)
                    if (n = "data-" + e.replace(Nt, "-$&").toLowerCase(),
                    i = t.getAttribute(n),
                    "string" == typeof i) {
                        try {
                            i = "true" === i || "false" !== i && ("null" === i ? null : +i + "" === i ? +i : kt.test(i) ? JSON.parse(i) : i)
                        } catch (r) {}
                        It.set(t, e, i)
                    } else
                        i = void 0;
                return i
            }
            function f(t, e, i, n) {
                var r, a = 1, o = 20, s = n ? function() {
                    return n.cur()
                }
                : function() {
                    return pt.css(t, e, "")
                }
                , l = s(), h = i && i[3] || (pt.cssNumber[e] ? "" : "px"), c = (pt.cssNumber[e] || "px" !== h && +l) && Bt.exec(pt.css(t, e));
                if (c && c[3] !== h) {
                    h = h || c[3],
                    i = i || [],
                    c = +l || 1;
                    do
                        a = a || ".5",
                        c /= a,
                        pt.style(t, e, c + h);
                    while (a !== (a = s() / l) && 1 !== a && --o)
                }
                return i && (c = +c || +l || 0,
                r = i[1] ? c + (i[1] + 1) * i[2] : +i[2],
                n && (n.unit = h,
                n.start = c,
                n.end = r)),
                r
            }
            function d(t) {
                var e, i = t.ownerDocument, n = t.nodeName, r = Vt[n];
                return r ? r : (e = i.body.appendChild(i.createElement(n)),
                r = pt.css(e, "display"),
                e.parentNode.removeChild(e),
                "none" === r && (r = "block"),
                Vt[n] = r,
                r)
            }
            function m(t, e) {
                for (var i, n, r = [], a = 0, o = t.length; a < o; a++)
                    n = t[a],
                    n.style && (i = n.style.display,
                    e ? ("none" === i && (r[a] = Dt.get(n, "display") || null,
                    r[a] || (n.style.display = "")),
                    "" === n.style.display && zt(n) && (r[a] = d(n))) : "none" !== i && (r[a] = "none",
                    Dt.set(n, "display", i)));
                for (a = 0; a < o; a++)
                    null != r[a] && (t[a].style.display = r[a]);
                return t
            }
            function g(t, e) {
                var i = "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e || "*") : "undefined" != typeof t.querySelectorAll ? t.querySelectorAll(e || "*") : [];
                return void 0 === e || e && pt.nodeName(t, e) ? pt.merge([t], i) : i
            }
            function v(t, e) {
                for (var i = 0, n = t.length; i < n; i++)
                    Dt.set(t[i], "globalEval", !e || Dt.get(e[i], "globalEval"))
            }
            function y(t, e, i, n, r) {
                for (var a, o, s, l, h, c, u = e.createDocumentFragment(), p = [], f = 0, d = t.length; f < d; f++)
                    if (a = t[f],
                    a || 0 === a)
                        if ("object" === pt.type(a))
                            pt.merge(p, a.nodeType ? [a] : a);
                        else if (qt.test(a)) {
                            for (o = o || u.appendChild(e.createElement("div")),
                            s = (Ht.exec(a) || ["", ""])[1].toLowerCase(),
                            l = Xt[s] || Xt._default,
                            o.innerHTML = l[1] + pt.htmlPrefilter(a) + l[2],
                            c = l[0]; c--; )
                                o = o.lastChild;
                            pt.merge(p, o.childNodes),
                            o = u.firstChild,
                            o.textContent = ""
                        } else
                            p.push(e.createTextNode(a));
                for (u.textContent = "",
                f = 0; a = p[f++]; )
                    if (n && pt.inArray(a, n) > -1)
                        r && r.push(a);
                    else if (h = pt.contains(a.ownerDocument, a),
                    o = g(u.appendChild(a), "script"),
                    h && v(o),
                    i)
                        for (c = 0; a = o[c++]; )
                            Wt.test(a.type || "") && i.push(a);
                return u
            }
            function _() {
                return !0
            }
            function x() {
                return !1
            }
            function b() {
                try {
                    return J.activeElement
                } catch (t) {}
            }
            function w(t, e, i, n, r, a) {
                var o, s;
                if ("object" == typeof e) {
                    "string" != typeof i && (n = n || i,
                    i = void 0);
                    for (s in e)
                        w(t, s, i, n, e[s], a);
                    return t
                }
                if (null == n && null == r ? (r = i,
                n = i = void 0) : null == r && ("string" == typeof i ? (r = n,
                n = void 0) : (r = n,
                n = i,
                i = void 0)),
                r === !1)
                    r = x;
                else if (!r)
                    return t;
                return 1 === a && (o = r,
                r = function(t) {
                    return pt().off(t),
                    o.apply(this, arguments)
                }
                ,
                r.guid = o.guid || (o.guid = pt.guid++)),
                t.each(function() {
                    pt.event.add(this, e, r, n, i)
                })
            }
            function M(t, e) {
                return pt.nodeName(t, "table") && pt.nodeName(11 !== e.nodeType ? e : e.firstChild, "tr") ? t.getElementsByTagName("tbody")[0] || t : t
            }
            function T(t) {
                return t.type = (null !== t.getAttribute("type")) + "/" + t.type,
                t
            }
            function S(t) {
                var e = ee.exec(t.type);
                return e ? t.type = e[1] : t.removeAttribute("type"),
                t
            }
            function C(t, e) {
                var i, n, r, a, o, s, l, h;
                if (1 === e.nodeType) {
                    if (Dt.hasData(t) && (a = Dt.access(t),
                    o = Dt.set(e, a),
                    h = a.events)) {
                        delete o.handle,
                        o.events = {};
                        for (r in h)
                            for (i = 0,
                            n = h[r].length; i < n; i++)
                                pt.event.add(e, r, h[r][i])
                    }
                    It.hasData(t) && (s = It.access(t),
                    l = pt.extend({}, s),
                    It.set(e, l))
                }
            }
            function A(t, e) {
                var i = e.nodeName.toLowerCase();
                "input" === i && Gt.test(t.type) ? e.checked = t.checked : "input" !== i && "textarea" !== i || (e.defaultValue = t.defaultValue)
            }
            function P(t, e, n, r) {
                e = it.apply([], e);
                var a, o, s, l, h, c, u = 0, p = t.length, f = p - 1, d = e[0], m = pt.isFunction(d);
                if (m || p > 1 && "string" == typeof d && !ct.checkClone && te.test(d))
                    return t.each(function(i) {
                        var a = t.eq(i);
                        m && (e[0] = d.call(this, i, a.html())),
                        P(a, e, n, r)
                    });
                if (p && (a = y(e, t[0].ownerDocument, !1, t, r),
                o = a.firstChild,
                1 === a.childNodes.length && (a = o),
                o || r)) {
                    for (s = pt.map(g(a, "script"), T),
                    l = s.length; u < p; u++)
                        h = a,
                        u !== f && (h = pt.clone(h, !0, !0),
                        l && pt.merge(s, g(h, "script"))),
                        n.call(t[u], h, u);
                    if (l)
                        for (c = s[s.length - 1].ownerDocument,
                        pt.map(s, S),
                        u = 0; u < l; u++)
                            h = s[u],
                            Wt.test(h.type || "") && !Dt.access(h, "globalEval") && pt.contains(c, h) && (h.src ? pt._evalUrl && pt._evalUrl(h.src) : i(h.textContent.replace(ie, ""), c))
                }
                return t
            }
            function E(t, e, i) {
                for (var n, r = e ? pt.filter(e, t) : t, a = 0; null != (n = r[a]); a++)
                    i || 1 !== n.nodeType || pt.cleanData(g(n)),
                    n.parentNode && (i && pt.contains(n.ownerDocument, n) && v(g(n, "script")),
                    n.parentNode.removeChild(n));
                return t
            }
            function L(t, e, i) {
                var n, r, a, o, s = t.style;
                return i = i || ae(t),
                i && (o = i.getPropertyValue(e) || i[e],
                "" !== o || pt.contains(t.ownerDocument, t) || (o = pt.style(t, e)),
                !ct.pixelMarginRight() && re.test(o) && ne.test(e) && (n = s.width,
                r = s.minWidth,
                a = s.maxWidth,
                s.minWidth = s.maxWidth = s.width = o,
                o = i.width,
                s.width = n,
                s.minWidth = r,
                s.maxWidth = a)),
                void 0 !== o ? o + "" : o
            }
            function O(t, e) {
                return {
                    get: function() {
                        return t() ? void delete this.get : (this.get = e).apply(this, arguments)
                    }
                }
            }
            function R(t) {
                if (t in ce)
                    return t;
                for (var e = t[0].toUpperCase() + t.slice(1), i = he.length; i--; )
                    if (t = he[i] + e,
                    t in ce)
                        return t
            }
            function D(t, e, i) {
                var n = Bt.exec(e);
                return n ? Math.max(0, n[2] - (i || 0)) + (n[3] || "px") : e
            }
            function I(t, e, i, n, r) {
                for (var a = i === (n ? "border" : "content") ? 4 : "width" === e ? 1 : 0, o = 0; a < 4; a += 2)
                    "margin" === i && (o += pt.css(t, i + Ut[a], !0, r)),
                    n ? ("content" === i && (o -= pt.css(t, "padding" + Ut[a], !0, r)),
                    "margin" !== i && (o -= pt.css(t, "border" + Ut[a] + "Width", !0, r))) : (o += pt.css(t, "padding" + Ut[a], !0, r),
                    "padding" !== i && (o += pt.css(t, "border" + Ut[a] + "Width", !0, r)));
                return o
            }
            function k(t, e, i) {
                var n, r = !0, a = ae(t), o = "border-box" === pt.css(t, "boxSizing", !1, a);
                if (t.getClientRects().length && (n = t.getBoundingClientRect()[e]),
                n <= 0 || null == n) {
                    if (n = L(t, e, a),
                    (n < 0 || null == n) && (n = t.style[e]),
                    re.test(n))
                        return n;
                    r = o && (ct.boxSizingReliable() || n === t.style[e]),
                    n = parseFloat(n) || 0
                }
                return n + I(t, e, i || (o ? "border" : "content"), r, a) + "px"
            }
            function N(t, e, i, n, r) {
                return new N.prototype.init(t,e,i,n,r)
            }
            function F() {
                pe && (t.requestAnimationFrame(F),
                pt.fx.tick())
            }
            function B() {
                return t.setTimeout(function() {
                    ue = void 0
                }),
                ue = pt.now()
            }
            function U(t, e) {
                var i, n = 0, r = {
                    height: t
                };
                for (e = e ? 1 : 0; n < 4; n += 2 - e)
                    i = Ut[n],
                    r["margin" + i] = r["padding" + i] = t;
                return e && (r.opacity = r.width = t),
                r
            }
            function z(t, e, i) {
                for (var n, r = (G.tweeners[e] || []).concat(G.tweeners["*"]), a = 0, o = r.length; a < o; a++)
                    if (n = r[a].call(i, e, t))
                        return n
            }
            function j(t, e, i) {
                var n, r, a, o, s, l, h, c, u = "width"in e || "height"in e, p = this, f = {}, d = t.style, g = t.nodeType && zt(t), v = Dt.get(t, "fxshow");
                i.queue || (o = pt._queueHooks(t, "fx"),
                null == o.unqueued && (o.unqueued = 0,
                s = o.empty.fire,
                o.empty.fire = function() {
                    o.unqueued || s()
                }
                ),
                o.unqueued++,
                p.always(function() {
                    p.always(function() {
                        o.unqueued--,
                        pt.queue(t, "fx").length || o.empty.fire()
                    })
                }));
                for (n in e)
                    if (r = e[n],
                    fe.test(r)) {
                        if (delete e[n],
                        a = a || "toggle" === r,
                        r === (g ? "hide" : "show")) {
                            if ("show" !== r || !v || void 0 === v[n])
                                continue;
                            g = !0
                        }
                        f[n] = v && v[n] || pt.style(t, n)
                    }
                if (l = !pt.isEmptyObject(e),
                l || !pt.isEmptyObject(f)) {
                    u && 1 === t.nodeType && (i.overflow = [d.overflow, d.overflowX, d.overflowY],
                    h = v && v.display,
                    null == h && (h = Dt.get(t, "display")),
                    c = pt.css(t, "display"),
                    "none" === c && (h ? c = h : (m([t], !0),
                    h = t.style.display || h,
                    c = pt.css(t, "display"),
                    m([t]))),
                    ("inline" === c || "inline-block" === c && null != h) && "none" === pt.css(t, "float") && (l || (p.done(function() {
                        d.display = h
                    }),
                    null == h && (c = d.display,
                    h = "none" === c ? "" : c)),
                    d.display = "inline-block")),
                    i.overflow && (d.overflow = "hidden",
                    p.always(function() {
                        d.overflow = i.overflow[0],
                        d.overflowX = i.overflow[1],
                        d.overflowY = i.overflow[2]
                    })),
                    l = !1;
                    for (n in f)
                        l || (v ? "hidden"in v && (g = v.hidden) : v = Dt.access(t, "fxshow", {
                            display: h
                        }),
                        a && (v.hidden = !g),
                        g && m([t], !0),
                        p.done(function() {
                            g || m([t]),
                            Dt.remove(t, "fxshow");
                            for (n in f)
                                pt.style(t, n, f[n])
                        })),
                        l = z(g ? v[n] : 0, n, p),
                        n in v || (v[n] = l.start,
                        g && (l.end = l.start,
                        l.start = 0))
                }
            }
            function V(t, e) {
                var i, n, r, a, o;
                for (i in t)
                    if (n = pt.camelCase(i),
                    r = e[n],
                    a = t[i],
                    pt.isArray(a) && (r = a[1],
                    a = t[i] = a[0]),
                    i !== n && (t[n] = a,
                    delete t[i]),
                    o = pt.cssHooks[n],
                    o && "expand"in o) {
                        a = o.expand(a),
                        delete t[n];
                        for (i in a)
                            i in t || (t[i] = a[i],
                            e[i] = r)
                    } else
                        e[n] = r
            }
            function G(t, e, i) {
                var n, r, a = 0, o = G.prefilters.length, s = pt.Deferred().always(function() {
                    delete l.elem
                }), l = function() {
                    if (r)
                        return !1;
                    for (var e = ue || B(), i = Math.max(0, h.startTime + h.duration - e), n = i / h.duration || 0, a = 1 - n, o = 0, l = h.tweens.length; o < l; o++)
                        h.tweens[o].run(a);
                    return s.notifyWith(t, [h, a, i]),
                    a < 1 && l ? i : (s.resolveWith(t, [h]),
                    !1)
                }, h = s.promise({
                    elem: t,
                    props: pt.extend({}, e),
                    opts: pt.extend(!0, {
                        specialEasing: {},
                        easing: pt.easing._default
                    }, i),
                    originalProperties: e,
                    originalOptions: i,
                    startTime: ue || B(),
                    duration: i.duration,
                    tweens: [],
                    createTween: function(e, i) {
                        var n = pt.Tween(t, h.opts, e, i, h.opts.specialEasing[e] || h.opts.easing);
                        return h.tweens.push(n),
                        n
                    },
                    stop: function(e) {
                        var i = 0
                          , n = e ? h.tweens.length : 0;
                        if (r)
                            return this;
                        for (r = !0; i < n; i++)
                            h.tweens[i].run(1);
                        return e ? (s.notifyWith(t, [h, 1, 0]),
                        s.resolveWith(t, [h, e])) : s.rejectWith(t, [h, e]),
                        this
                    }
                }), c = h.props;
                for (V(c, h.opts.specialEasing); a < o; a++)
                    if (n = G.prefilters[a].call(h, t, c, h.opts))
                        return pt.isFunction(n.stop) && (pt._queueHooks(h.elem, h.opts.queue).stop = pt.proxy(n.stop, n)),
                        n;
                return pt.map(c, z, h),
                pt.isFunction(h.opts.start) && h.opts.start.call(t, h),
                pt.fx.timer(pt.extend(l, {
                    elem: t,
                    anim: h,
                    queue: h.opts.queue
                })),
                h.progress(h.opts.progress).done(h.opts.done, h.opts.complete).fail(h.opts.fail).always(h.opts.always)
            }
            function H(t) {
                return t.getAttribute && t.getAttribute("class") || ""
            }
            function W(t, e, i, n) {
                var r;
                if (pt.isArray(e))
                    pt.each(e, function(e, r) {
                        i || Ce.test(t) ? n(t, r) : W(t + "[" + ("object" == typeof r && null != r ? e : "") + "]", r, i, n)
                    });
                else if (i || "object" !== pt.type(e))
                    n(t, e);
                else
                    for (r in e)
                        W(t + "[" + r + "]", e[r], i, n)
            }
            function X(t) {
                return function(e, i) {
                    "string" != typeof e && (i = e,
                    e = "*");
                    var n, r = 0, a = e.toLowerCase().match(Pt) || [];
                    if (pt.isFunction(i))
                        for (; n = a[r++]; )
                            "+" === n[0] ? (n = n.slice(1) || "*",
                            (t[n] = t[n] || []).unshift(i)) : (t[n] = t[n] || []).push(i)
                }
            }
            function q(t, e, i, n) {
                function r(s) {
                    var l;
                    return a[s] = !0,
                    pt.each(t[s] || [], function(t, s) {
                        var h = s(e, i, n);
                        return "string" != typeof h || o || a[h] ? o ? !(l = h) : void 0 : (e.dataTypes.unshift(h),
                        r(h),
                        !1)
                    }),
                    l
                }
                var a = {}
                  , o = t === Be;
                return r(e.dataTypes[0]) || !a["*"] && r("*")
            }
            function Y(t, e) {
                var i, n, r = pt.ajaxSettings.flatOptions || {};
                for (i in e)
                    void 0 !== e[i] && ((r[i] ? t : n || (n = {}))[i] = e[i]);
                return n && pt.extend(!0, t, n),
                t
            }
            function Z(t, e, i) {
                for (var n, r, a, o, s = t.contents, l = t.dataTypes; "*" === l[0]; )
                    l.shift(),
                    void 0 === n && (n = t.mimeType || e.getResponseHeader("Content-Type"));
                if (n)
                    for (r in s)
                        if (s[r] && s[r].test(n)) {
                            l.unshift(r);
                            break
                        }
                if (l[0]in i)
                    a = l[0];
                else {
                    for (r in i) {
                        if (!l[0] || t.converters[r + " " + l[0]]) {
                            a = r;
                            break
                        }
                        o || (o = r)
                    }
                    a = a || o
                }
                if (a)
                    return a !== l[0] && l.unshift(a),
                    i[a]
            }
            function $(t, e, i, n) {
                var r, a, o, s, l, h = {}, c = t.dataTypes.slice();
                if (c[1])
                    for (o in t.converters)
                        h[o.toLowerCase()] = t.converters[o];
                for (a = c.shift(); a; )
                    if (t.responseFields[a] && (i[t.responseFields[a]] = e),
                    !l && n && t.dataFilter && (e = t.dataFilter(e, t.dataType)),
                    l = a,
                    a = c.shift())
                        if ("*" === a)
                            a = l;
                        else if ("*" !== l && l !== a) {
                            if (o = h[l + " " + a] || h["* " + a],
                            !o)
                                for (r in h)
                                    if (s = r.split(" "),
                                    s[1] === a && (o = h[l + " " + s[0]] || h["* " + s[0]])) {
                                        o === !0 ? o = h[r] : h[r] !== !0 && (a = s[0],
                                        c.unshift(s[1]));
                                        break
                                    }
                            if (o !== !0)
                                if (o && t["throws"])
                                    e = o(e);
                                else
                                    try {
                                        e = o(e)
                                    } catch (u) {
                                        return {
                                            state: "parsererror",
                                            error: o ? u : "No conversion from " + l + " to " + a
                                        }
                                    }
                        }
                return {
                    state: "success",
                    data: e
                }
            }
            function K(t) {
                return pt.isWindow(t) ? t : 9 === t.nodeType && t.defaultView
            }
            var Q = []
              , J = t.document
              , tt = Object.getPrototypeOf
              , et = Q.slice
              , it = Q.concat
              , nt = Q.push
              , rt = Q.indexOf
              , at = {}
              , ot = at.toString
              , st = at.hasOwnProperty
              , lt = st.toString
              , ht = lt.call(Object)
              , ct = {}
              , ut = "3.1.0"
              , pt = function(t, e) {
                return new pt.fn.init(t,e)
            }
              , ft = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g
              , dt = /^-ms-/
              , mt = /-([a-z])/g
              , gt = function(t, e) {
                return e.toUpperCase()
            };
            pt.fn = pt.prototype = {
                jquery: ut,
                constructor: pt,
                length: 0,
                toArray: function() {
                    return et.call(this)
                },
                get: function(t) {
                    return null != t ? t < 0 ? this[t + this.length] : this[t] : et.call(this)
                },
                pushStack: function(t) {
                    var e = pt.merge(this.constructor(), t);
                    return e.prevObject = this,
                    e
                },
                each: function(t) {
                    return pt.each(this, t)
                },
                map: function(t) {
                    return this.pushStack(pt.map(this, function(e, i) {
                        return t.call(e, i, e)
                    }))
                },
                slice: function() {
                    return this.pushStack(et.apply(this, arguments))
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                eq: function(t) {
                    var e = this.length
                      , i = +t + (t < 0 ? e : 0);
                    return this.pushStack(i >= 0 && i < e ? [this[i]] : [])
                },
                end: function() {
                    return this.prevObject || this.constructor()
                },
                push: nt,
                sort: Q.sort,
                splice: Q.splice
            },
            pt.extend = pt.fn.extend = function() {
                var t, e, i, n, r, a, o = arguments[0] || {}, s = 1, l = arguments.length, h = !1;
                for ("boolean" == typeof o && (h = o,
                o = arguments[s] || {},
                s++),
                "object" == typeof o || pt.isFunction(o) || (o = {}),
                s === l && (o = this,
                s--); s < l; s++)
                    if (null != (t = arguments[s]))
                        for (e in t)
                            i = o[e],
                            n = t[e],
                            o !== n && (h && n && (pt.isPlainObject(n) || (r = pt.isArray(n))) ? (r ? (r = !1,
                            a = i && pt.isArray(i) ? i : []) : a = i && pt.isPlainObject(i) ? i : {},
                            o[e] = pt.extend(h, a, n)) : void 0 !== n && (o[e] = n));
                return o
            }
            ,
            pt.extend({
                expando: "jQuery" + (ut + Math.random()).replace(/\D/g, ""),
                isReady: !0,
                error: function(t) {
                    throw new Error(t)
                },
                noop: function() {},
                isFunction: function(t) {
                    return "function" === pt.type(t)
                },
                isArray: Array.isArray,
                isWindow: function(t) {
                    return null != t && t === t.window
                },
                isNumeric: function(t) {
                    var e = pt.type(t);
                    return ("number" === e || "string" === e) && !isNaN(t - parseFloat(t))
                },
                isPlainObject: function(t) {
                    var e, i;
                    return !(!t || "[object Object]" !== ot.call(t)) && (!(e = tt(t)) || (i = st.call(e, "constructor") && e.constructor,
                    "function" == typeof i && lt.call(i) === ht))
                },
                isEmptyObject: function(t) {
                    var e;
                    for (e in t)
                        return !1;
                    return !0
                },
                type: function(t) {
                    return null == t ? t + "" : "object" == typeof t || "function" == typeof t ? at[ot.call(t)] || "object" : typeof t
                },
                globalEval: function(t) {
                    i(t)
                },
                camelCase: function(t) {
                    return t.replace(dt, "ms-").replace(mt, gt)
                },
                nodeName: function(t, e) {
                    return t.nodeName && t.nodeName.toLowerCase() === e.toLowerCase()
                },
                each: function(t, e) {
                    var i, r = 0;
                    if (n(t))
                        for (i = t.length; r < i && e.call(t[r], r, t[r]) !== !1; r++)
                            ;
                    else
                        for (r in t)
                            if (e.call(t[r], r, t[r]) === !1)
                                break;
                    return t
                },
                trim: function(t) {
                    return null == t ? "" : (t + "").replace(ft, "")
                },
                makeArray: function(t, e) {
                    var i = e || [];
                    return null != t && (n(Object(t)) ? pt.merge(i, "string" == typeof t ? [t] : t) : nt.call(i, t)),
                    i
                },
                inArray: function(t, e, i) {
                    return null == e ? -1 : rt.call(e, t, i)
                },
                merge: function(t, e) {
                    for (var i = +e.length, n = 0, r = t.length; n < i; n++)
                        t[r++] = e[n];
                    return t.length = r,
                    t
                },
                grep: function(t, e, i) {
                    for (var n, r = [], a = 0, o = t.length, s = !i; a < o; a++)
                        n = !e(t[a], a),
                        n !== s && r.push(t[a]);
                    return r
                },
                map: function(t, e, i) {
                    var r, a, o = 0, s = [];
                    if (n(t))
                        for (r = t.length; o < r; o++)
                            a = e(t[o], o, i),
                            null != a && s.push(a);
                    else
                        for (o in t)
                            a = e(t[o], o, i),
                            null != a && s.push(a);
                    return it.apply([], s)
                },
                guid: 1,
                proxy: function(t, e) {
                    var i, n, r;
                    if ("string" == typeof e && (i = t[e],
                    e = t,
                    t = i),
                    pt.isFunction(t))
                        return n = et.call(arguments, 2),
                        r = function() {
                            return t.apply(e || this, n.concat(et.call(arguments)))
                        }
                        ,
                        r.guid = t.guid = t.guid || pt.guid++,
                        r
                },
                now: Date.now,
                support: ct
            }),
            "function" == typeof Symbol && (pt.fn[Symbol.iterator] = Q[Symbol.iterator]),
            pt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(t, e) {
                at["[object " + e + "]"] = e.toLowerCase()
            });
            var vt = /*!
 * Sizzle CSS Selector Engine v2.3.0
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-01-04
 */
            function(t) {
                function e(t, e, i, n) {
                    var r, a, o, s, l, h, c, p = e && e.ownerDocument, d = e ? e.nodeType : 9;
                    if (i = i || [],
                    "string" != typeof t || !t || 1 !== d && 9 !== d && 11 !== d)
                        return i;
                    if (!n && ((e ? e.ownerDocument || e : j) !== D && R(e),
                    e = e || D,
                    k)) {
                        if (11 !== d && (l = vt.exec(t)))
                            if (r = l[1]) {
                                if (9 === d) {
                                    if (!(o = e.getElementById(r)))
                                        return i;
                                    if (o.id === r)
                                        return i.push(o),
                                        i
                                } else if (p && (o = p.getElementById(r)) && U(e, o) && o.id === r)
                                    return i.push(o),
                                    i
                            } else {
                                if (l[2])
                                    return Q.apply(i, e.getElementsByTagName(t)),
                                    i;
                                if ((r = l[3]) && w.getElementsByClassName && e.getElementsByClassName)
                                    return Q.apply(i, e.getElementsByClassName(r)),
                                    i
                            }
                        if (w.qsa && !X[t + " "] && (!N || !N.test(t))) {
                            if (1 !== d)
                                p = e,
                                c = t;
                            else if ("object" !== e.nodeName.toLowerCase()) {
                                for ((s = e.getAttribute("id")) ? s = s.replace(bt, wt) : e.setAttribute("id", s = z),
                                h = C(t),
                                a = h.length; a--; )
                                    h[a] = "#" + s + " " + f(h[a]);
                                c = h.join(","),
                                p = yt.test(t) && u(e.parentNode) || e
                            }
                            if (c)
                                try {
                                    return Q.apply(i, p.querySelectorAll(c)),
                                    i
                                } catch (m) {} finally {
                                    s === z && e.removeAttribute("id")
                                }
                        }
                    }
                    return P(t.replace(st, "$1"), e, i, n)
                }
                function i() {
                    function t(i, n) {
                        return e.push(i + " ") > M.cacheLength && delete t[e.shift()],
                        t[i + " "] = n
                    }
                    var e = [];
                    return t
                }
                function n(t) {
                    return t[z] = !0,
                    t
                }
                function r(t) {
                    var e = D.createElement("fieldset");
                    try {
                        return !!t(e)
                    } catch (i) {
                        return !1
                    } finally {
                        e.parentNode && e.parentNode.removeChild(e),
                        e = null
                    }
                }
                function a(t, e) {
                    for (var i = t.split("|"), n = i.length; n--; )
                        M.attrHandle[i[n]] = e
                }
                function o(t, e) {
                    var i = e && t
                      , n = i && 1 === t.nodeType && 1 === e.nodeType && t.sourceIndex - e.sourceIndex;
                    if (n)
                        return n;
                    if (i)
                        for (; i = i.nextSibling; )
                            if (i === e)
                                return -1;
                    return t ? 1 : -1
                }
                function s(t) {
                    return function(e) {
                        var i = e.nodeName.toLowerCase();
                        return "input" === i && e.type === t
                    }
                }
                function l(t) {
                    return function(e) {
                        var i = e.nodeName.toLowerCase();
                        return ("input" === i || "button" === i) && e.type === t
                    }
                }
                function h(t) {
                    return function(e) {
                        return "label"in e && e.disabled === t || "form"in e && e.disabled === t || "form"in e && e.disabled === !1 && (e.isDisabled === t || e.isDisabled !== !t && ("label"in e || !Tt(e)) !== t)
                    }
                }
                function c(t) {
                    return n(function(e) {
                        return e = +e,
                        n(function(i, n) {
                            for (var r, a = t([], i.length, e), o = a.length; o--; )
                                i[r = a[o]] && (i[r] = !(n[r] = i[r]))
                        })
                    })
                }
                function u(t) {
                    return t && "undefined" != typeof t.getElementsByTagName && t
                }
                function p() {}
                function f(t) {
                    for (var e = 0, i = t.length, n = ""; e < i; e++)
                        n += t[e].value;
                    return n
                }
                function d(t, e, i) {
                    var n = e.dir
                      , r = e.next
                      , a = r || n
                      , o = i && "parentNode" === a
                      , s = G++;
                    return e.first ? function(e, i, r) {
                        for (; e = e[n]; )
                            if (1 === e.nodeType || o)
                                return t(e, i, r)
                    }
                    : function(e, i, l) {
                        var h, c, u, p = [V, s];
                        if (l) {
                            for (; e = e[n]; )
                                if ((1 === e.nodeType || o) && t(e, i, l))
                                    return !0
                        } else
                            for (; e = e[n]; )
                                if (1 === e.nodeType || o)
                                    if (u = e[z] || (e[z] = {}),
                                    c = u[e.uniqueID] || (u[e.uniqueID] = {}),
                                    r && r === e.nodeName.toLowerCase())
                                        e = e[n] || e;
                                    else {
                                        if ((h = c[a]) && h[0] === V && h[1] === s)
                                            return p[2] = h[2];
                                        if (c[a] = p,
                                        p[2] = t(e, i, l))
                                            return !0
                                    }
                    }
                }
                function m(t) {
                    return t.length > 1 ? function(e, i, n) {
                        for (var r = t.length; r--; )
                            if (!t[r](e, i, n))
                                return !1;
                        return !0
                    }
                    : t[0]
                }
                function g(t, i, n) {
                    for (var r = 0, a = i.length; r < a; r++)
                        e(t, i[r], n);
                    return n
                }
                function v(t, e, i, n, r) {
                    for (var a, o = [], s = 0, l = t.length, h = null != e; s < l; s++)
                        (a = t[s]) && (i && !i(a, n, r) || (o.push(a),
                        h && e.push(s)));
                    return o
                }
                function y(t, e, i, r, a, o) {
                    return r && !r[z] && (r = y(r)),
                    a && !a[z] && (a = y(a, o)),
                    n(function(n, o, s, l) {
                        var h, c, u, p = [], f = [], d = o.length, m = n || g(e || "*", s.nodeType ? [s] : s, []), y = !t || !n && e ? m : v(m, p, t, s, l), _ = i ? a || (n ? t : d || r) ? [] : o : y;
                        if (i && i(y, _, s, l),
                        r)
                            for (h = v(_, f),
                            r(h, [], s, l),
                            c = h.length; c--; )
                                (u = h[c]) && (_[f[c]] = !(y[f[c]] = u));
                        if (n) {
                            if (a || t) {
                                if (a) {
                                    for (h = [],
                                    c = _.length; c--; )
                                        (u = _[c]) && h.push(y[c] = u);
                                    a(null, _ = [], h, l)
                                }
                                for (c = _.length; c--; )
                                    (u = _[c]) && (h = a ? tt(n, u) : p[c]) > -1 && (n[h] = !(o[h] = u))
                            }
                        } else
                            _ = v(_ === o ? _.splice(d, _.length) : _),
                            a ? a(null, o, _, l) : Q.apply(o, _)
                    })
                }
                function _(t) {
                    for (var e, i, n, r = t.length, a = M.relative[t[0].type], o = a || M.relative[" "], s = a ? 1 : 0, l = d(function(t) {
                        return t === e
                    }, o, !0), h = d(function(t) {
                        return tt(e, t) > -1
                    }, o, !0), c = [function(t, i, n) {
                        var r = !a && (n || i !== E) || ((e = i).nodeType ? l(t, i, n) : h(t, i, n));
                        return e = null,
                        r
                    }
                    ]; s < r; s++)
                        if (i = M.relative[t[s].type])
                            c = [d(m(c), i)];
                        else {
                            if (i = M.filter[t[s].type].apply(null, t[s].matches),
                            i[z]) {
                                for (n = ++s; n < r && !M.relative[t[n].type]; n++)
                                    ;
                                return y(s > 1 && m(c), s > 1 && f(t.slice(0, s - 1).concat({
                                    value: " " === t[s - 2].type ? "*" : ""
                                })).replace(st, "$1"), i, s < n && _(t.slice(s, n)), n < r && _(t = t.slice(n)), n < r && f(t))
                            }
                            c.push(i)
                        }
                    return m(c)
                }
                function x(t, i) {
                    var r = i.length > 0
                      , a = t.length > 0
                      , o = function(n, o, s, l, h) {
                        var c, u, p, f = 0, d = "0", m = n && [], g = [], y = E, _ = n || a && M.find.TAG("*", h), x = V += null == y ? 1 : Math.random() || .1, b = _.length;
                        for (h && (E = o === D || o || h); d !== b && null != (c = _[d]); d++) {
                            if (a && c) {
                                for (u = 0,
                                o || c.ownerDocument === D || (R(c),
                                s = !k); p = t[u++]; )
                                    if (p(c, o || D, s)) {
                                        l.push(c);
                                        break
                                    }
                                h && (V = x)
                            }
                            r && ((c = !p && c) && f--,
                            n && m.push(c))
                        }
                        if (f += d,
                        r && d !== f) {
                            for (u = 0; p = i[u++]; )
                                p(m, g, o, s);
                            if (n) {
                                if (f > 0)
                                    for (; d--; )
                                        m[d] || g[d] || (g[d] = $.call(l));
                                g = v(g)
                            }
                            Q.apply(l, g),
                            h && !n && g.length > 0 && f + i.length > 1 && e.uniqueSort(l)
                        }
                        return h && (V = x,
                        E = y),
                        m
                    };
                    return r ? n(o) : o
                }
                var b, w, M, T, S, C, A, P, E, L, O, R, D, I, k, N, F, B, U, z = "sizzle" + 1 * new Date, j = t.document, V = 0, G = 0, H = i(), W = i(), X = i(), q = function(t, e) {
                    return t === e && (O = !0),
                    0
                }, Y = {}.hasOwnProperty, Z = [], $ = Z.pop, K = Z.push, Q = Z.push, J = Z.slice, tt = function(t, e) {
                    for (var i = 0, n = t.length; i < n; i++)
                        if (t[i] === e)
                            return i;
                    return -1
                }, et = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", it = "[\\x20\\t\\r\\n\\f]", nt = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", rt = "\\[" + it + "*(" + nt + ")(?:" + it + "*([*^$|!~]?=)" + it + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + nt + "))|)" + it + "*\\]", at = ":(" + nt + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + rt + ")*)|.*)\\)|)", ot = new RegExp(it + "+","g"), st = new RegExp("^" + it + "+|((?:^|[^\\\\])(?:\\\\.)*)" + it + "+$","g"), lt = new RegExp("^" + it + "*," + it + "*"), ht = new RegExp("^" + it + "*([>+~]|" + it + ")" + it + "*"), ct = new RegExp("=" + it + "*([^\\]'\"]*?)" + it + "*\\]","g"), ut = new RegExp(at), pt = new RegExp("^" + nt + "$"), ft = {
                    ID: new RegExp("^#(" + nt + ")"),
                    CLASS: new RegExp("^\\.(" + nt + ")"),
                    TAG: new RegExp("^(" + nt + "|[*])"),
                    ATTR: new RegExp("^" + rt),
                    PSEUDO: new RegExp("^" + at),
                    CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + it + "*(even|odd|(([+-]|)(\\d*)n|)" + it + "*(?:([+-]|)" + it + "*(\\d+)|))" + it + "*\\)|)","i"),
                    bool: new RegExp("^(?:" + et + ")$","i"),
                    needsContext: new RegExp("^" + it + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + it + "*((?:-\\d)?\\d*)" + it + "*\\)|)(?=[^-]|$)","i")
                }, dt = /^(?:input|select|textarea|button)$/i, mt = /^h\d$/i, gt = /^[^{]+\{\s*\[native \w/, vt = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, yt = /[+~]/, _t = new RegExp("\\\\([\\da-f]{1,6}" + it + "?|(" + it + ")|.)","ig"), xt = function(t, e, i) {
                    var n = "0x" + e - 65536;
                    return n !== n || i ? e : n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320)
                }, bt = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g, wt = function(t, e) {
                    return e ? "\0" === t ? "�" : t.slice(0, -1) + "\\" + t.charCodeAt(t.length - 1).toString(16) + " " : "\\" + t
                }, Mt = function() {
                    R()
                }, Tt = d(function(t) {
                    return t.disabled === !0
                }, {
                    dir: "parentNode",
                    next: "legend"
                });
                try {
                    Q.apply(Z = J.call(j.childNodes), j.childNodes),
                    Z[j.childNodes.length].nodeType
                } catch (St) {
                    Q = {
                        apply: Z.length ? function(t, e) {
                            K.apply(t, J.call(e))
                        }
                        : function(t, e) {
                            for (var i = t.length, n = 0; t[i++] = e[n++]; )
                                ;
                            t.length = i - 1
                        }
                    }
                }
                w = e.support = {},
                S = e.isXML = function(t) {
                    var e = t && (t.ownerDocument || t).documentElement;
                    return !!e && "HTML" !== e.nodeName
                }
                ,
                R = e.setDocument = function(t) {
                    var e, i, n = t ? t.ownerDocument || t : j;
                    return n !== D && 9 === n.nodeType && n.documentElement ? (D = n,
                    I = D.documentElement,
                    k = !S(D),
                    j !== D && (i = D.defaultView) && i.top !== i && (i.addEventListener ? i.addEventListener("unload", Mt, !1) : i.attachEvent && i.attachEvent("onunload", Mt)),
                    w.attributes = r(function(t) {
                        return t.className = "i",
                        !t.getAttribute("className")
                    }),
                    w.getElementsByTagName = r(function(t) {
                        return t.appendChild(D.createComment("")),
                        !t.getElementsByTagName("*").length
                    }),
                    w.getElementsByClassName = gt.test(D.getElementsByClassName),
                    w.getById = r(function(t) {
                        return I.appendChild(t).id = z,
                        !D.getElementsByName || !D.getElementsByName(z).length
                    }),
                    w.getById ? (M.find.ID = function(t, e) {
                        if ("undefined" != typeof e.getElementById && k) {
                            var i = e.getElementById(t);
                            return i ? [i] : []
                        }
                    }
                    ,
                    M.filter.ID = function(t) {
                        var e = t.replace(_t, xt);
                        return function(t) {
                            return t.getAttribute("id") === e
                        }
                    }
                    ) : (delete M.find.ID,
                    M.filter.ID = function(t) {
                        var e = t.replace(_t, xt);
                        return function(t) {
                            var i = "undefined" != typeof t.getAttributeNode && t.getAttributeNode("id");
                            return i && i.value === e
                        }
                    }
                    ),
                    M.find.TAG = w.getElementsByTagName ? function(t, e) {
                        return "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t) : w.qsa ? e.querySelectorAll(t) : void 0
                    }
                    : function(t, e) {
                        var i, n = [], r = 0, a = e.getElementsByTagName(t);
                        if ("*" === t) {
                            for (; i = a[r++]; )
                                1 === i.nodeType && n.push(i);
                            return n
                        }
                        return a
                    }
                    ,
                    M.find.CLASS = w.getElementsByClassName && function(t, e) {
                        if ("undefined" != typeof e.getElementsByClassName && k)
                            return e.getElementsByClassName(t)
                    }
                    ,
                    F = [],
                    N = [],
                    (w.qsa = gt.test(D.querySelectorAll)) && (r(function(t) {
                        I.appendChild(t).innerHTML = "<a id='" + z + "'></a><select id='" + z + "-\r\\' msallowcapture=''><option selected=''></option></select>",
                        t.querySelectorAll("[msallowcapture^='']").length && N.push("[*^$]=" + it + "*(?:''|\"\")"),
                        t.querySelectorAll("[selected]").length || N.push("\\[" + it + "*(?:value|" + et + ")"),
                        t.querySelectorAll("[id~=" + z + "-]").length || N.push("~="),
                        t.querySelectorAll(":checked").length || N.push(":checked"),
                        t.querySelectorAll("a#" + z + "+*").length || N.push(".#.+[+~]")
                    }),
                    r(function(t) {
                        t.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                        var e = D.createElement("input");
                        e.setAttribute("type", "hidden"),
                        t.appendChild(e).setAttribute("name", "D"),
                        t.querySelectorAll("[name=d]").length && N.push("name" + it + "*[*^$|!~]?="),
                        2 !== t.querySelectorAll(":enabled").length && N.push(":enabled", ":disabled"),
                        I.appendChild(t).disabled = !0,
                        2 !== t.querySelectorAll(":disabled").length && N.push(":enabled", ":disabled"),
                        t.querySelectorAll("*,:x"),
                        N.push(",.*:")
                    })),
                    (w.matchesSelector = gt.test(B = I.matches || I.webkitMatchesSelector || I.mozMatchesSelector || I.oMatchesSelector || I.msMatchesSelector)) && r(function(t) {
                        w.disconnectedMatch = B.call(t, "*"),
                        B.call(t, "[s!='']:x"),
                        F.push("!=", at)
                    }),
                    N = N.length && new RegExp(N.join("|")),
                    F = F.length && new RegExp(F.join("|")),
                    e = gt.test(I.compareDocumentPosition),
                    U = e || gt.test(I.contains) ? function(t, e) {
                        var i = 9 === t.nodeType ? t.documentElement : t
                          , n = e && e.parentNode;
                        return t === n || !(!n || 1 !== n.nodeType || !(i.contains ? i.contains(n) : t.compareDocumentPosition && 16 & t.compareDocumentPosition(n)))
                    }
                    : function(t, e) {
                        if (e)
                            for (; e = e.parentNode; )
                                if (e === t)
                                    return !0;
                        return !1
                    }
                    ,
                    q = e ? function(t, e) {
                        if (t === e)
                            return O = !0,
                            0;
                        var i = !t.compareDocumentPosition - !e.compareDocumentPosition;
                        return i ? i : (i = (t.ownerDocument || t) === (e.ownerDocument || e) ? t.compareDocumentPosition(e) : 1,
                        1 & i || !w.sortDetached && e.compareDocumentPosition(t) === i ? t === D || t.ownerDocument === j && U(j, t) ? -1 : e === D || e.ownerDocument === j && U(j, e) ? 1 : L ? tt(L, t) - tt(L, e) : 0 : 4 & i ? -1 : 1)
                    }
                    : function(t, e) {
                        if (t === e)
                            return O = !0,
                            0;
                        var i, n = 0, r = t.parentNode, a = e.parentNode, s = [t], l = [e];
                        if (!r || !a)
                            return t === D ? -1 : e === D ? 1 : r ? -1 : a ? 1 : L ? tt(L, t) - tt(L, e) : 0;
                        if (r === a)
                            return o(t, e);
                        for (i = t; i = i.parentNode; )
                            s.unshift(i);
                        for (i = e; i = i.parentNode; )
                            l.unshift(i);
                        for (; s[n] === l[n]; )
                            n++;
                        return n ? o(s[n], l[n]) : s[n] === j ? -1 : l[n] === j ? 1 : 0
                    }
                    ,
                    D) : D
                }
                ,
                e.matches = function(t, i) {
                    return e(t, null, null, i)
                }
                ,
                e.matchesSelector = function(t, i) {
                    if ((t.ownerDocument || t) !== D && R(t),
                    i = i.replace(ct, "='$1']"),
                    w.matchesSelector && k && !X[i + " "] && (!F || !F.test(i)) && (!N || !N.test(i)))
                        try {
                            var n = B.call(t, i);
                            if (n || w.disconnectedMatch || t.document && 11 !== t.document.nodeType)
                                return n
                        } catch (r) {}
                    return e(i, D, null, [t]).length > 0
                }
                ,
                e.contains = function(t, e) {
                    return (t.ownerDocument || t) !== D && R(t),
                    U(t, e)
                }
                ,
                e.attr = function(t, e) {
                    (t.ownerDocument || t) !== D && R(t);
                    var i = M.attrHandle[e.toLowerCase()]
                      , n = i && Y.call(M.attrHandle, e.toLowerCase()) ? i(t, e, !k) : void 0;
                    return void 0 !== n ? n : w.attributes || !k ? t.getAttribute(e) : (n = t.getAttributeNode(e)) && n.specified ? n.value : null
                }
                ,
                e.escape = function(t) {
                    return (t + "").replace(bt, wt)
                }
                ,
                e.error = function(t) {
                    throw new Error("Syntax error, unrecognized expression: " + t)
                }
                ,
                e.uniqueSort = function(t) {
                    var e, i = [], n = 0, r = 0;
                    if (O = !w.detectDuplicates,
                    L = !w.sortStable && t.slice(0),
                    t.sort(q),
                    O) {
                        for (; e = t[r++]; )
                            e === t[r] && (n = i.push(r));
                        for (; n--; )
                            t.splice(i[n], 1)
                    }
                    return L = null,
                    t
                }
                ,
                T = e.getText = function(t) {
                    var e, i = "", n = 0, r = t.nodeType;
                    if (r) {
                        if (1 === r || 9 === r || 11 === r) {
                            if ("string" == typeof t.textContent)
                                return t.textContent;
                            for (t = t.firstChild; t; t = t.nextSibling)
                                i += T(t)
                        } else if (3 === r || 4 === r)
                            return t.nodeValue
                    } else
                        for (; e = t[n++]; )
                            i += T(e);
                    return i
                }
                ,
                M = e.selectors = {
                    cacheLength: 50,
                    createPseudo: n,
                    match: ft,
                    attrHandle: {},
                    find: {},
                    relative: {
                        ">": {
                            dir: "parentNode",
                            first: !0
                        },
                        " ": {
                            dir: "parentNode"
                        },
                        "+": {
                            dir: "previousSibling",
                            first: !0
                        },
                        "~": {
                            dir: "previousSibling"
                        }
                    },
                    preFilter: {
                        ATTR: function(t) {
                            return t[1] = t[1].replace(_t, xt),
                            t[3] = (t[3] || t[4] || t[5] || "").replace(_t, xt),
                            "~=" === t[2] && (t[3] = " " + t[3] + " "),
                            t.slice(0, 4)
                        },
                        CHILD: function(t) {
                            return t[1] = t[1].toLowerCase(),
                            "nth" === t[1].slice(0, 3) ? (t[3] || e.error(t[0]),
                            t[4] = +(t[4] ? t[5] + (t[6] || 1) : 2 * ("even" === t[3] || "odd" === t[3])),
                            t[5] = +(t[7] + t[8] || "odd" === t[3])) : t[3] && e.error(t[0]),
                            t
                        },
                        PSEUDO: function(t) {
                            var e, i = !t[6] && t[2];
                            return ft.CHILD.test(t[0]) ? null : (t[3] ? t[2] = t[4] || t[5] || "" : i && ut.test(i) && (e = C(i, !0)) && (e = i.indexOf(")", i.length - e) - i.length) && (t[0] = t[0].slice(0, e),
                            t[2] = i.slice(0, e)),
                            t.slice(0, 3))
                        }
                    },
                    filter: {
                        TAG: function(t) {
                            var e = t.replace(_t, xt).toLowerCase();
                            return "*" === t ? function() {
                                return !0
                            }
                            : function(t) {
                                return t.nodeName && t.nodeName.toLowerCase() === e
                            }
                        },
                        CLASS: function(t) {
                            var e = H[t + " "];
                            return e || (e = new RegExp("(^|" + it + ")" + t + "(" + it + "|$)")) && H(t, function(t) {
                                return e.test("string" == typeof t.className && t.className || "undefined" != typeof t.getAttribute && t.getAttribute("class") || "")
                            })
                        },
                        ATTR: function(t, i, n) {
                            return function(r) {
                                var a = e.attr(r, t);
                                return null == a ? "!=" === i : !i || (a += "",
                                "=" === i ? a === n : "!=" === i ? a !== n : "^=" === i ? n && 0 === a.indexOf(n) : "*=" === i ? n && a.indexOf(n) > -1 : "$=" === i ? n && a.slice(-n.length) === n : "~=" === i ? (" " + a.replace(ot, " ") + " ").indexOf(n) > -1 : "|=" === i && (a === n || a.slice(0, n.length + 1) === n + "-"))
                            }
                        },
                        CHILD: function(t, e, i, n, r) {
                            var a = "nth" !== t.slice(0, 3)
                              , o = "last" !== t.slice(-4)
                              , s = "of-type" === e;
                            return 1 === n && 0 === r ? function(t) {
                                return !!t.parentNode
                            }
                            : function(e, i, l) {
                                var h, c, u, p, f, d, m = a !== o ? "nextSibling" : "previousSibling", g = e.parentNode, v = s && e.nodeName.toLowerCase(), y = !l && !s, _ = !1;
                                if (g) {
                                    if (a) {
                                        for (; m; ) {
                                            for (p = e; p = p[m]; )
                                                if (s ? p.nodeName.toLowerCase() === v : 1 === p.nodeType)
                                                    return !1;
                                            d = m = "only" === t && !d && "nextSibling"
                                        }
                                        return !0
                                    }
                                    if (d = [o ? g.firstChild : g.lastChild],
                                    o && y) {
                                        for (p = g,
                                        u = p[z] || (p[z] = {}),
                                        c = u[p.uniqueID] || (u[p.uniqueID] = {}),
                                        h = c[t] || [],
                                        f = h[0] === V && h[1],
                                        _ = f && h[2],
                                        p = f && g.childNodes[f]; p = ++f && p && p[m] || (_ = f = 0) || d.pop(); )
                                            if (1 === p.nodeType && ++_ && p === e) {
                                                c[t] = [V, f, _];
                                                break
                                            }
                                    } else if (y && (p = e,
                                    u = p[z] || (p[z] = {}),
                                    c = u[p.uniqueID] || (u[p.uniqueID] = {}),
                                    h = c[t] || [],
                                    f = h[0] === V && h[1],
                                    _ = f),
                                    _ === !1)
                                        for (; (p = ++f && p && p[m] || (_ = f = 0) || d.pop()) && ((s ? p.nodeName.toLowerCase() !== v : 1 !== p.nodeType) || !++_ || (y && (u = p[z] || (p[z] = {}),
                                        c = u[p.uniqueID] || (u[p.uniqueID] = {}),
                                        c[t] = [V, _]),
                                        p !== e)); )
                                            ;
                                    return _ -= r,
                                    _ === n || _ % n === 0 && _ / n >= 0
                                }
                            }
                        },
                        PSEUDO: function(t, i) {
                            var r, a = M.pseudos[t] || M.setFilters[t.toLowerCase()] || e.error("unsupported pseudo: " + t);
                            return a[z] ? a(i) : a.length > 1 ? (r = [t, t, "", i],
                            M.setFilters.hasOwnProperty(t.toLowerCase()) ? n(function(t, e) {
                                for (var n, r = a(t, i), o = r.length; o--; )
                                    n = tt(t, r[o]),
                                    t[n] = !(e[n] = r[o])
                            }) : function(t) {
                                return a(t, 0, r)
                            }
                            ) : a
                        }
                    },
                    pseudos: {
                        not: n(function(t) {
                            var e = []
                              , i = []
                              , r = A(t.replace(st, "$1"));
                            return r[z] ? n(function(t, e, i, n) {
                                for (var a, o = r(t, null, n, []), s = t.length; s--; )
                                    (a = o[s]) && (t[s] = !(e[s] = a))
                            }) : function(t, n, a) {
                                return e[0] = t,
                                r(e, null, a, i),
                                e[0] = null,
                                !i.pop()
                            }
                        }),
                        has: n(function(t) {
                            return function(i) {
                                return e(t, i).length > 0
                            }
                        }),
                        contains: n(function(t) {
                            return t = t.replace(_t, xt),
                            function(e) {
                                return (e.textContent || e.innerText || T(e)).indexOf(t) > -1
                            }
                        }),
                        lang: n(function(t) {
                            return pt.test(t || "") || e.error("unsupported lang: " + t),
                            t = t.replace(_t, xt).toLowerCase(),
                            function(e) {
                                var i;
                                do
                                    if (i = k ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang"))
                                        return i = i.toLowerCase(),
                                        i === t || 0 === i.indexOf(t + "-");
                                while ((e = e.parentNode) && 1 === e.nodeType);return !1
                            }
                        }),
                        target: function(e) {
                            var i = t.location && t.location.hash;
                            return i && i.slice(1) === e.id
                        },
                        root: function(t) {
                            return t === I
                        },
                        focus: function(t) {
                            return t === D.activeElement && (!D.hasFocus || D.hasFocus()) && !!(t.type || t.href || ~t.tabIndex)
                        },
                        enabled: h(!1),
                        disabled: h(!0),
                        checked: function(t) {
                            var e = t.nodeName.toLowerCase();
                            return "input" === e && !!t.checked || "option" === e && !!t.selected
                        },
                        selected: function(t) {
                            return t.parentNode && t.parentNode.selectedIndex,
                            t.selected === !0
                        },
                        empty: function(t) {
                            for (t = t.firstChild; t; t = t.nextSibling)
                                if (t.nodeType < 6)
                                    return !1;
                            return !0
                        },
                        parent: function(t) {
                            return !M.pseudos.empty(t)
                        },
                        header: function(t) {
                            return mt.test(t.nodeName)
                        },
                        input: function(t) {
                            return dt.test(t.nodeName)
                        },
                        button: function(t) {
                            var e = t.nodeName.toLowerCase();
                            return "input" === e && "button" === t.type || "button" === e
                        },
                        text: function(t) {
                            var e;
                            return "input" === t.nodeName.toLowerCase() && "text" === t.type && (null == (e = t.getAttribute("type")) || "text" === e.toLowerCase())
                        },
                        first: c(function() {
                            return [0]
                        }),
                        last: c(function(t, e) {
                            return [e - 1]
                        }),
                        eq: c(function(t, e, i) {
                            return [i < 0 ? i + e : i]
                        }),
                        even: c(function(t, e) {
                            for (var i = 0; i < e; i += 2)
                                t.push(i);
                            return t
                        }),
                        odd: c(function(t, e) {
                            for (var i = 1; i < e; i += 2)
                                t.push(i);
                            return t
                        }),
                        lt: c(function(t, e, i) {
                            for (var n = i < 0 ? i + e : i; --n >= 0; )
                                t.push(n);
                            return t
                        }),
                        gt: c(function(t, e, i) {
                            for (var n = i < 0 ? i + e : i; ++n < e; )
                                t.push(n);
                            return t
                        })
                    }
                },
                M.pseudos.nth = M.pseudos.eq;
                for (b in {
                    radio: !0,
                    checkbox: !0,
                    file: !0,
                    password: !0,
                    image: !0
                })
                    M.pseudos[b] = s(b);
                for (b in {
                    submit: !0,
                    reset: !0
                })
                    M.pseudos[b] = l(b);
                return p.prototype = M.filters = M.pseudos,
                M.setFilters = new p,
                C = e.tokenize = function(t, i) {
                    var n, r, a, o, s, l, h, c = W[t + " "];
                    if (c)
                        return i ? 0 : c.slice(0);
                    for (s = t,
                    l = [],
                    h = M.preFilter; s; ) {
                        n && !(r = lt.exec(s)) || (r && (s = s.slice(r[0].length) || s),
                        l.push(a = [])),
                        n = !1,
                        (r = ht.exec(s)) && (n = r.shift(),
                        a.push({
                            value: n,
                            type: r[0].replace(st, " ")
                        }),
                        s = s.slice(n.length));
                        for (o in M.filter)
                            !(r = ft[o].exec(s)) || h[o] && !(r = h[o](r)) || (n = r.shift(),
                            a.push({
                                value: n,
                                type: o,
                                matches: r
                            }),
                            s = s.slice(n.length));
                        if (!n)
                            break
                    }
                    return i ? s.length : s ? e.error(t) : W(t, l).slice(0)
                }
                ,
                A = e.compile = function(t, e) {
                    var i, n = [], r = [], a = X[t + " "];
                    if (!a) {
                        for (e || (e = C(t)),
                        i = e.length; i--; )
                            a = _(e[i]),
                            a[z] ? n.push(a) : r.push(a);
                        a = X(t, x(r, n)),
                        a.selector = t
                    }
                    return a
                }
                ,
                P = e.select = function(t, e, i, n) {
                    var r, a, o, s, l, h = "function" == typeof t && t, c = !n && C(t = h.selector || t);
                    if (i = i || [],
                    1 === c.length) {
                        if (a = c[0] = c[0].slice(0),
                        a.length > 2 && "ID" === (o = a[0]).type && w.getById && 9 === e.nodeType && k && M.relative[a[1].type]) {
                            if (e = (M.find.ID(o.matches[0].replace(_t, xt), e) || [])[0],
                            !e)
                                return i;
                            h && (e = e.parentNode),
                            t = t.slice(a.shift().value.length)
                        }
                        for (r = ft.needsContext.test(t) ? 0 : a.length; r-- && (o = a[r],
                        !M.relative[s = o.type]); )
                            if ((l = M.find[s]) && (n = l(o.matches[0].replace(_t, xt), yt.test(a[0].type) && u(e.parentNode) || e))) {
                                if (a.splice(r, 1),
                                t = n.length && f(a),
                                !t)
                                    return Q.apply(i, n),
                                    i;
                                break
                            }
                    }
                    return (h || A(t, c))(n, e, !k, i, !e || yt.test(t) && u(e.parentNode) || e),
                    i
                }
                ,
                w.sortStable = z.split("").sort(q).join("") === z,
                w.detectDuplicates = !!O,
                R(),
                w.sortDetached = r(function(t) {
                    return 1 & t.compareDocumentPosition(D.createElement("fieldset"))
                }),
                r(function(t) {
                    return t.innerHTML = "<a href='#'></a>",
                    "#" === t.firstChild.getAttribute("href")
                }) || a("type|href|height|width", function(t, e, i) {
                    if (!i)
                        return t.getAttribute(e, "type" === e.toLowerCase() ? 1 : 2)
                }),
                w.attributes && r(function(t) {
                    return t.innerHTML = "<input/>",
                    t.firstChild.setAttribute("value", ""),
                    "" === t.firstChild.getAttribute("value")
                }) || a("value", function(t, e, i) {
                    if (!i && "input" === t.nodeName.toLowerCase())
                        return t.defaultValue
                }),
                r(function(t) {
                    return null == t.getAttribute("disabled")
                }) || a(et, function(t, e, i) {
                    var n;
                    if (!i)
                        return t[e] === !0 ? e.toLowerCase() : (n = t.getAttributeNode(e)) && n.specified ? n.value : null
                }),
                e
            }(t);
            pt.find = vt,
            pt.expr = vt.selectors,
            pt.expr[":"] = pt.expr.pseudos,
            pt.uniqueSort = pt.unique = vt.uniqueSort,
            pt.text = vt.getText,
            pt.isXMLDoc = vt.isXML,
            pt.contains = vt.contains,
            pt.escapeSelector = vt.escape;
            var yt = function(t, e, i) {
                for (var n = [], r = void 0 !== i; (t = t[e]) && 9 !== t.nodeType; )
                    if (1 === t.nodeType) {
                        if (r && pt(t).is(i))
                            break;
                        n.push(t)
                    }
                return n
            }
              , _t = function(t, e) {
                for (var i = []; t; t = t.nextSibling)
                    1 === t.nodeType && t !== e && i.push(t);
                return i
            }
              , xt = pt.expr.match.needsContext
              , bt = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i
              , wt = /^.[^:#\[\.,]*$/;
            pt.filter = function(t, e, i) {
                var n = e[0];
                return i && (t = ":not(" + t + ")"),
                1 === e.length && 1 === n.nodeType ? pt.find.matchesSelector(n, t) ? [n] : [] : pt.find.matches(t, pt.grep(e, function(t) {
                    return 1 === t.nodeType
                }))
            }
            ,
            pt.fn.extend({
                find: function(t) {
                    var e, i, n = this.length, r = this;
                    if ("string" != typeof t)
                        return this.pushStack(pt(t).filter(function() {
                            for (e = 0; e < n; e++)
                                if (pt.contains(r[e], this))
                                    return !0
                        }));
                    for (i = this.pushStack([]),
                    e = 0; e < n; e++)
                        pt.find(t, r[e], i);
                    return n > 1 ? pt.uniqueSort(i) : i
                },
                filter: function(t) {
                    return this.pushStack(r(this, t || [], !1))
                },
                not: function(t) {
                    return this.pushStack(r(this, t || [], !0))
                },
                is: function(t) {
                    return !!r(this, "string" == typeof t && xt.test(t) ? pt(t) : t || [], !1).length
                }
            });
            var Mt, Tt = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, St = pt.fn.init = function(t, e, i) {
                var n, r;
                if (!t)
                    return this;
                if (i = i || Mt,
                "string" == typeof t) {
                    if (n = "<" === t[0] && ">" === t[t.length - 1] && t.length >= 3 ? [null, t, null] : Tt.exec(t),
                    !n || !n[1] && e)
                        return !e || e.jquery ? (e || i).find(t) : this.constructor(e).find(t);
                    if (n[1]) {
                        if (e = e instanceof pt ? e[0] : e,
                        pt.merge(this, pt.parseHTML(n[1], e && e.nodeType ? e.ownerDocument || e : J, !0)),
                        bt.test(n[1]) && pt.isPlainObject(e))
                            for (n in e)
                                pt.isFunction(this[n]) ? this[n](e[n]) : this.attr(n, e[n]);
                        return this
                    }
                    return r = J.getElementById(n[2]),
                    r && (this[0] = r,
                    this.length = 1),
                    this
                }
                return t.nodeType ? (this[0] = t,
                this.length = 1,
                this) : pt.isFunction(t) ? void 0 !== i.ready ? i.ready(t) : t(pt) : pt.makeArray(t, this)
            }
            ;
            St.prototype = pt.fn,
            Mt = pt(J);
            var Ct = /^(?:parents|prev(?:Until|All))/
              , At = {
                children: !0,
                contents: !0,
                next: !0,
                prev: !0
            };
            pt.fn.extend({
                has: function(t) {
                    var e = pt(t, this)
                      , i = e.length;
                    return this.filter(function() {
                        for (var t = 0; t < i; t++)
                            if (pt.contains(this, e[t]))
                                return !0
                    })
                },
                closest: function(t, e) {
                    var i, n = 0, r = this.length, a = [], o = "string" != typeof t && pt(t);
                    if (!xt.test(t))
                        for (; n < r; n++)
                            for (i = this[n]; i && i !== e; i = i.parentNode)
                                if (i.nodeType < 11 && (o ? o.index(i) > -1 : 1 === i.nodeType && pt.find.matchesSelector(i, t))) {
                                    a.push(i);
                                    break
                                }
                    return this.pushStack(a.length > 1 ? pt.uniqueSort(a) : a)
                },
                index: function(t) {
                    return t ? "string" == typeof t ? rt.call(pt(t), this[0]) : rt.call(this, t.jquery ? t[0] : t) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
                },
                add: function(t, e) {
                    return this.pushStack(pt.uniqueSort(pt.merge(this.get(), pt(t, e))))
                },
                addBack: function(t) {
                    return this.add(null == t ? this.prevObject : this.prevObject.filter(t))
                }
            }),
            pt.each({
                parent: function(t) {
                    var e = t.parentNode;
                    return e && 11 !== e.nodeType ? e : null
                },
                parents: function(t) {
                    return yt(t, "parentNode")
                },
                parentsUntil: function(t, e, i) {
                    return yt(t, "parentNode", i)
                },
                next: function(t) {
                    return a(t, "nextSibling")
                },
                prev: function(t) {
                    return a(t, "previousSibling")
                },
                nextAll: function(t) {
                    return yt(t, "nextSibling")
                },
                prevAll: function(t) {
                    return yt(t, "previousSibling")
                },
                nextUntil: function(t, e, i) {
                    return yt(t, "nextSibling", i)
                },
                prevUntil: function(t, e, i) {
                    return yt(t, "previousSibling", i)
                },
                siblings: function(t) {
                    return _t((t.parentNode || {}).firstChild, t)
                },
                children: function(t) {
                    return _t(t.firstChild)
                },
                contents: function(t) {
                    return t.contentDocument || pt.merge([], t.childNodes)
                }
            }, function(t, e) {
                pt.fn[t] = function(i, n) {
                    var r = pt.map(this, e, i);
                    return "Until" !== t.slice(-5) && (n = i),
                    n && "string" == typeof n && (r = pt.filter(n, r)),
                    this.length > 1 && (At[t] || pt.uniqueSort(r),
                    Ct.test(t) && r.reverse()),
                    this.pushStack(r)
                }
            });
            var Pt = /\S+/g;
            pt.Callbacks = function(t) {
                t = "string" == typeof t ? o(t) : pt.extend({}, t);
                var e, i, n, r, a = [], s = [], l = -1, h = function() {
                    for (r = t.once,
                    n = e = !0; s.length; l = -1)
                        for (i = s.shift(); ++l < a.length; )
                            a[l].apply(i[0], i[1]) === !1 && t.stopOnFalse && (l = a.length,
                            i = !1);
                    t.memory || (i = !1),
                    e = !1,
                    r && (a = i ? [] : "")
                }, c = {
                    add: function() {
                        return a && (i && !e && (l = a.length - 1,
                        s.push(i)),
                        function n(e) {
                            pt.each(e, function(e, i) {
                                pt.isFunction(i) ? t.unique && c.has(i) || a.push(i) : i && i.length && "string" !== pt.type(i) && n(i)
                            })
                        }(arguments),
                        i && !e && h()),
                        this
                    },
                    remove: function() {
                        return pt.each(arguments, function(t, e) {
                            for (var i; (i = pt.inArray(e, a, i)) > -1; )
                                a.splice(i, 1),
                                i <= l && l--
                        }),
                        this
                    },
                    has: function(t) {
                        return t ? pt.inArray(t, a) > -1 : a.length > 0
                    },
                    empty: function() {
                        return a && (a = []),
                        this
                    },
                    disable: function() {
                        return r = s = [],
                        a = i = "",
                        this
                    },
                    disabled: function() {
                        return !a
                    },
                    lock: function() {
                        return r = s = [],
                        i || e || (a = i = ""),
                        this
                    },
                    locked: function() {
                        return !!r
                    },
                    fireWith: function(t, i) {
                        return r || (i = i || [],
                        i = [t, i.slice ? i.slice() : i],
                        s.push(i),
                        e || h()),
                        this
                    },
                    fire: function() {
                        return c.fireWith(this, arguments),
                        this
                    },
                    fired: function() {
                        return !!n
                    }
                };
                return c
            }
            ,
            pt.extend({
                Deferred: function(e) {
                    var i = [["notify", "progress", pt.Callbacks("memory"), pt.Callbacks("memory"), 2], ["resolve", "done", pt.Callbacks("once memory"), pt.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", pt.Callbacks("once memory"), pt.Callbacks("once memory"), 1, "rejected"]]
                      , n = "pending"
                      , r = {
                        state: function() {
                            return n
                        },
                        always: function() {
                            return a.done(arguments).fail(arguments),
                            this
                        },
                        "catch": function(t) {
                            return r.then(null, t)
                        },
                        pipe: function() {
                            var t = arguments;
                            return pt.Deferred(function(e) {
                                pt.each(i, function(i, n) {
                                    var r = pt.isFunction(t[n[4]]) && t[n[4]];
                                    a[n[1]](function() {
                                        var t = r && r.apply(this, arguments);
                                        t && pt.isFunction(t.promise) ? t.promise().progress(e.notify).done(e.resolve).fail(e.reject) : e[n[0] + "With"](this, r ? [t] : arguments)
                                    })
                                }),
                                t = null
                            }).promise()
                        },
                        then: function(e, n, r) {
                            function a(e, i, n, r) {
                                return function() {
                                    var h = this
                                      , c = arguments
                                      , u = function() {
                                        var t, u;
                                        if (!(e < o)) {
                                            if (t = n.apply(h, c),
                                            t === i.promise())
                                                throw new TypeError("Thenable self-resolution");
                                            u = t && ("object" == typeof t || "function" == typeof t) && t.then,
                                            pt.isFunction(u) ? r ? u.call(t, a(o, i, s, r), a(o, i, l, r)) : (o++,
                                            u.call(t, a(o, i, s, r), a(o, i, l, r), a(o, i, s, i.notifyWith))) : (n !== s && (h = void 0,
                                            c = [t]),
                                            (r || i.resolveWith)(h, c))
                                        }
                                    }
                                      , p = r ? u : function() {
                                        try {
                                            u()
                                        } catch (t) {
                                            pt.Deferred.exceptionHook && pt.Deferred.exceptionHook(t, p.stackTrace),
                                            e + 1 >= o && (n !== l && (h = void 0,
                                            c = [t]),
                                            i.rejectWith(h, c))
                                        }
                                    }
                                    ;
                                    e ? p() : (pt.Deferred.getStackHook && (p.stackTrace = pt.Deferred.getStackHook()),
                                    t.setTimeout(p))
                                }
                            }
                            var o = 0;
                            return pt.Deferred(function(t) {
                                i[0][3].add(a(0, t, pt.isFunction(r) ? r : s, t.notifyWith)),
                                i[1][3].add(a(0, t, pt.isFunction(e) ? e : s)),
                                i[2][3].add(a(0, t, pt.isFunction(n) ? n : l))
                            }).promise()
                        },
                        promise: function(t) {
                            return null != t ? pt.extend(t, r) : r
                        }
                    }
                      , a = {};
                    return pt.each(i, function(t, e) {
                        var o = e[2]
                          , s = e[5];
                        r[e[1]] = o.add,
                        s && o.add(function() {
                            n = s
                        }, i[3 - t][2].disable, i[0][2].lock),
                        o.add(e[3].fire),
                        a[e[0]] = function() {
                            return a[e[0] + "With"](this === a ? void 0 : this, arguments),
                            this
                        }
                        ,
                        a[e[0] + "With"] = o.fireWith
                    }),
                    r.promise(a),
                    e && e.call(a, a),
                    a
                },
                when: function(t) {
                    var e = arguments.length
                      , i = e
                      , n = Array(i)
                      , r = et.call(arguments)
                      , a = pt.Deferred()
                      , o = function(t) {
                        return function(i) {
                            n[t] = this,
                            r[t] = arguments.length > 1 ? et.call(arguments) : i,
                            --e || a.resolveWith(n, r)
                        }
                    };
                    if (e <= 1 && (h(t, a.done(o(i)).resolve, a.reject),
                    "pending" === a.state() || pt.isFunction(r[i] && r[i].then)))
                        return a.then();
                    for (; i--; )
                        h(r[i], o(i), a.reject);
                    return a.promise()
                }
            });
            var Et = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
            pt.Deferred.exceptionHook = function(e, i) {
                t.console && t.console.warn && e && Et.test(e.name)
            }
            ,
            pt.readyException = function(e) {
                t.setTimeout(function() {
                    throw e
                })
            }
            ;
            var Lt = pt.Deferred();
            pt.fn.ready = function(t) {
                return Lt.then(t)["catch"](function(t) {
                    pt.readyException(t)
                }),
                this
            }
            ,
            pt.extend({
                isReady: !1,
                readyWait: 1,
                holdReady: function(t) {
                    t ? pt.readyWait++ : pt.ready(!0)
                },
                ready: function(t) {
                    (t === !0 ? --pt.readyWait : pt.isReady) || (pt.isReady = !0,
                    t !== !0 && --pt.readyWait > 0 || Lt.resolveWith(J, [pt]))
                }
            }),
            pt.ready.then = Lt.then,
            "complete" === J.readyState || "loading" !== J.readyState && !J.documentElement.doScroll ? t.setTimeout(pt.ready) : (J.addEventListener("DOMContentLoaded", c),
            t.addEventListener("load", c));
            var Ot = function(t, e, i, n, r, a, o) {
                var s = 0
                  , l = t.length
                  , h = null == i;
                if ("object" === pt.type(i)) {
                    r = !0;
                    for (s in i)
                        Ot(t, e, s, i[s], !0, a, o)
                } else if (void 0 !== n && (r = !0,
                pt.isFunction(n) || (o = !0),
                h && (o ? (e.call(t, n),
                e = null) : (h = e,
                e = function(t, e, i) {
                    return h.call(pt(t), i)
                }
                )),
                e))
                    for (; s < l; s++)
                        e(t[s], i, o ? n : n.call(t[s], s, e(t[s], i)));
                return r ? t : h ? e.call(t) : l ? e(t[0], i) : a
            }
              , Rt = function(t) {
                return 1 === t.nodeType || 9 === t.nodeType || !+t.nodeType
            };
            u.uid = 1,
            u.prototype = {
                cache: function(t) {
                    var e = t[this.expando];
                    return e || (e = {},
                    Rt(t) && (t.nodeType ? t[this.expando] = e : Object.defineProperty(t, this.expando, {
                        value: e,
                        configurable: !0
                    }))),
                    e
                },
                set: function(t, e, i) {
                    var n, r = this.cache(t);
                    if ("string" == typeof e)
                        r[pt.camelCase(e)] = i;
                    else
                        for (n in e)
                            r[pt.camelCase(n)] = e[n];
                    return r
                },
                get: function(t, e) {
                    return void 0 === e ? this.cache(t) : t[this.expando] && t[this.expando][pt.camelCase(e)]
                },
                access: function(t, e, i) {
                    return void 0 === e || e && "string" == typeof e && void 0 === i ? this.get(t, e) : (this.set(t, e, i),
                    void 0 !== i ? i : e)
                },
                remove: function(t, e) {
                    var i, n = t[this.expando];
                    if (void 0 !== n) {
                        if (void 0 !== e) {
                            pt.isArray(e) ? e = e.map(pt.camelCase) : (e = pt.camelCase(e),
                            e = e in n ? [e] : e.match(Pt) || []),
                            i = e.length;
                            for (; i--; )
                                delete n[e[i]]
                        }
                        (void 0 === e || pt.isEmptyObject(n)) && (t.nodeType ? t[this.expando] = void 0 : delete t[this.expando])
                    }
                },
                hasData: function(t) {
                    var e = t[this.expando];
                    return void 0 !== e && !pt.isEmptyObject(e)
                }
            };
            var Dt = new u
              , It = new u
              , kt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
              , Nt = /[A-Z]/g;
            pt.extend({
                hasData: function(t) {
                    return It.hasData(t) || Dt.hasData(t)
                },
                data: function(t, e, i) {
                    return It.access(t, e, i)
                },
                removeData: function(t, e) {
                    It.remove(t, e)
                },
                _data: function(t, e, i) {
                    return Dt.access(t, e, i)
                },
                _removeData: function(t, e) {
                    Dt.remove(t, e)
                }
            }),
            pt.fn.extend({
                data: function(t, e) {
                    var i, n, r, a = this[0], o = a && a.attributes;
                    if (void 0 === t) {
                        if (this.length && (r = It.get(a),
                        1 === a.nodeType && !Dt.get(a, "hasDataAttrs"))) {
                            for (i = o.length; i--; )
                                o[i] && (n = o[i].name,
                                0 === n.indexOf("data-") && (n = pt.camelCase(n.slice(5)),
                                p(a, n, r[n])));
                            Dt.set(a, "hasDataAttrs", !0)
                        }
                        return r
                    }
                    return "object" == typeof t ? this.each(function() {
                        It.set(this, t)
                    }) : Ot(this, function(e) {
                        var i;
                        if (a && void 0 === e) {
                            if (i = It.get(a, t),
                            void 0 !== i)
                                return i;
                            if (i = p(a, t),
                            void 0 !== i)
                                return i
                        } else
                            this.each(function() {
                                It.set(this, t, e)
                            })
                    }, null, e, arguments.length > 1, null, !0)
                },
                removeData: function(t) {
                    return this.each(function() {
                        It.remove(this, t)
                    })
                }
            }),
            pt.extend({
                queue: function(t, e, i) {
                    var n;
                    if (t)
                        return e = (e || "fx") + "queue",
                        n = Dt.get(t, e),
                        i && (!n || pt.isArray(i) ? n = Dt.access(t, e, pt.makeArray(i)) : n.push(i)),
                        n || []
                },
                dequeue: function(t, e) {
                    e = e || "fx";
                    var i = pt.queue(t, e)
                      , n = i.length
                      , r = i.shift()
                      , a = pt._queueHooks(t, e)
                      , o = function() {
                        pt.dequeue(t, e)
                    };
                    "inprogress" === r && (r = i.shift(),
                    n--),
                    r && ("fx" === e && i.unshift("inprogress"),
                    delete a.stop,
                    r.call(t, o, a)),
                    !n && a && a.empty.fire()
                },
                _queueHooks: function(t, e) {
                    var i = e + "queueHooks";
                    return Dt.get(t, i) || Dt.access(t, i, {
                        empty: pt.Callbacks("once memory").add(function() {
                            Dt.remove(t, [e + "queue", i])
                        })
                    })
                }
            }),
            pt.fn.extend({
                queue: function(t, e) {
                    var i = 2;
                    return "string" != typeof t && (e = t,
                    t = "fx",
                    i--),
                    arguments.length < i ? pt.queue(this[0], t) : void 0 === e ? this : this.each(function() {
                        var i = pt.queue(this, t, e);
                        pt._queueHooks(this, t),
                        "fx" === t && "inprogress" !== i[0] && pt.dequeue(this, t)
                    })
                },
                dequeue: function(t) {
                    return this.each(function() {
                        pt.dequeue(this, t)
                    })
                },
                clearQueue: function(t) {
                    return this.queue(t || "fx", [])
                },
                promise: function(t, e) {
                    var i, n = 1, r = pt.Deferred(), a = this, o = this.length, s = function() {
                        --n || r.resolveWith(a, [a])
                    };
                    for ("string" != typeof t && (e = t,
                    t = void 0),
                    t = t || "fx"; o--; )
                        i = Dt.get(a[o], t + "queueHooks"),
                        i && i.empty && (n++,
                        i.empty.add(s));
                    return s(),
                    r.promise(e)
                }
            });
            var Ft = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
              , Bt = new RegExp("^(?:([+-])=|)(" + Ft + ")([a-z%]*)$","i")
              , Ut = ["Top", "Right", "Bottom", "Left"]
              , zt = function(t, e) {
                return t = e || t,
                "none" === t.style.display || "" === t.style.display && pt.contains(t.ownerDocument, t) && "none" === pt.css(t, "display")
            }
              , jt = function(t, e, i, n) {
                var r, a, o = {};
                for (a in e)
                    o[a] = t.style[a],
                    t.style[a] = e[a];
                r = i.apply(t, n || []);
                for (a in e)
                    t.style[a] = o[a];
                return r
            }
              , Vt = {};
            pt.fn.extend({
                show: function() {
                    return m(this, !0)
                },
                hide: function() {
                    return m(this)
                },
                toggle: function(t) {
                    return "boolean" == typeof t ? t ? this.show() : this.hide() : this.each(function() {
                        zt(this) ? pt(this).show() : pt(this).hide()
                    })
                }
            });
            var Gt = /^(?:checkbox|radio)$/i
              , Ht = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i
              , Wt = /^$|\/(?:java|ecma)script/i
              , Xt = {
                option: [1, "<select multiple='multiple'>", "</select>"],
                thead: [1, "<table>", "</table>"],
                col: [2, "<table><colgroup>", "</colgroup></table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                _default: [0, "", ""]
            };
            Xt.optgroup = Xt.option,
            Xt.tbody = Xt.tfoot = Xt.colgroup = Xt.caption = Xt.thead,
            Xt.th = Xt.td;
            var qt = /<|&#?\w+;/;
            !function() {
                var t = J.createDocumentFragment()
                  , e = t.appendChild(J.createElement("div"))
                  , i = J.createElement("input");
                i.setAttribute("type", "radio"),
                i.setAttribute("checked", "checked"),
                i.setAttribute("name", "t"),
                e.appendChild(i),
                ct.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked,
                e.innerHTML = "<textarea>x</textarea>",
                ct.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue
            }();
            var Yt = J.documentElement
              , Zt = /^key/
              , $t = /^(?:mouse|pointer|contextmenu|drag|drop)|click/
              , Kt = /^([^.]*)(?:\.(.+)|)/;
            pt.event = {
                global: {},
                add: function(t, e, i, n, r) {
                    var a, o, s, l, h, c, u, p, f, d, m, g = Dt.get(t);
                    if (g)
                        for (i.handler && (a = i,
                        i = a.handler,
                        r = a.selector),
                        r && pt.find.matchesSelector(Yt, r),
                        i.guid || (i.guid = pt.guid++),
                        (l = g.events) || (l = g.events = {}),
                        (o = g.handle) || (o = g.handle = function(e) {
                            return "undefined" != typeof pt && pt.event.triggered !== e.type ? pt.event.dispatch.apply(t, arguments) : void 0
                        }
                        ),
                        e = (e || "").match(Pt) || [""],
                        h = e.length; h--; )
                            s = Kt.exec(e[h]) || [],
                            f = m = s[1],
                            d = (s[2] || "").split(".").sort(),
                            f && (u = pt.event.special[f] || {},
                            f = (r ? u.delegateType : u.bindType) || f,
                            u = pt.event.special[f] || {},
                            c = pt.extend({
                                type: f,
                                origType: m,
                                data: n,
                                handler: i,
                                guid: i.guid,
                                selector: r,
                                needsContext: r && pt.expr.match.needsContext.test(r),
                                namespace: d.join(".")
                            }, a),
                            (p = l[f]) || (p = l[f] = [],
                            p.delegateCount = 0,
                            u.setup && u.setup.call(t, n, d, o) !== !1 || t.addEventListener && t.addEventListener(f, o)),
                            u.add && (u.add.call(t, c),
                            c.handler.guid || (c.handler.guid = i.guid)),
                            r ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                            pt.event.global[f] = !0)
                },
                remove: function(t, e, i, n, r) {
                    var a, o, s, l, h, c, u, p, f, d, m, g = Dt.hasData(t) && Dt.get(t);
                    if (g && (l = g.events)) {
                        for (e = (e || "").match(Pt) || [""],
                        h = e.length; h--; )
                            if (s = Kt.exec(e[h]) || [],
                            f = m = s[1],
                            d = (s[2] || "").split(".").sort(),
                            f) {
                                for (u = pt.event.special[f] || {},
                                f = (n ? u.delegateType : u.bindType) || f,
                                p = l[f] || [],
                                s = s[2] && new RegExp("(^|\\.)" + d.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                                o = a = p.length; a--; )
                                    c = p[a],
                                    !r && m !== c.origType || i && i.guid !== c.guid || s && !s.test(c.namespace) || n && n !== c.selector && ("**" !== n || !c.selector) || (p.splice(a, 1),
                                    c.selector && p.delegateCount--,
                                    u.remove && u.remove.call(t, c));
                                o && !p.length && (u.teardown && u.teardown.call(t, d, g.handle) !== !1 || pt.removeEvent(t, f, g.handle),
                                delete l[f])
                            } else
                                for (f in l)
                                    pt.event.remove(t, f + e[h], i, n, !0);
                        pt.isEmptyObject(l) && Dt.remove(t, "handle events")
                    }
                },
                dispatch: function(t) {
                    var e, i, n, r, a, o, s = pt.event.fix(t), l = new Array(arguments.length), h = (Dt.get(this, "events") || {})[s.type] || [], c = pt.event.special[s.type] || {};
                    for (l[0] = s,
                    e = 1; e < arguments.length; e++)
                        l[e] = arguments[e];
                    if (s.delegateTarget = this,
                    !c.preDispatch || c.preDispatch.call(this, s) !== !1) {
                        for (o = pt.event.handlers.call(this, s, h),
                        e = 0; (r = o[e++]) && !s.isPropagationStopped(); )
                            for (s.currentTarget = r.elem,
                            i = 0; (a = r.handlers[i++]) && !s.isImmediatePropagationStopped(); )
                                s.rnamespace && !s.rnamespace.test(a.namespace) || (s.handleObj = a,
                                s.data = a.data,
                                n = ((pt.event.special[a.origType] || {}).handle || a.handler).apply(r.elem, l),
                                void 0 !== n && (s.result = n) === !1 && (s.preventDefault(),
                                s.stopPropagation()));
                        return c.postDispatch && c.postDispatch.call(this, s),
                        s.result
                    }
                },
                handlers: function(t, e) {
                    var i, n, r, a, o = [], s = e.delegateCount, l = t.target;
                    if (s && l.nodeType && ("click" !== t.type || isNaN(t.button) || t.button < 1))
                        for (; l !== this; l = l.parentNode || this)
                            if (1 === l.nodeType && (l.disabled !== !0 || "click" !== t.type)) {
                                for (n = [],
                                i = 0; i < s; i++)
                                    a = e[i],
                                    r = a.selector + " ",
                                    void 0 === n[r] && (n[r] = a.needsContext ? pt(r, this).index(l) > -1 : pt.find(r, this, null, [l]).length),
                                    n[r] && n.push(a);
                                n.length && o.push({
                                    elem: l,
                                    handlers: n
                                })
                            }
                    return s < e.length && o.push({
                        elem: this,
                        handlers: e.slice(s)
                    }),
                    o
                },
                addProp: function(t, e) {
                    Object.defineProperty(pt.Event.prototype, t, {
                        enumerable: !0,
                        configurable: !0,
                        get: pt.isFunction(e) ? function() {
                            if (this.originalEvent)
                                return e(this.originalEvent)
                        }
                        : function() {
                            if (this.originalEvent)
                                return this.originalEvent[t]
                        }
                        ,
                        set: function(e) {
                            Object.defineProperty(this, t, {
                                enumerable: !0,
                                configurable: !0,
                                writable: !0,
                                value: e
                            })
                        }
                    })
                },
                fix: function(t) {
                    return t[pt.expando] ? t : new pt.Event(t)
                },
                special: {
                    load: {
                        noBubble: !0
                    },
                    focus: {
                        trigger: function() {
                            if (this !== b() && this.focus)
                                return this.focus(),
                                !1
                        },
                        delegateType: "focusin"
                    },
                    blur: {
                        trigger: function() {
                            if (this === b() && this.blur)
                                return this.blur(),
                                !1
                        },
                        delegateType: "focusout"
                    },
                    click: {
                        trigger: function() {
                            if ("checkbox" === this.type && this.click && pt.nodeName(this, "input"))
                                return this.click(),
                                !1
                        },
                        _default: function(t) {
                            return pt.nodeName(t.target, "a")
                        }
                    },
                    beforeunload: {
                        postDispatch: function(t) {
                            void 0 !== t.result && t.originalEvent && (t.originalEvent.returnValue = t.result)
                        }
                    }
                }
            },
            pt.removeEvent = function(t, e, i) {
                t.removeEventListener && t.removeEventListener(e, i)
            }
            ,
            pt.Event = function(t, e) {
                return this instanceof pt.Event ? (t && t.type ? (this.originalEvent = t,
                this.type = t.type,
                this.isDefaultPrevented = t.defaultPrevented || void 0 === t.defaultPrevented && t.returnValue === !1 ? _ : x,
                this.target = t.target && 3 === t.target.nodeType ? t.target.parentNode : t.target,
                this.currentTarget = t.currentTarget,
                this.relatedTarget = t.relatedTarget) : this.type = t,
                e && pt.extend(this, e),
                this.timeStamp = t && t.timeStamp || pt.now(),
                void (this[pt.expando] = !0)) : new pt.Event(t,e)
            }
            ,
            pt.Event.prototype = {
                constructor: pt.Event,
                isDefaultPrevented: x,
                isPropagationStopped: x,
                isImmediatePropagationStopped: x,
                isSimulated: !1,
                preventDefault: function() {
                    var t = this.originalEvent;
                    this.isDefaultPrevented = _,
                    t && !this.isSimulated && t.preventDefault()
                },
                stopPropagation: function() {
                    var t = this.originalEvent;
                    this.isPropagationStopped = _,
                    t && !this.isSimulated && t.stopPropagation()
                },
                stopImmediatePropagation: function() {
                    var t = this.originalEvent;
                    this.isImmediatePropagationStopped = _,
                    t && !this.isSimulated && t.stopImmediatePropagation(),
                    this.stopPropagation()
                }
            },
            pt.each({
                altKey: !0,
                bubbles: !0,
                cancelable: !0,
                changedTouches: !0,
                ctrlKey: !0,
                detail: !0,
                eventPhase: !0,
                metaKey: !0,
                pageX: !0,
                pageY: !0,
                shiftKey: !0,
                view: !0,
                "char": !0,
                charCode: !0,
                key: !0,
                keyCode: !0,
                button: !0,
                buttons: !0,
                clientX: !0,
                clientY: !0,
                offsetX: !0,
                offsetY: !0,
                pointerId: !0,
                pointerType: !0,
                screenX: !0,
                screenY: !0,
                targetTouches: !0,
                toElement: !0,
                touches: !0,
                which: function(t) {
                    var e = t.button;
                    return null == t.which && Zt.test(t.type) ? null != t.charCode ? t.charCode : t.keyCode : !t.which && void 0 !== e && $t.test(t.type) ? 1 & e ? 1 : 2 & e ? 3 : 4 & e ? 2 : 0 : t.which
                }
            }, pt.event.addProp),
            pt.each({
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout"
            }, function(t, e) {
                pt.event.special[t] = {
                    delegateType: e,
                    bindType: e,
                    handle: function(t) {
                        var i, n = this, r = t.relatedTarget, a = t.handleObj;
                        return r && (r === n || pt.contains(n, r)) || (t.type = a.origType,
                        i = a.handler.apply(this, arguments),
                        t.type = e),
                        i
                    }
                }
            }),
            pt.fn.extend({
                on: function(t, e, i, n) {
                    return w(this, t, e, i, n)
                },
                one: function(t, e, i, n) {
                    return w(this, t, e, i, n, 1)
                },
                off: function(t, e, i) {
                    var n, r;
                    if (t && t.preventDefault && t.handleObj)
                        return n = t.handleObj,
                        pt(t.delegateTarget).off(n.namespace ? n.origType + "." + n.namespace : n.origType, n.selector, n.handler),
                        this;
                    if ("object" == typeof t) {
                        for (r in t)
                            this.off(r, e, t[r]);
                        return this
                    }
                    return e !== !1 && "function" != typeof e || (i = e,
                    e = void 0),
                    i === !1 && (i = x),
                    this.each(function() {
                        pt.event.remove(this, t, i, e)
                    })
                }
            });
            var Qt = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi
              , Jt = /<script|<style|<link/i
              , te = /checked\s*(?:[^=]|=\s*.checked.)/i
              , ee = /^true\/(.*)/
              , ie = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
            pt.extend({
                htmlPrefilter: function(t) {
                    return t.replace(Qt, "<$1></$2>")
                },
                clone: function(t, e, i) {
                    var n, r, a, o, s = t.cloneNode(!0), l = pt.contains(t.ownerDocument, t);
                    if (!(ct.noCloneChecked || 1 !== t.nodeType && 11 !== t.nodeType || pt.isXMLDoc(t)))
                        for (o = g(s),
                        a = g(t),
                        n = 0,
                        r = a.length; n < r; n++)
                            A(a[n], o[n]);
                    if (e)
                        if (i)
                            for (a = a || g(t),
                            o = o || g(s),
                            n = 0,
                            r = a.length; n < r; n++)
                                C(a[n], o[n]);
                        else
                            C(t, s);
                    return o = g(s, "script"),
                    o.length > 0 && v(o, !l && g(t, "script")),
                    s
                },
                cleanData: function(t) {
                    for (var e, i, n, r = pt.event.special, a = 0; void 0 !== (i = t[a]); a++)
                        if (Rt(i)) {
                            if (e = i[Dt.expando]) {
                                if (e.events)
                                    for (n in e.events)
                                        r[n] ? pt.event.remove(i, n) : pt.removeEvent(i, n, e.handle);
                                i[Dt.expando] = void 0
                            }
                            i[It.expando] && (i[It.expando] = void 0)
                        }
                }
            }),
            pt.fn.extend({
                detach: function(t) {
                    return E(this, t, !0)
                },
                remove: function(t) {
                    return E(this, t)
                },
                text: function(t) {
                    return Ot(this, function(t) {
                        return void 0 === t ? pt.text(this) : this.empty().each(function() {
                            1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = t)
                        })
                    }, null, t, arguments.length)
                },
                append: function() {
                    return P(this, arguments, function(t) {
                        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                            var e = M(this, t);
                            e.appendChild(t)
                        }
                    })
                },
                prepend: function() {
                    return P(this, arguments, function(t) {
                        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                            var e = M(this, t);
                            e.insertBefore(t, e.firstChild)
                        }
                    })
                },
                before: function() {
                    return P(this, arguments, function(t) {
                        this.parentNode && this.parentNode.insertBefore(t, this)
                    })
                },
                after: function() {
                    return P(this, arguments, function(t) {
                        this.parentNode && this.parentNode.insertBefore(t, this.nextSibling)
                    })
                },
                empty: function() {
                    for (var t, e = 0; null != (t = this[e]); e++)
                        1 === t.nodeType && (pt.cleanData(g(t, !1)),
                        t.textContent = "");
                    return this
                },
                clone: function(t, e) {
                    return t = null != t && t,
                    e = null == e ? t : e,
                    this.map(function() {
                        return pt.clone(this, t, e)
                    })
                },
                html: function(t) {
                    return Ot(this, function(t) {
                        var e = this[0] || {}
                          , i = 0
                          , n = this.length;
                        if (void 0 === t && 1 === e.nodeType)
                            return e.innerHTML;
                        if ("string" == typeof t && !Jt.test(t) && !Xt[(Ht.exec(t) || ["", ""])[1].toLowerCase()]) {
                            t = pt.htmlPrefilter(t);
                            try {
                                for (; i < n; i++)
                                    e = this[i] || {},
                                    1 === e.nodeType && (pt.cleanData(g(e, !1)),
                                    e.innerHTML = t);
                                e = 0
                            } catch (r) {}
                        }
                        e && this.empty().append(t)
                    }, null, t, arguments.length)
                },
                replaceWith: function() {
                    var t = [];
                    return P(this, arguments, function(e) {
                        var i = this.parentNode;
                        pt.inArray(this, t) < 0 && (pt.cleanData(g(this)),
                        i && i.replaceChild(e, this))
                    }, t)
                }
            }),
            pt.each({
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            }, function(t, e) {
                pt.fn[t] = function(t) {
                    for (var i, n = [], r = pt(t), a = r.length - 1, o = 0; o <= a; o++)
                        i = o === a ? this : this.clone(!0),
                        pt(r[o])[e](i),
                        nt.apply(n, i.get());
                    return this.pushStack(n)
                }
            });
            var ne = /^margin/
              , re = new RegExp("^(" + Ft + ")(?!px)[a-z%]+$","i")
              , ae = function(e) {
                var i = e.ownerDocument.defaultView;
                return i && i.opener || (i = t),
                i.getComputedStyle(e)
            };
            !function() {
                function e() {
                    if (s) {
                        s.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",
                        s.innerHTML = "",
                        Yt.appendChild(o);
                        var e = t.getComputedStyle(s);
                        i = "1%" !== e.top,
                        a = "2px" === e.marginLeft,
                        n = "4px" === e.width,
                        s.style.marginRight = "50%",
                        r = "4px" === e.marginRight,
                        Yt.removeChild(o),
                        s = null
                    }
                }
                var i, n, r, a, o = J.createElement("div"), s = J.createElement("div");
                s.style && (s.style.backgroundClip = "content-box",
                s.cloneNode(!0).style.backgroundClip = "",
                ct.clearCloneStyle = "content-box" === s.style.backgroundClip,
                o.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",
                o.appendChild(s),
                pt.extend(ct, {
                    pixelPosition: function() {
                        return e(),
                        i
                    },
                    boxSizingReliable: function() {
                        return e(),
                        n
                    },
                    pixelMarginRight: function() {
                        return e(),
                        r
                    },
                    reliableMarginLeft: function() {
                        return e(),
                        a
                    }
                }))
            }();
            var oe = /^(none|table(?!-c[ea]).+)/
              , se = {
                position: "absolute",
                visibility: "hidden",
                display: "block"
            }
              , le = {
                letterSpacing: "0",
                fontWeight: "400"
            }
              , he = ["Webkit", "Moz", "ms"]
              , ce = J.createElement("div").style;
            pt.extend({
                cssHooks: {
                    opacity: {
                        get: function(t, e) {
                            if (e) {
                                var i = L(t, "opacity");
                                return "" === i ? "1" : i
                            }
                        }
                    }
                },
                cssNumber: {
                    animationIterationCount: !0,
                    columnCount: !0,
                    fillOpacity: !0,
                    flexGrow: !0,
                    flexShrink: !0,
                    fontWeight: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0
                },
                cssProps: {
                    "float": "cssFloat"
                },
                style: function(t, e, i, n) {
                    if (t && 3 !== t.nodeType && 8 !== t.nodeType && t.style) {
                        var r, a, o, s = pt.camelCase(e), l = t.style;
                        return e = pt.cssProps[s] || (pt.cssProps[s] = R(s) || s),
                        o = pt.cssHooks[e] || pt.cssHooks[s],
                        void 0 === i ? o && "get"in o && void 0 !== (r = o.get(t, !1, n)) ? r : l[e] : (a = typeof i,
                        "string" === a && (r = Bt.exec(i)) && r[1] && (i = f(t, e, r),
                        a = "number"),
                        null != i && i === i && ("number" === a && (i += r && r[3] || (pt.cssNumber[s] ? "" : "px")),
                        ct.clearCloneStyle || "" !== i || 0 !== e.indexOf("background") || (l[e] = "inherit"),
                        o && "set"in o && void 0 === (i = o.set(t, i, n)) || (l[e] = i)),
                        void 0)
                    }
                },
                css: function(t, e, i, n) {
                    var r, a, o, s = pt.camelCase(e);
                    return e = pt.cssProps[s] || (pt.cssProps[s] = R(s) || s),
                    o = pt.cssHooks[e] || pt.cssHooks[s],
                    o && "get"in o && (r = o.get(t, !0, i)),
                    void 0 === r && (r = L(t, e, n)),
                    "normal" === r && e in le && (r = le[e]),
                    "" === i || i ? (a = parseFloat(r),
                    i === !0 || isFinite(a) ? a || 0 : r) : r
                }
            }),
            pt.each(["height", "width"], function(t, e) {
                pt.cssHooks[e] = {
                    get: function(t, i, n) {
                        if (i)
                            return !oe.test(pt.css(t, "display")) || t.getClientRects().length && t.getBoundingClientRect().width ? k(t, e, n) : jt(t, se, function() {
                                return k(t, e, n)
                            })
                    },
                    set: function(t, i, n) {
                        var r, a = n && ae(t), o = n && I(t, e, n, "border-box" === pt.css(t, "boxSizing", !1, a), a);
                        return o && (r = Bt.exec(i)) && "px" !== (r[3] || "px") && (t.style[e] = i,
                        i = pt.css(t, e)),
                        D(t, i, o)
                    }
                }
            }),
            pt.cssHooks.marginLeft = O(ct.reliableMarginLeft, function(t, e) {
                if (e)
                    return (parseFloat(L(t, "marginLeft")) || t.getBoundingClientRect().left - jt(t, {
                        marginLeft: 0
                    }, function() {
                        return t.getBoundingClientRect().left
                    })) + "px"
            }),
            pt.each({
                margin: "",
                padding: "",
                border: "Width"
            }, function(t, e) {
                pt.cssHooks[t + e] = {
                    expand: function(i) {
                        for (var n = 0, r = {}, a = "string" == typeof i ? i.split(" ") : [i]; n < 4; n++)
                            r[t + Ut[n] + e] = a[n] || a[n - 2] || a[0];
                        return r
                    }
                },
                ne.test(t) || (pt.cssHooks[t + e].set = D)
            }),
            pt.fn.extend({
                css: function(t, e) {
                    return Ot(this, function(t, e, i) {
                        var n, r, a = {}, o = 0;
                        if (pt.isArray(e)) {
                            for (n = ae(t),
                            r = e.length; o < r; o++)
                                a[e[o]] = pt.css(t, e[o], !1, n);
                            return a
                        }
                        return void 0 !== i ? pt.style(t, e, i) : pt.css(t, e)
                    }, t, e, arguments.length > 1)
                }
            }),
            pt.Tween = N,
            N.prototype = {
                constructor: N,
                init: function(t, e, i, n, r, a) {
                    this.elem = t,
                    this.prop = i,
                    this.easing = r || pt.easing._default,
                    this.options = e,
                    this.start = this.now = this.cur(),
                    this.end = n,
                    this.unit = a || (pt.cssNumber[i] ? "" : "px")
                },
                cur: function() {
                    var t = N.propHooks[this.prop];
                    return t && t.get ? t.get(this) : N.propHooks._default.get(this)
                },
                run: function(t) {
                    var e, i = N.propHooks[this.prop];
                    return this.options.duration ? this.pos = e = pt.easing[this.easing](t, this.options.duration * t, 0, 1, this.options.duration) : this.pos = e = t,
                    this.now = (this.end - this.start) * e + this.start,
                    this.options.step && this.options.step.call(this.elem, this.now, this),
                    i && i.set ? i.set(this) : N.propHooks._default.set(this),
                    this
                }
            },
            N.prototype.init.prototype = N.prototype,
            N.propHooks = {
                _default: {
                    get: function(t) {
                        var e;
                        return 1 !== t.elem.nodeType || null != t.elem[t.prop] && null == t.elem.style[t.prop] ? t.elem[t.prop] : (e = pt.css(t.elem, t.prop, ""),
                        e && "auto" !== e ? e : 0)
                    },
                    set: function(t) {
                        pt.fx.step[t.prop] ? pt.fx.step[t.prop](t) : 1 !== t.elem.nodeType || null == t.elem.style[pt.cssProps[t.prop]] && !pt.cssHooks[t.prop] ? t.elem[t.prop] = t.now : pt.style(t.elem, t.prop, t.now + t.unit)
                    }
                }
            },
            N.propHooks.scrollTop = N.propHooks.scrollLeft = {
                set: function(t) {
                    t.elem.nodeType && t.elem.parentNode && (t.elem[t.prop] = t.now)
                }
            },
            pt.easing = {
                linear: function(t) {
                    return t
                },
                swing: function(t) {
                    return .5 - Math.cos(t * Math.PI) / 2
                },
                _default: "swing"
            },
            pt.fx = N.prototype.init,
            pt.fx.step = {};
            var ue, pe, fe = /^(?:toggle|show|hide)$/, de = /queueHooks$/;
            pt.Animation = pt.extend(G, {
                tweeners: {
                    "*": [function(t, e) {
                        var i = this.createTween(t, e);
                        return f(i.elem, t, Bt.exec(e), i),
                        i
                    }
                    ]
                },
                tweener: function(t, e) {
                    pt.isFunction(t) ? (e = t,
                    t = ["*"]) : t = t.match(Pt);
                    for (var i, n = 0, r = t.length; n < r; n++)
                        i = t[n],
                        G.tweeners[i] = G.tweeners[i] || [],
                        G.tweeners[i].unshift(e)
                },
                prefilters: [j],
                prefilter: function(t, e) {
                    e ? G.prefilters.unshift(t) : G.prefilters.push(t)
                }
            }),
            pt.speed = function(t, e, i) {
                var n = t && "object" == typeof t ? pt.extend({}, t) : {
                    complete: i || !i && e || pt.isFunction(t) && t,
                    duration: t,
                    easing: i && e || e && !pt.isFunction(e) && e
                };
                return pt.fx.off || J.hidden ? n.duration = 0 : n.duration = "number" == typeof n.duration ? n.duration : n.duration in pt.fx.speeds ? pt.fx.speeds[n.duration] : pt.fx.speeds._default,
                null != n.queue && n.queue !== !0 || (n.queue = "fx"),
                n.old = n.complete,
                n.complete = function() {
                    pt.isFunction(n.old) && n.old.call(this),
                    n.queue && pt.dequeue(this, n.queue)
                }
                ,
                n
            }
            ,
            pt.fn.extend({
                fadeTo: function(t, e, i, n) {
                    return this.filter(zt).css("opacity", 0).show().end().animate({
                        opacity: e
                    }, t, i, n)
                },
                animate: function(t, e, i, n) {
                    var r = pt.isEmptyObject(t)
                      , a = pt.speed(e, i, n)
                      , o = function() {
                        var e = G(this, pt.extend({}, t), a);
                        (r || Dt.get(this, "finish")) && e.stop(!0)
                    };
                    return o.finish = o,
                    r || a.queue === !1 ? this.each(o) : this.queue(a.queue, o)
                },
                stop: function(t, e, i) {
                    var n = function(t) {
                        var e = t.stop;
                        delete t.stop,
                        e(i)
                    };
                    return "string" != typeof t && (i = e,
                    e = t,
                    t = void 0),
                    e && t !== !1 && this.queue(t || "fx", []),
                    this.each(function() {
                        var e = !0
                          , r = null != t && t + "queueHooks"
                          , a = pt.timers
                          , o = Dt.get(this);
                        if (r)
                            o[r] && o[r].stop && n(o[r]);
                        else
                            for (r in o)
                                o[r] && o[r].stop && de.test(r) && n(o[r]);
                        for (r = a.length; r--; )
                            a[r].elem !== this || null != t && a[r].queue !== t || (a[r].anim.stop(i),
                            e = !1,
                            a.splice(r, 1));
                        !e && i || pt.dequeue(this, t)
                    })
                },
                finish: function(t) {
                    return t !== !1 && (t = t || "fx"),
                    this.each(function() {
                        var e, i = Dt.get(this), n = i[t + "queue"], r = i[t + "queueHooks"], a = pt.timers, o = n ? n.length : 0;
                        for (i.finish = !0,
                        pt.queue(this, t, []),
                        r && r.stop && r.stop.call(this, !0),
                        e = a.length; e--; )
                            a[e].elem === this && a[e].queue === t && (a[e].anim.stop(!0),
                            a.splice(e, 1));
                        for (e = 0; e < o; e++)
                            n[e] && n[e].finish && n[e].finish.call(this);
                        delete i.finish
                    })
                }
            }),
            pt.each(["toggle", "show", "hide"], function(t, e) {
                var i = pt.fn[e];
                pt.fn[e] = function(t, n, r) {
                    return null == t || "boolean" == typeof t ? i.apply(this, arguments) : this.animate(U(e, !0), t, n, r)
                }
            }),
            pt.each({
                slideDown: U("show"),
                slideUp: U("hide"),
                slideToggle: U("toggle"),
                fadeIn: {
                    opacity: "show"
                },
                fadeOut: {
                    opacity: "hide"
                },
                fadeToggle: {
                    opacity: "toggle"
                }
            }, function(t, e) {
                pt.fn[t] = function(t, i, n) {
                    return this.animate(e, t, i, n)
                }
            }),
            pt.timers = [],
            pt.fx.tick = function() {
                var t, e = 0, i = pt.timers;
                for (ue = pt.now(); e < i.length; e++)
                    t = i[e],
                    t() || i[e] !== t || i.splice(e--, 1);
                i.length || pt.fx.stop(),
                ue = void 0
            }
            ,
            pt.fx.timer = function(t) {
                pt.timers.push(t),
                t() ? pt.fx.start() : pt.timers.pop()
            }
            ,
            pt.fx.interval = 13,
            pt.fx.start = function() {
                pe || (pe = t.requestAnimationFrame ? t.requestAnimationFrame(F) : t.setInterval(pt.fx.tick, pt.fx.interval))
            }
            ,
            pt.fx.stop = function() {
                t.cancelAnimationFrame ? t.cancelAnimationFrame(pe) : t.clearInterval(pe),
                pe = null
            }
            ,
            pt.fx.speeds = {
                slow: 600,
                fast: 200,
                _default: 400
            },
            pt.fn.delay = function(e, i) {
                return e = pt.fx ? pt.fx.speeds[e] || e : e,
                i = i || "fx",
                this.queue(i, function(i, n) {
                    var r = t.setTimeout(i, e);
                    n.stop = function() {
                        t.clearTimeout(r)
                    }
                })
            }
            ,
            function() {
                var t = J.createElement("input")
                  , e = J.createElement("select")
                  , i = e.appendChild(J.createElement("option"));
                t.type = "checkbox",
                ct.checkOn = "" !== t.value,
                ct.optSelected = i.selected,
                t = J.createElement("input"),
                t.value = "t",
                t.type = "radio",
                ct.radioValue = "t" === t.value
            }();
            var me, ge = pt.expr.attrHandle;
            pt.fn.extend({
                attr: function(t, e) {
                    return Ot(this, pt.attr, t, e, arguments.length > 1)
                },
                removeAttr: function(t) {
                    return this.each(function() {
                        pt.removeAttr(this, t)
                    })
                }
            }),
            pt.extend({
                attr: function(t, e, i) {
                    var n, r, a = t.nodeType;
                    if (3 !== a && 8 !== a && 2 !== a)
                        return "undefined" == typeof t.getAttribute ? pt.prop(t, e, i) : (1 === a && pt.isXMLDoc(t) || (r = pt.attrHooks[e.toLowerCase()] || (pt.expr.match.bool.test(e) ? me : void 0)),
                        void 0 !== i ? null === i ? void pt.removeAttr(t, e) : r && "set"in r && void 0 !== (n = r.set(t, i, e)) ? n : (t.setAttribute(e, i + ""),
                        i) : r && "get"in r && null !== (n = r.get(t, e)) ? n : (n = pt.find.attr(t, e),
                        null == n ? void 0 : n))
                },
                attrHooks: {
                    type: {
                        set: function(t, e) {
                            if (!ct.radioValue && "radio" === e && pt.nodeName(t, "input")) {
                                var i = t.value;
                                return t.setAttribute("type", e),
                                i && (t.value = i),
                                e
                            }
                        }
                    }
                },
                removeAttr: function(t, e) {
                    var i, n = 0, r = e && e.match(Pt);
                    if (r && 1 === t.nodeType)
                        for (; i = r[n++]; )
                            t.removeAttribute(i)
                }
            }),
            me = {
                set: function(t, e, i) {
                    return e === !1 ? pt.removeAttr(t, i) : t.setAttribute(i, i),
                    i
                }
            },
            pt.each(pt.expr.match.bool.source.match(/\w+/g), function(t, e) {
                var i = ge[e] || pt.find.attr;
                ge[e] = function(t, e, n) {
                    var r, a, o = e.toLowerCase();
                    return n || (a = ge[o],
                    ge[o] = r,
                    r = null != i(t, e, n) ? o : null,
                    ge[o] = a),
                    r
                }
            });
            var ve = /^(?:input|select|textarea|button)$/i
              , ye = /^(?:a|area)$/i;
            pt.fn.extend({
                prop: function(t, e) {
                    return Ot(this, pt.prop, t, e, arguments.length > 1)
                },
                removeProp: function(t) {
                    return this.each(function() {
                        delete this[pt.propFix[t] || t]
                    })
                }
            }),
            pt.extend({
                prop: function(t, e, i) {
                    var n, r, a = t.nodeType;
                    if (3 !== a && 8 !== a && 2 !== a)
                        return 1 === a && pt.isXMLDoc(t) || (e = pt.propFix[e] || e,
                        r = pt.propHooks[e]),
                        void 0 !== i ? r && "set"in r && void 0 !== (n = r.set(t, i, e)) ? n : t[e] = i : r && "get"in r && null !== (n = r.get(t, e)) ? n : t[e]
                },
                propHooks: {
                    tabIndex: {
                        get: function(t) {
                            var e = pt.find.attr(t, "tabindex");
                            return e ? parseInt(e, 10) : ve.test(t.nodeName) || ye.test(t.nodeName) && t.href ? 0 : -1
                        }
                    }
                },
                propFix: {
                    "for": "htmlFor",
                    "class": "className"
                }
            }),
            ct.optSelected || (pt.propHooks.selected = {
                get: function(t) {
                    var e = t.parentNode;
                    return e && e.parentNode && e.parentNode.selectedIndex,
                    null
                },
                set: function(t) {
                    var e = t.parentNode;
                    e && (e.selectedIndex,
                    e.parentNode && e.parentNode.selectedIndex)
                }
            }),
            pt.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
                pt.propFix[this.toLowerCase()] = this
            });
            var _e = /[\t\r\n\f]/g;
            pt.fn.extend({
                addClass: function(t) {
                    var e, i, n, r, a, o, s, l = 0;
                    if (pt.isFunction(t))
                        return this.each(function(e) {
                            pt(this).addClass(t.call(this, e, H(this)))
                        });
                    if ("string" == typeof t && t)
                        for (e = t.match(Pt) || []; i = this[l++]; )
                            if (r = H(i),
                            n = 1 === i.nodeType && (" " + r + " ").replace(_e, " ")) {
                                for (o = 0; a = e[o++]; )
                                    n.indexOf(" " + a + " ") < 0 && (n += a + " ");
                                s = pt.trim(n),
                                r !== s && i.setAttribute("class", s)
                            }
                    return this
                },
                removeClass: function(t) {
                    var e, i, n, r, a, o, s, l = 0;
                    if (pt.isFunction(t))
                        return this.each(function(e) {
                            pt(this).removeClass(t.call(this, e, H(this)))
                        });
                    if (!arguments.length)
                        return this.attr("class", "");
                    if ("string" == typeof t && t)
                        for (e = t.match(Pt) || []; i = this[l++]; )
                            if (r = H(i),
                            n = 1 === i.nodeType && (" " + r + " ").replace(_e, " ")) {
                                for (o = 0; a = e[o++]; )
                                    for (; n.indexOf(" " + a + " ") > -1; )
                                        n = n.replace(" " + a + " ", " ");
                                s = pt.trim(n),
                                r !== s && i.setAttribute("class", s)
                            }
                    return this
                },
                toggleClass: function(t, e) {
                    var i = typeof t;
                    return "boolean" == typeof e && "string" === i ? e ? this.addClass(t) : this.removeClass(t) : pt.isFunction(t) ? this.each(function(i) {
                        pt(this).toggleClass(t.call(this, i, H(this), e), e)
                    }) : this.each(function() {
                        var e, n, r, a;
                        if ("string" === i)
                            for (n = 0,
                            r = pt(this),
                            a = t.match(Pt) || []; e = a[n++]; )
                                r.hasClass(e) ? r.removeClass(e) : r.addClass(e);
                        else
                            void 0 !== t && "boolean" !== i || (e = H(this),
                            e && Dt.set(this, "__className__", e),
                            this.setAttribute && this.setAttribute("class", e || t === !1 ? "" : Dt.get(this, "__className__") || ""))
                    })
                },
                hasClass: function(t) {
                    var e, i, n = 0;
                    for (e = " " + t + " "; i = this[n++]; )
                        if (1 === i.nodeType && (" " + H(i) + " ").replace(_e, " ").indexOf(e) > -1)
                            return !0;
                    return !1
                }
            });
            var xe = /\r/g
              , be = /[\x20\t\r\n\f]+/g;
            pt.fn.extend({
                val: function(t) {
                    var e, i, n, r = this[0];
                    {
                        if (arguments.length)
                            return n = pt.isFunction(t),
                            this.each(function(i) {
                                var r;
                                1 === this.nodeType && (r = n ? t.call(this, i, pt(this).val()) : t,
                                null == r ? r = "" : "number" == typeof r ? r += "" : pt.isArray(r) && (r = pt.map(r, function(t) {
                                    return null == t ? "" : t + ""
                                })),
                                e = pt.valHooks[this.type] || pt.valHooks[this.nodeName.toLowerCase()],
                                e && "set"in e && void 0 !== e.set(this, r, "value") || (this.value = r))
                            });
                        if (r)
                            return e = pt.valHooks[r.type] || pt.valHooks[r.nodeName.toLowerCase()],
                            e && "get"in e && void 0 !== (i = e.get(r, "value")) ? i : (i = r.value,
                            "string" == typeof i ? i.replace(xe, "") : null == i ? "" : i)
                    }
                }
            }),
            pt.extend({
                valHooks: {
                    option: {
                        get: function(t) {
                            var e = pt.find.attr(t, "value");
                            return null != e ? e : pt.trim(pt.text(t)).replace(be, " ")
                        }
                    },
                    select: {
                        get: function(t) {
                            for (var e, i, n = t.options, r = t.selectedIndex, a = "select-one" === t.type, o = a ? null : [], s = a ? r + 1 : n.length, l = r < 0 ? s : a ? r : 0; l < s; l++)
                                if (i = n[l],
                                (i.selected || l === r) && !i.disabled && (!i.parentNode.disabled || !pt.nodeName(i.parentNode, "optgroup"))) {
                                    if (e = pt(i).val(),
                                    a)
                                        return e;
                                    o.push(e)
                                }
                            return o
                        },
                        set: function(t, e) {
                            for (var i, n, r = t.options, a = pt.makeArray(e), o = r.length; o--; )
                                n = r[o],
                                (n.selected = pt.inArray(pt.valHooks.option.get(n), a) > -1) && (i = !0);
                            return i || (t.selectedIndex = -1),
                            a
                        }
                    }
                }
            }),
            pt.each(["radio", "checkbox"], function() {
                pt.valHooks[this] = {
                    set: function(t, e) {
                        if (pt.isArray(e))
                            return t.checked = pt.inArray(pt(t).val(), e) > -1
                    }
                },
                ct.checkOn || (pt.valHooks[this].get = function(t) {
                    return null === t.getAttribute("value") ? "on" : t.value
                }
                )
            });
            var we = /^(?:focusinfocus|focusoutblur)$/;
            pt.extend(pt.event, {
                trigger: function(e, i, n, r) {
                    var a, o, s, l, h, c, u, p = [n || J], f = st.call(e, "type") ? e.type : e, d = st.call(e, "namespace") ? e.namespace.split(".") : [];
                    if (o = s = n = n || J,
                    3 !== n.nodeType && 8 !== n.nodeType && !we.test(f + pt.event.triggered) && (f.indexOf(".") > -1 && (d = f.split("."),
                    f = d.shift(),
                    d.sort()),
                    h = f.indexOf(":") < 0 && "on" + f,
                    e = e[pt.expando] ? e : new pt.Event(f,"object" == typeof e && e),
                    e.isTrigger = r ? 2 : 3,
                    e.namespace = d.join("."),
                    e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + d.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                    e.result = void 0,
                    e.target || (e.target = n),
                    i = null == i ? [e] : pt.makeArray(i, [e]),
                    u = pt.event.special[f] || {},
                    r || !u.trigger || u.trigger.apply(n, i) !== !1)) {
                        if (!r && !u.noBubble && !pt.isWindow(n)) {
                            for (l = u.delegateType || f,
                            we.test(l + f) || (o = o.parentNode); o; o = o.parentNode)
                                p.push(o),
                                s = o;
                            s === (n.ownerDocument || J) && p.push(s.defaultView || s.parentWindow || t)
                        }
                        for (a = 0; (o = p[a++]) && !e.isPropagationStopped(); )
                            e.type = a > 1 ? l : u.bindType || f,
                            c = (Dt.get(o, "events") || {})[e.type] && Dt.get(o, "handle"),
                            c && c.apply(o, i),
                            c = h && o[h],
                            c && c.apply && Rt(o) && (e.result = c.apply(o, i),
                            e.result === !1 && e.preventDefault());
                        return e.type = f,
                        r || e.isDefaultPrevented() || u._default && u._default.apply(p.pop(), i) !== !1 || !Rt(n) || h && pt.isFunction(n[f]) && !pt.isWindow(n) && (s = n[h],
                        s && (n[h] = null),
                        pt.event.triggered = f,
                        n[f](),
                        pt.event.triggered = void 0,
                        s && (n[h] = s)),
                        e.result
                    }
                },
                simulate: function(t, e, i) {
                    var n = pt.extend(new pt.Event, i, {
                        type: t,
                        isSimulated: !0
                    });
                    pt.event.trigger(n, null, e)
                }
            }),
            pt.fn.extend({
                trigger: function(t, e) {
                    return this.each(function() {
                        pt.event.trigger(t, e, this)
                    })
                },
                triggerHandler: function(t, e) {
                    var i = this[0];
                    if (i)
                        return pt.event.trigger(t, e, i, !0)
                }
            }),
            pt.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(t, e) {
                pt.fn[e] = function(t, i) {
                    return arguments.length > 0 ? this.on(e, null, t, i) : this.trigger(e)
                }
            }),
            pt.fn.extend({
                hover: function(t, e) {
                    return this.mouseenter(t).mouseleave(e || t)
                }
            }),
            ct.focusin = "onfocusin"in t,
            ct.focusin || pt.each({
                focus: "focusin",
                blur: "focusout"
            }, function(t, e) {
                var i = function(t) {
                    pt.event.simulate(e, t.target, pt.event.fix(t))
                };
                pt.event.special[e] = {
                    setup: function() {
                        var n = this.ownerDocument || this
                          , r = Dt.access(n, e);
                        r || n.addEventListener(t, i, !0),
                        Dt.access(n, e, (r || 0) + 1)
                    },
                    teardown: function() {
                        var n = this.ownerDocument || this
                          , r = Dt.access(n, e) - 1;
                        r ? Dt.access(n, e, r) : (n.removeEventListener(t, i, !0),
                        Dt.remove(n, e))
                    }
                }
            });
            var Me = t.location
              , Te = pt.now()
              , Se = /\?/;
            pt.parseXML = function(e) {
                var i;
                if (!e || "string" != typeof e)
                    return null;
                try {
                    i = (new t.DOMParser).parseFromString(e, "text/xml")
                } catch (n) {
                    i = void 0
                }
                return i && !i.getElementsByTagName("parsererror").length || pt.error("Invalid XML: " + e),
                i
            }
            ;
            var Ce = /\[\]$/
              , Ae = /\r?\n/g
              , Pe = /^(?:submit|button|image|reset|file)$/i
              , Ee = /^(?:input|select|textarea|keygen)/i;
            pt.param = function(t, e) {
                var i, n = [], r = function(t, e) {
                    var i = pt.isFunction(e) ? e() : e;
                    n[n.length] = encodeURIComponent(t) + "=" + encodeURIComponent(null == i ? "" : i)
                };
                if (pt.isArray(t) || t.jquery && !pt.isPlainObject(t))
                    pt.each(t, function() {
                        r(this.name, this.value)
                    });
                else
                    for (i in t)
                        W(i, t[i], e, r);
                return n.join("&")
            }
            ,
            pt.fn.extend({
                serialize: function() {
                    return pt.param(this.serializeArray())
                },
                serializeArray: function() {
                    return this.map(function() {
                        var t = pt.prop(this, "elements");
                        return t ? pt.makeArray(t) : this
                    }).filter(function() {
                        var t = this.type;
                        return this.name && !pt(this).is(":disabled") && Ee.test(this.nodeName) && !Pe.test(t) && (this.checked || !Gt.test(t))
                    }).map(function(t, e) {
                        var i = pt(this).val();
                        return null == i ? null : pt.isArray(i) ? pt.map(i, function(t) {
                            return {
                                name: e.name,
                                value: t.replace(Ae, "\r\n")
                            }
                        }) : {
                            name: e.name,
                            value: i.replace(Ae, "\r\n")
                        }
                    }).get()
                }
            });
            var Le = /%20/g
              , Oe = /#.*$/
              , Re = /([?&])_=[^&]*/
              , De = /^(.*?):[ \t]*([^\r\n]*)$/gm
              , Ie = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/
              , ke = /^(?:GET|HEAD)$/
              , Ne = /^\/\//
              , Fe = {}
              , Be = {}
              , Ue = "*/".concat("*")
              , ze = J.createElement("a");
            ze.href = Me.href,
            pt.extend({
                active: 0,
                lastModified: {},
                etag: {},
                ajaxSettings: {
                    url: Me.href,
                    type: "GET",
                    isLocal: Ie.test(Me.protocol),
                    global: !0,
                    processData: !0,
                    async: !0,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    accepts: {
                        "*": Ue,
                        text: "text/plain",
                        html: "text/html",
                        xml: "application/xml, text/xml",
                        json: "application/json, text/javascript"
                    },
                    contents: {
                        xml: /\bxml\b/,
                        html: /\bhtml/,
                        json: /\bjson\b/
                    },
                    responseFields: {
                        xml: "responseXML",
                        text: "responseText",
                        json: "responseJSON"
                    },
                    converters: {
                        "* text": String,
                        "text html": !0,
                        "text json": JSON.parse,
                        "text xml": pt.parseXML
                    },
                    flatOptions: {
                        url: !0,
                        context: !0
                    }
                },
                ajaxSetup: function(t, e) {
                    return e ? Y(Y(t, pt.ajaxSettings), e) : Y(pt.ajaxSettings, t)
                },
                ajaxPrefilter: X(Fe),
                ajaxTransport: X(Be),
                ajax: function(e, i) {
                    function n(e, i, n, s) {
                        var h, p, f, x, b, w = i;
                        c || (c = !0,
                        l && t.clearTimeout(l),
                        r = void 0,
                        o = s || "",
                        M.readyState = e > 0 ? 4 : 0,
                        h = e >= 200 && e < 300 || 304 === e,
                        n && (x = Z(d, M, n)),
                        x = $(d, x, M, h),
                        h ? (d.ifModified && (b = M.getResponseHeader("Last-Modified"),
                        b && (pt.lastModified[a] = b),
                        b = M.getResponseHeader("etag"),
                        b && (pt.etag[a] = b)),
                        204 === e || "HEAD" === d.type ? w = "nocontent" : 304 === e ? w = "notmodified" : (w = x.state,
                        p = x.data,
                        f = x.error,
                        h = !f)) : (f = w,
                        !e && w || (w = "error",
                        e < 0 && (e = 0))),
                        M.status = e,
                        M.statusText = (i || w) + "",
                        h ? v.resolveWith(m, [p, w, M]) : v.rejectWith(m, [M, w, f]),
                        M.statusCode(_),
                        _ = void 0,
                        u && g.trigger(h ? "ajaxSuccess" : "ajaxError", [M, d, h ? p : f]),
                        y.fireWith(m, [M, w]),
                        u && (g.trigger("ajaxComplete", [M, d]),
                        --pt.active || pt.event.trigger("ajaxStop")))
                    }
                    "object" == typeof e && (i = e,
                    e = void 0),
                    i = i || {};
                    var r, a, o, s, l, h, c, u, p, f, d = pt.ajaxSetup({}, i), m = d.context || d, g = d.context && (m.nodeType || m.jquery) ? pt(m) : pt.event, v = pt.Deferred(), y = pt.Callbacks("once memory"), _ = d.statusCode || {}, x = {}, b = {}, w = "canceled", M = {
                        readyState: 0,
                        getResponseHeader: function(t) {
                            var e;
                            if (c) {
                                if (!s)
                                    for (s = {}; e = De.exec(o); )
                                        s[e[1].toLowerCase()] = e[2];
                                e = s[t.toLowerCase()]
                            }
                            return null == e ? null : e
                        },
                        getAllResponseHeaders: function() {
                            return c ? o : null
                        },
                        setRequestHeader: function(t, e) {
                            return null == c && (t = b[t.toLowerCase()] = b[t.toLowerCase()] || t,
                            x[t] = e),
                            this
                        },
                        overrideMimeType: function(t) {
                            return null == c && (d.mimeType = t),
                            this
                        },
                        statusCode: function(t) {
                            var e;
                            if (t)
                                if (c)
                                    M.always(t[M.status]);
                                else
                                    for (e in t)
                                        _[e] = [_[e], t[e]];
                            return this
                        },
                        abort: function(t) {
                            var e = t || w;
                            return r && r.abort(e),
                            n(0, e),
                            this
                        }
                    };
                    if (v.promise(M),
                    d.url = ((e || d.url || Me.href) + "").replace(Ne, Me.protocol + "//"),
                    d.type = i.method || i.type || d.method || d.type,
                    d.dataTypes = (d.dataType || "*").toLowerCase().match(Pt) || [""],
                    null == d.crossDomain) {
                        h = J.createElement("a");
                        try {
                            h.href = d.url,
                            h.href = h.href,
                            d.crossDomain = ze.protocol + "//" + ze.host != h.protocol + "//" + h.host
                        } catch (T) {
                            d.crossDomain = !0
                        }
                    }
                    if (d.data && d.processData && "string" != typeof d.data && (d.data = pt.param(d.data, d.traditional)),
                    q(Fe, d, i, M),
                    c)
                        return M;
                    u = pt.event && d.global,
                    u && 0 === pt.active++ && pt.event.trigger("ajaxStart"),
                    d.type = d.type.toUpperCase(),
                    d.hasContent = !ke.test(d.type),
                    a = d.url.replace(Oe, ""),
                    d.hasContent ? d.data && d.processData && 0 === (d.contentType || "").indexOf("application/x-www-form-urlencoded") && (d.data = d.data.replace(Le, "+")) : (f = d.url.slice(a.length),
                    d.data && (a += (Se.test(a) ? "&" : "?") + d.data,
                    delete d.data),
                    d.cache === !1 && (a = a.replace(Re, ""),
                    f = (Se.test(a) ? "&" : "?") + "_=" + Te++ + f),
                    d.url = a + f),
                    d.ifModified && (pt.lastModified[a] && M.setRequestHeader("If-Modified-Since", pt.lastModified[a]),
                    pt.etag[a] && M.setRequestHeader("If-None-Match", pt.etag[a])),
                    (d.data && d.hasContent && d.contentType !== !1 || i.contentType) && M.setRequestHeader("Content-Type", d.contentType),
                    M.setRequestHeader("Accept", d.dataTypes[0] && d.accepts[d.dataTypes[0]] ? d.accepts[d.dataTypes[0]] + ("*" !== d.dataTypes[0] ? ", " + Ue + "; q=0.01" : "") : d.accepts["*"]);
                    for (p in d.headers)
                        M.setRequestHeader(p, d.headers[p]);
                    if (d.beforeSend && (d.beforeSend.call(m, M, d) === !1 || c))
                        return M.abort();
                    if (w = "abort",
                    y.add(d.complete),
                    M.done(d.success),
                    M.fail(d.error),
                    r = q(Be, d, i, M)) {
                        if (M.readyState = 1,
                        u && g.trigger("ajaxSend", [M, d]),
                        c)
                            return M;
                        d.async && d.timeout > 0 && (l = t.setTimeout(function() {
                            M.abort("timeout")
                        }, d.timeout));
                        try {
                            c = !1,
                            r.send(x, n)
                        } catch (T) {
                            if (c)
                                throw T;
                            n(-1, T)
                        }
                    } else
                        n(-1, "No Transport");
                    return M
                },
                getJSON: function(t, e, i) {
                    return pt.get(t, e, i, "json")
                },
                getScript: function(t, e) {
                    return pt.get(t, void 0, e, "script")
                }
            }),
            pt.each(["get", "post"], function(t, e) {
                pt[e] = function(t, i, n, r) {
                    return pt.isFunction(i) && (r = r || n,
                    n = i,
                    i = void 0),
                    pt.ajax(pt.extend({
                        url: t,
                        type: e,
                        dataType: r,
                        data: i,
                        success: n
                    }, pt.isPlainObject(t) && t))
                }
            }),
            pt._evalUrl = function(t) {
                return pt.ajax({
                    url: t,
                    type: "GET",
                    dataType: "script",
                    cache: !0,
                    async: !1,
                    global: !1,
                    "throws": !0
                })
            }
            ,
            pt.fn.extend({
                wrapAll: function(t) {
                    var e;
                    return this[0] && (pt.isFunction(t) && (t = t.call(this[0])),
                    e = pt(t, this[0].ownerDocument).eq(0).clone(!0),
                    this[0].parentNode && e.insertBefore(this[0]),
                    e.map(function() {
                        for (var t = this; t.firstElementChild; )
                            t = t.firstElementChild;
                        return t
                    }).append(this)),
                    this
                },
                wrapInner: function(t) {
                    return pt.isFunction(t) ? this.each(function(e) {
                        pt(this).wrapInner(t.call(this, e))
                    }) : this.each(function() {
                        var e = pt(this)
                          , i = e.contents();
                        i.length ? i.wrapAll(t) : e.append(t)
                    })
                },
                wrap: function(t) {
                    var e = pt.isFunction(t);
                    return this.each(function(i) {
                        pt(this).wrapAll(e ? t.call(this, i) : t)
                    })
                },
                unwrap: function(t) {
                    return this.parent(t).not("body").each(function() {
                        pt(this).replaceWith(this.childNodes)
                    }),
                    this
                }
            }),
            pt.expr.pseudos.hidden = function(t) {
                return !pt.expr.pseudos.visible(t)
            }
            ,
            pt.expr.pseudos.visible = function(t) {
                return !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length)
            }
            ,
            pt.ajaxSettings.xhr = function() {
                try {
                    return new t.XMLHttpRequest
                } catch (e) {}
            }
            ;
            var je = {
                0: 200,
                1223: 204
            }
              , Ve = pt.ajaxSettings.xhr();
            ct.cors = !!Ve && "withCredentials"in Ve,
            ct.ajax = Ve = !!Ve,
            pt.ajaxTransport(function(e) {
                var i, n;
                if (ct.cors || Ve && !e.crossDomain)
                    return {
                        send: function(r, a) {
                            var o, s = e.xhr();
                            if (s.open(e.type, e.url, e.async, e.username, e.password),
                            e.xhrFields)
                                for (o in e.xhrFields)
                                    s[o] = e.xhrFields[o];
                            e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType),
                            e.crossDomain || r["X-Requested-With"] || (r["X-Requested-With"] = "XMLHttpRequest");
                            for (o in r)
                                s.setRequestHeader(o, r[o]);
                            i = function(t) {
                                return function() {
                                    i && (i = n = s.onload = s.onerror = s.onabort = s.onreadystatechange = null,
                                    "abort" === t ? s.abort() : "error" === t ? "number" != typeof s.status ? a(0, "error") : a(s.status, s.statusText) : a(je[s.status] || s.status, s.statusText, "text" !== (s.responseType || "text") || "string" != typeof s.responseText ? {
                                        binary: s.response
                                    } : {
                                        text: s.responseText
                                    }, s.getAllResponseHeaders()))
                                }
                            }
                            ,
                            s.onload = i(),
                            n = s.onerror = i("error"),
                            void 0 !== s.onabort ? s.onabort = n : s.onreadystatechange = function() {
                                4 === s.readyState && t.setTimeout(function() {
                                    i && n()
                                })
                            }
                            ,
                            i = i("abort");
                            try {
                                s.send(e.hasContent && e.data || null)
                            } catch (l) {
                                if (i)
                                    throw l
                            }
                        },
                        abort: function() {
                            i && i()
                        }
                    }
            }),
            pt.ajaxPrefilter(function(t) {
                t.crossDomain && (t.contents.script = !1)
            }),
            pt.ajaxSetup({
                accepts: {
                    script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /\b(?:java|ecma)script\b/
                },
                converters: {
                    "text script": function(t) {
                        return pt.globalEval(t),
                        t
                    }
                }
            }),
            pt.ajaxPrefilter("script", function(t) {
                void 0 === t.cache && (t.cache = !1),
                t.crossDomain && (t.type = "GET")
            }),
            pt.ajaxTransport("script", function(t) {
                if (t.crossDomain) {
                    var e, i;
                    return {
                        send: function(n, r) {
                            e = pt("<script>").prop({
                                charset: t.scriptCharset,
                                src: t.url
                            }).on("load error", i = function(t) {
                                e.remove(),
                                i = null,
                                t && r("error" === t.type ? 404 : 200, t.type)
                            }
                            ),
                            J.head.appendChild(e[0])
                        },
                        abort: function() {
                            i && i()
                        }
                    }
                }
            });
            var Ge = []
              , He = /(=)\?(?=&|$)|\?\?/;
            pt.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function() {
                    var t = Ge.pop() || pt.expando + "_" + Te++;
                    return this[t] = !0,
                    t
                }
            }),
            pt.ajaxPrefilter("json jsonp", function(e, i, n) {
                var r, a, o, s = e.jsonp !== !1 && (He.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && He.test(e.data) && "data");
                if (s || "jsonp" === e.dataTypes[0])
                    return r = e.jsonpCallback = pt.isFunction(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback,
                    s ? e[s] = e[s].replace(He, "$1" + r) : e.jsonp !== !1 && (e.url += (Se.test(e.url) ? "&" : "?") + e.jsonp + "=" + r),
                    e.converters["script json"] = function() {
                        return o || pt.error(r + " was not called"),
                        o[0]
                    }
                    ,
                    e.dataTypes[0] = "json",
                    a = t[r],
                    t[r] = function() {
                        o = arguments
                    }
                    ,
                    n.always(function() {
                        void 0 === a ? pt(t).removeProp(r) : t[r] = a,
                        e[r] && (e.jsonpCallback = i.jsonpCallback,
                        Ge.push(r)),
                        o && pt.isFunction(a) && a(o[0]),
                        o = a = void 0
                    }),
                    "script"
            }),
            ct.createHTMLDocument = function() {
                var t = J.implementation.createHTMLDocument("").body;
                return t.innerHTML = "<form></form><form></form>",
                2 === t.childNodes.length
            }(),
            pt.parseHTML = function(t, e, i) {
                if ("string" != typeof t)
                    return [];
                "boolean" == typeof e && (i = e,
                e = !1);
                var n, r, a;
                return e || (ct.createHTMLDocument ? (e = J.implementation.createHTMLDocument(""),
                n = e.createElement("base"),
                n.href = J.location.href,
                e.head.appendChild(n)) : e = J),
                r = bt.exec(t),
                a = !i && [],
                r ? [e.createElement(r[1])] : (r = y([t], e, a),
                a && a.length && pt(a).remove(),
                pt.merge([], r.childNodes))
            }
            ,
            pt.fn.load = function(t, e, i) {
                var n, r, a, o = this, s = t.indexOf(" ");
                return s > -1 && (n = pt.trim(t.slice(s)),
                t = t.slice(0, s)),
                pt.isFunction(e) ? (i = e,
                e = void 0) : e && "object" == typeof e && (r = "POST"),
                o.length > 0 && pt.ajax({
                    url: t,
                    type: r || "GET",
                    dataType: "html",
                    data: e
                }).done(function(t) {
                    a = arguments,
                    o.html(n ? pt("<div>").append(pt.parseHTML(t)).find(n) : t)
                }).always(i && function(t, e) {
                    o.each(function() {
                        i.apply(this, a || [t.responseText, e, t])
                    })
                }
                ),
                this
            }
            ,
            pt.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(t, e) {
                pt.fn[e] = function(t) {
                    return this.on(e, t)
                }
            }),
            pt.expr.pseudos.animated = function(t) {
                return pt.grep(pt.timers, function(e) {
                    return t === e.elem
                }).length
            }
            ,
            pt.offset = {
                setOffset: function(t, e, i) {
                    var n, r, a, o, s, l, h, c = pt.css(t, "position"), u = pt(t), p = {};
                    "static" === c && (t.style.position = "relative"),
                    s = u.offset(),
                    a = pt.css(t, "top"),
                    l = pt.css(t, "left"),
                    h = ("absolute" === c || "fixed" === c) && (a + l).indexOf("auto") > -1,
                    h ? (n = u.position(),
                    o = n.top,
                    r = n.left) : (o = parseFloat(a) || 0,
                    r = parseFloat(l) || 0),
                    pt.isFunction(e) && (e = e.call(t, i, pt.extend({}, s))),
                    null != e.top && (p.top = e.top - s.top + o),
                    null != e.left && (p.left = e.left - s.left + r),
                    "using"in e ? e.using.call(t, p) : u.css(p)
                }
            },
            pt.fn.extend({
                offset: function(t) {
                    if (arguments.length)
                        return void 0 === t ? this : this.each(function(e) {
                            pt.offset.setOffset(this, t, e)
                        });
                    var e, i, n, r, a = this[0];
                    if (a)
                        return a.getClientRects().length ? (n = a.getBoundingClientRect(),
                        n.width || n.height ? (r = a.ownerDocument,
                        i = K(r),
                        e = r.documentElement,
                        {
                            top: n.top + i.pageYOffset - e.clientTop,
                            left: n.left + i.pageXOffset - e.clientLeft
                        }) : n) : {
                            top: 0,
                            left: 0
                        }
                },
                position: function() {
                    if (this[0]) {
                        var t, e, i = this[0], n = {
                            top: 0,
                            left: 0
                        };
                        return "fixed" === pt.css(i, "position") ? e = i.getBoundingClientRect() : (t = this.offsetParent(),
                        e = this.offset(),
                        pt.nodeName(t[0], "html") || (n = t.offset()),
                        n = {
                            top: n.top + pt.css(t[0], "borderTopWidth", !0),
                            left: n.left + pt.css(t[0], "borderLeftWidth", !0)
                        }),
                        {
                            top: e.top - n.top - pt.css(i, "marginTop", !0),
                            left: e.left - n.left - pt.css(i, "marginLeft", !0)
                        }
                    }
                },
                offsetParent: function() {
                    return this.map(function() {
                        for (var t = this.offsetParent; t && "static" === pt.css(t, "position"); )
                            t = t.offsetParent;
                        return t || Yt
                    })
                }
            }),
            pt.each({
                scrollLeft: "pageXOffset",
                scrollTop: "pageYOffset"
            }, function(t, e) {
                var i = "pageYOffset" === e;
                pt.fn[t] = function(n) {
                    return Ot(this, function(t, n, r) {
                        var a = K(t);
                        return void 0 === r ? a ? a[e] : t[n] : void (a ? a.scrollTo(i ? a.pageXOffset : r, i ? r : a.pageYOffset) : t[n] = r)
                    }, t, n, arguments.length)
                }
            }),
            pt.each(["top", "left"], function(t, e) {
                pt.cssHooks[e] = O(ct.pixelPosition, function(t, i) {
                    if (i)
                        return i = L(t, e),
                        re.test(i) ? pt(t).position()[e] + "px" : i
                })
            }),
            pt.each({
                Height: "height",
                Width: "width"
            }, function(t, e) {
                pt.each({
                    padding: "inner" + t,
                    content: e,
                    "": "outer" + t
                }, function(i, n) {
                    pt.fn[n] = function(r, a) {
                        var o = arguments.length && (i || "boolean" != typeof r)
                          , s = i || (r === !0 || a === !0 ? "margin" : "border");
                        return Ot(this, function(e, i, r) {
                            var a;
                            return pt.isWindow(e) ? 0 === n.indexOf("outer") ? e["inner" + t] : e.document.documentElement["client" + t] : 9 === e.nodeType ? (a = e.documentElement,
                            Math.max(e.body["scroll" + t], a["scroll" + t], e.body["offset" + t], a["offset" + t], a["client" + t])) : void 0 === r ? pt.css(e, i, s) : pt.style(e, i, r, s)
                        }, e, o ? r : void 0, o)
                    }
                })
            }),
            pt.fn.extend({
                bind: function(t, e, i) {
                    return this.on(t, null, e, i)
                },
                unbind: function(t, e) {
                    return this.off(t, null, e)
                },
                delegate: function(t, e, i, n) {
                    return this.on(e, t, i, n)
                },
                undelegate: function(t, e, i) {
                    return 1 === arguments.length ? this.off(t, "**") : this.off(e, t || "**", i)
                }
            }),
            pt.parseJSON = JSON.parse,
            "function" == typeof define && define.amd && define("jquery", [], function() {
                return pt
            });
            var We = t.jQuery
              , Xe = t.$;
            return pt.noConflict = function(e) {
                return t.$ === pt && (t.$ = Xe),
                e && t.jQuery === pt && (t.jQuery = We),
                pt
            }
            ,
            e || (t.jQuery = t.$ = pt),
            pt
        })
    }
    , {}],
    6: [function(t, e, i) {
        function n(t, e, i) {
            switch (i.length) {
            case 0:
                return t.call(e);
            case 1:
                return t.call(e, i[0]);
            case 2:
                return t.call(e, i[0], i[1]);
            case 3:
                return t.call(e, i[0], i[1], i[2])
            }
            return t.apply(e, i)
        }
        e.exports = n
    }
    , {}],
    7: [function(t, e, i) {
        function n(t, e) {
            var i = o(t) || l(t) || a(t) ? r(t.length, String) : []
              , n = i.length
              , h = !!n;
            for (var u in t)
                !e && !c.call(t, u) || h && ("length" == u || s(u, n)) || i.push(u);
            return i
        }
        var r = t("./_baseTimes")
          , a = t("./isArguments")
          , o = t("./isArray")
          , s = t("./_isIndex")
          , l = t("./isString")
          , h = Object.prototype
          , c = h.hasOwnProperty;
        e.exports = n
    }
    , {
        "./_baseTimes": 11,
        "./_isIndex": 15,
        "./isArguments": 24,
        "./isArray": 25,
        "./isString": 32
    }],
    8: [function(t, e, i) {
        function n(t, e, i) {
            var n = t[e];
            o.call(t, e) && r(n, i) && (void 0 !== i || e in t) || (t[e] = i)
        }
        var r = t("./eq")
          , a = Object.prototype
          , o = a.hasOwnProperty;
        e.exports = n
    }
    , {
        "./eq": 22
    }],
    9: [function(t, e, i) {
        function n(t) {
            if (!r(t))
                return o(t);
            var e = a(t)
              , i = [];
            for (var n in t)
                ("constructor" != n || !e && l.call(t, n)) && i.push(n);
            return i
        }
        var r = t("./isObject")
          , a = t("./_isPrototype")
          , o = t("./_nativeKeysIn")
          , s = Object.prototype
          , l = s.hasOwnProperty;
        e.exports = n
    }
    , {
        "./_isPrototype": 17,
        "./_nativeKeysIn": 18,
        "./isObject": 30
    }],
    10: [function(t, e, i) {
        function n(t, e) {
            return e = a(void 0 === e ? t.length - 1 : e, 0),
            function() {
                for (var i = arguments, n = -1, o = a(i.length - e, 0), s = Array(o); ++n < o; )
                    s[n] = i[e + n];
                n = -1;
                for (var l = Array(e + 1); ++n < e; )
                    l[n] = i[n];
                return l[e] = s,
                r(t, this, l)
            }
        }
        var r = t("./_apply")
          , a = Math.max;
        e.exports = n
    }
    , {
        "./_apply": 6
    }],
    11: [function(t, e, i) {
        function n(t, e) {
            for (var i = -1, n = Array(t); ++i < t; )
                n[i] = e(i);
            return n
        }
        e.exports = n
    }
    , {}],
    12: [function(t, e, i) {
        function n(t, e, i, n) {
            i || (i = {});
            for (var a = -1, o = e.length; ++a < o; ) {
                var s = e[a]
                  , l = n ? n(i[s], t[s], s, i, t) : void 0;
                r(i, s, void 0 === l ? t[s] : l)
            }
            return i
        }
        var r = t("./_assignValue");
        e.exports = n
    }
    , {
        "./_assignValue": 8
    }],
    13: [function(t, e, i) {
        function n(t) {
            return r(function(e, i) {
                var n = -1
                  , r = i.length
                  , o = r > 1 ? i[r - 1] : void 0
                  , s = r > 2 ? i[2] : void 0;
                for (o = t.length > 3 && "function" == typeof o ? (r--,
                o) : void 0,
                s && a(i[0], i[1], s) && (o = r < 3 ? void 0 : o,
                r = 1),
                e = Object(e); ++n < r; ) {
                    var l = i[n];
                    l && t(e, l, n, o)
                }
                return e
            })
        }
        var r = t("./_baseRest")
          , a = t("./_isIterateeCall");
        e.exports = n
    }
    , {
        "./_baseRest": 10,
        "./_isIterateeCall": 16
    }],
    14: [function(t, e, i) {
        (function(t) {
            var i = "object" == typeof t && t && t.Object === Object && t;
            e.exports = i
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    15: [function(t, e, i) {
        function n(t, e) {
            return e = null == e ? r : e,
            !!e && ("number" == typeof t || a.test(t)) && t > -1 && t % 1 == 0 && t < e
        }
        var r = 9007199254740991
          , a = /^(?:0|[1-9]\d*)$/;
        e.exports = n
    }
    , {}],
    16: [function(t, e, i) {
        function n(t, e, i) {
            if (!s(i))
                return !1;
            var n = typeof e;
            return !!("number" == n ? a(i) && o(e, i.length) : "string" == n && e in i) && r(i[e], t)
        }
        var r = t("./eq")
          , a = t("./isArrayLike")
          , o = t("./_isIndex")
          , s = t("./isObject");
        e.exports = n
    }
    , {
        "./_isIndex": 15,
        "./eq": 22,
        "./isArrayLike": 26,
        "./isObject": 30
    }],
    17: [function(t, e, i) {
        function n(t) {
            var e = t && t.constructor
              , i = "function" == typeof e && e.prototype || r;
            return t === i
        }
        var r = Object.prototype;
        e.exports = n
    }
    , {}],
    18: [function(t, e, i) {
        function n(t) {
            var e = [];
            if (null != t)
                for (var i in Object(t))
                    e.push(i);
            return e
        }
        e.exports = n
    }
    , {}],
    19: [function(t, e, i) {
        var n = t("./_freeGlobal")
          , r = "object" == typeof self && self && self.Object === Object && self
          , a = n || r || Function("return this")();
        e.exports = a
    }
    , {
        "./_freeGlobal": 14
    }],
    20: [function(t, e, i) {
        var n = t("./_copyObject")
          , r = t("./_createAssigner")
          , a = t("./keysIn")
          , o = r(function(t, e) {
            n(e, a(e), t)
        });
        e.exports = o
    }
    , {
        "./_copyObject": 12,
        "./_createAssigner": 13,
        "./keysIn": 34
    }],
    21: [function(t, e, i) {
        function n(t, e, i) {
            function n(e) {
                var i = y
                  , n = _;
                return y = _ = void 0,
                T = e,
                b = t.apply(n, i)
            }
            function c(t) {
                return T = t,
                w = setTimeout(f, e),
                S ? n(t) : b
            }
            function u(t) {
                var i = t - M
                  , n = t - T
                  , r = e - i;
                return C ? h(r, x - n) : r
            }
            function p(t) {
                var i = t - M
                  , n = t - T;
                return void 0 === M || i >= e || i < 0 || C && n >= x
            }
            function f() {
                var t = a();
                return p(t) ? d(t) : void (w = setTimeout(f, u(t)))
            }
            function d(t) {
                return w = void 0,
                A && y ? n(t) : (y = _ = void 0,
                b)
            }
            function m() {
                void 0 !== w && clearTimeout(w),
                T = 0,
                y = M = _ = w = void 0
            }
            function g() {
                return void 0 === w ? b : d(a())
            }
            function v() {
                var t = a()
                  , i = p(t);
                if (y = arguments,
                _ = this,
                M = t,
                i) {
                    if (void 0 === w)
                        return c(M);
                    if (C)
                        return w = setTimeout(f, e),
                        n(M)
                }
                return void 0 === w && (w = setTimeout(f, e)),
                b
            }
            var y, _, x, b, w, M, T = 0, S = !1, C = !1, A = !0;
            if ("function" != typeof t)
                throw new TypeError(s);
            return e = o(e) || 0,
            r(i) && (S = !!i.leading,
            C = "maxWait"in i,
            x = C ? l(o(i.maxWait) || 0, e) : x,
            A = "trailing"in i ? !!i.trailing : A),
            v.cancel = m,
            v.flush = g,
            v
        }
        var r = t("./isObject")
          , a = t("./now")
          , o = t("./toNumber")
          , s = "Expected a function"
          , l = Math.max
          , h = Math.min;
        e.exports = n
    }
    , {
        "./isObject": 30,
        "./now": 35,
        "./toNumber": 38
    }],
    22: [function(t, e, i) {
        function n(t, e) {
            return t === e || t !== t && e !== e
        }
        e.exports = n
    }
    , {}],
    23: [function(t, e, i) {
        e.exports = t("./assignIn")
    }
    , {
        "./assignIn": 20
    }],
    24: [function(t, e, i) {
        function n(t) {
            return r(t) && s.call(t, "callee") && (!h.call(t, "callee") || l.call(t) == a)
        }
        var r = t("./isArrayLikeObject")
          , a = "[object Arguments]"
          , o = Object.prototype
          , s = o.hasOwnProperty
          , l = o.toString
          , h = o.propertyIsEnumerable;
        e.exports = n
    }
    , {
        "./isArrayLikeObject": 27
    }],
    25: [function(t, e, i) {
        var n = Array.isArray;
        e.exports = n
    }
    , {}],
    26: [function(t, e, i) {
        function n(t) {
            return null != t && a(t.length) && !r(t)
        }
        var r = t("./isFunction")
          , a = t("./isLength");
        e.exports = n
    }
    , {
        "./isFunction": 28,
        "./isLength": 29
    }],
    27: [function(t, e, i) {
        function n(t) {
            return a(t) && r(t)
        }
        var r = t("./isArrayLike")
          , a = t("./isObjectLike");
        e.exports = n
    }
    , {
        "./isArrayLike": 26,
        "./isObjectLike": 31
    }],
    28: [function(t, e, i) {
        function n(t) {
            var e = r(t) ? l.call(t) : "";
            return e == a || e == o
        }
        var r = t("./isObject")
          , a = "[object Function]"
          , o = "[object GeneratorFunction]"
          , s = Object.prototype
          , l = s.toString;
        e.exports = n
    }
    , {
        "./isObject": 30
    }],
    29: [function(t, e, i) {
        function n(t) {
            return "number" == typeof t && t > -1 && t % 1 == 0 && t <= r
        }
        var r = 9007199254740991;
        e.exports = n
    }
    , {}],
    30: [function(t, e, i) {
        function n(t) {
            var e = typeof t;
            return !!t && ("object" == e || "function" == e)
        }
        e.exports = n
    }
    , {}],
    31: [function(t, e, i) {
        function n(t) {
            return !!t && "object" == typeof t
        }
        e.exports = n
    }
    , {}],
    32: [function(t, e, i) {
        function n(t) {
            return "string" == typeof t || !r(t) && a(t) && l.call(t) == o
        }
        var r = t("./isArray")
          , a = t("./isObjectLike")
          , o = "[object String]"
          , s = Object.prototype
          , l = s.toString;
        e.exports = n
    }
    , {
        "./isArray": 25,
        "./isObjectLike": 31
    }],
    33: [function(t, e, i) {
        function n(t) {
            return "symbol" == typeof t || r(t) && s.call(t) == a
        }
        var r = t("./isObjectLike")
          , a = "[object Symbol]"
          , o = Object.prototype
          , s = o.toString;
        e.exports = n
    }
    , {
        "./isObjectLike": 31
    }],
    34: [function(t, e, i) {
        function n(t) {
            return o(t) ? r(t, !0) : a(t)
        }
        var r = t("./_arrayLikeKeys")
          , a = t("./_baseKeysIn")
          , o = t("./isArrayLike");
        e.exports = n
    }
    , {
        "./_arrayLikeKeys": 7,
        "./_baseKeysIn": 9,
        "./isArrayLike": 26
    }],
    35: [function(t, e, i) {
        var n = t("./_root")
          , r = function() {
            return n.Date.now()
        };
        e.exports = r
    }
    , {
        "./_root": 19
    }],
    36: [function(t, e, i) {
        function n(t) {
            return t ? a.call(t) : t
        }
        var r = Array.prototype
          , a = r.reverse;
        e.exports = n
    }
    , {}],
    37: [function(t, e, i) {
        function n(t, e, i) {
            var n = !0
              , s = !0;
            if ("function" != typeof t)
                throw new TypeError(o);
            return a(i) && (n = "leading"in i ? !!i.leading : n,
            s = "trailing"in i ? !!i.trailing : s),
            r(t, e, {
                leading: n,
                maxWait: e,
                trailing: s
            })
        }
        var r = t("./debounce")
          , a = t("./isObject")
          , o = "Expected a function";
        e.exports = n
    }
    , {
        "./debounce": 21,
        "./isObject": 30
    }],
    38: [function(t, e, i) {
        function n(t) {
            if ("number" == typeof t)
                return t;
            if (o(t))
                return s;
            if (a(t)) {
                var e = r(t.valueOf) ? t.valueOf() : t;
                t = a(e) ? e + "" : e
            }
            if ("string" != typeof t)
                return 0 === t ? t : +t;
            t = t.replace(l, "");
            var i = c.test(t);
            return i || u.test(t) ? p(t.slice(2), i ? 2 : 8) : h.test(t) ? s : +t
        }
        var r = t("./isFunction")
          , a = t("./isObject")
          , o = t("./isSymbol")
          , s = NaN
          , l = /^\s+|\s+$/g
          , h = /^[-+]0x[0-9a-f]+$/i
          , c = /^0b[01]+$/i
          , u = /^0o[0-7]+$/i
          , p = parseInt;
        e.exports = n
    }
    , {
        "./isFunction": 28,
        "./isObject": 30,
        "./isSymbol": 33
    }],
    39: [function(t, e, i) {
        var n = {
            REVISION: "79"
        };
        "function" == typeof define && define.amd ? define("three", n) : "undefined" != typeof i && "undefined" != typeof e && (e.exports = n),
        void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
        void 0 === Math.sign && (Math.sign = function(t) {
            return t < 0 ? -1 : t > 0 ? 1 : +t
        }
        ),
        void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
            get: function() {
                return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
            }
        }),
        void 0 === Object.assign && !function() {
            Object.assign = function(t) {
                "use strict";
                if (void 0 === t || null === t)
                    throw new TypeError("Cannot convert undefined or null to object");
                for (var e = Object(t), i = 1; i < arguments.length; i++) {
                    var n = arguments[i];
                    if (void 0 !== n && null !== n)
                        for (var r in n)
                            Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
        }(),
        Object.assign(n, {
            MOUSE: {
                LEFT: 0,
                MIDDLE: 1,
                RIGHT: 2
            },
            CullFaceNone: 0,
            CullFaceBack: 1,
            CullFaceFront: 2,
            CullFaceFrontBack: 3,
            FrontFaceDirectionCW: 0,
            FrontFaceDirectionCCW: 1,
            BasicShadowMap: 0,
            PCFShadowMap: 1,
            PCFSoftShadowMap: 2,
            FrontSide: 0,
            BackSide: 1,
            DoubleSide: 2,
            FlatShading: 1,
            SmoothShading: 2,
            NoColors: 0,
            FaceColors: 1,
            VertexColors: 2,
            NoBlending: 0,
            NormalBlending: 1,
            AdditiveBlending: 2,
            SubtractiveBlending: 3,
            MultiplyBlending: 4,
            CustomBlending: 5,
            AddEquation: 100,
            SubtractEquation: 101,
            ReverseSubtractEquation: 102,
            MinEquation: 103,
            MaxEquation: 104,
            ZeroFactor: 200,
            OneFactor: 201,
            SrcColorFactor: 202,
            OneMinusSrcColorFactor: 203,
            SrcAlphaFactor: 204,
            OneMinusSrcAlphaFactor: 205,
            DstAlphaFactor: 206,
            OneMinusDstAlphaFactor: 207,
            DstColorFactor: 208,
            OneMinusDstColorFactor: 209,
            SrcAlphaSaturateFactor: 210,
            NeverDepth: 0,
            AlwaysDepth: 1,
            LessDepth: 2,
            LessEqualDepth: 3,
            EqualDepth: 4,
            GreaterEqualDepth: 5,
            GreaterDepth: 6,
            NotEqualDepth: 7,
            MultiplyOperation: 0,
            MixOperation: 1,
            AddOperation: 2,
            NoToneMapping: 0,
            LinearToneMapping: 1,
            ReinhardToneMapping: 2,
            Uncharted2ToneMapping: 3,
            CineonToneMapping: 4,
            UVMapping: 300,
            CubeReflectionMapping: 301,
            CubeRefractionMapping: 302,
            EquirectangularReflectionMapping: 303,
            EquirectangularRefractionMapping: 304,
            SphericalReflectionMapping: 305,
            CubeUVReflectionMapping: 306,
            CubeUVRefractionMapping: 307,
            RepeatWrapping: 1e3,
            ClampToEdgeWrapping: 1001,
            MirroredRepeatWrapping: 1002,
            NearestFilter: 1003,
            NearestMipMapNearestFilter: 1004,
            NearestMipMapLinearFilter: 1005,
            LinearFilter: 1006,
            LinearMipMapNearestFilter: 1007,
            LinearMipMapLinearFilter: 1008,
            UnsignedByteType: 1009,
            ByteType: 1010,
            ShortType: 1011,
            UnsignedShortType: 1012,
            IntType: 1013,
            UnsignedIntType: 1014,
            FloatType: 1015,
            HalfFloatType: 1025,
            UnsignedShort4444Type: 1016,
            UnsignedShort5551Type: 1017,
            UnsignedShort565Type: 1018,
            AlphaFormat: 1019,
            RGBFormat: 1020,
            RGBAFormat: 1021,
            LuminanceFormat: 1022,
            LuminanceAlphaFormat: 1023,
            RGBEFormat: n.RGBAFormat,
            DepthFormat: 1026,
            RGB_S3TC_DXT1_Format: 2001,
            RGBA_S3TC_DXT1_Format: 2002,
            RGBA_S3TC_DXT3_Format: 2003,
            RGBA_S3TC_DXT5_Format: 2004,
            RGB_PVRTC_4BPPV1_Format: 2100,
            RGB_PVRTC_2BPPV1_Format: 2101,
            RGBA_PVRTC_4BPPV1_Format: 2102,
            RGBA_PVRTC_2BPPV1_Format: 2103,
            RGB_ETC1_Format: 2151,
            LoopOnce: 2200,
            LoopRepeat: 2201,
            LoopPingPong: 2202,
            InterpolateDiscrete: 2300,
            InterpolateLinear: 2301,
            InterpolateSmooth: 2302,
            ZeroCurvatureEnding: 2400,
            ZeroSlopeEnding: 2401,
            WrapAroundEnding: 2402,
            TrianglesDrawMode: 0,
            TriangleStripDrawMode: 1,
            TriangleFanDrawMode: 2,
            LinearEncoding: 3e3,
            sRGBEncoding: 3001,
            GammaEncoding: 3007,
            RGBEEncoding: 3002,
            LogLuvEncoding: 3003,
            RGBM7Encoding: 3004,
            RGBM16Encoding: 3005,
            RGBDEncoding: 3006,
            BasicDepthPacking: 3200,
            RGBADepthPacking: 3201
        }),
        n.Color = function(t, e, i) {
            return void 0 === e && void 0 === i ? this.set(t) : this.setRGB(t, e, i)
        }
        ,
        n.Color.prototype = {
            constructor: n.Color,
            r: 1,
            g: 1,
            b: 1,
            set: function(t) {
                return t instanceof n.Color ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
                this
            },
            setScalar: function(t) {
                this.r = t,
                this.g = t,
                this.b = t
            },
            setHex: function(t) {
                return t = Math.floor(t),
                this.r = (t >> 16 & 255) / 255,
                this.g = (t >> 8 & 255) / 255,
                this.b = (255 & t) / 255,
                this
            },
            setRGB: function(t, e, i) {
                return this.r = t,
                this.g = e,
                this.b = i,
                this
            },
            setHSL: function() {
                function t(t, e, i) {
                    return i < 0 && (i += 1),
                    i > 1 && (i -= 1),
                    i < 1 / 6 ? t + 6 * (e - t) * i : i < .5 ? e : i < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - i) : t
                }
                return function(e, i, r) {
                    if (e = n.Math.euclideanModulo(e, 1),
                    i = n.Math.clamp(i, 0, 1),
                    r = n.Math.clamp(r, 0, 1),
                    0 === i)
                        this.r = this.g = this.b = r;
                    else {
                        var a = r <= .5 ? r * (1 + i) : r + i - r * i
                          , o = 2 * r - a;
                        this.r = t(o, a, e + 1 / 3),
                        this.g = t(o, a, e),
                        this.b = t(o, a, e - 1 / 3)
                    }
                    return this
                }
            }(),
            setStyle: function(t) {
                function e(t) {
                    void 0 !== t && parseFloat(t) < 1
                }
                var i;
                if (i = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                    var r, a = i[1], o = i[2];
                    switch (a) {
                    case "rgb":
                    case "rgba":
                        if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                            return this.r = Math.min(255, parseInt(r[1], 10)) / 255,
                            this.g = Math.min(255, parseInt(r[2], 10)) / 255,
                            this.b = Math.min(255, parseInt(r[3], 10)) / 255,
                            e(r[5]),
                            this;
                        if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                            return this.r = Math.min(100, parseInt(r[1], 10)) / 100,
                            this.g = Math.min(100, parseInt(r[2], 10)) / 100,
                            this.b = Math.min(100, parseInt(r[3], 10)) / 100,
                            e(r[5]),
                            this;
                        break;
                    case "hsl":
                    case "hsla":
                        if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
                            var s = parseFloat(r[1]) / 360
                              , l = parseInt(r[2], 10) / 100
                              , h = parseInt(r[3], 10) / 100;
                            return e(r[5]),
                            this.setHSL(s, l, h)
                        }
                    }
                } else if (i = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                    var c = i[1]
                      , u = c.length;
                    if (3 === u)
                        return this.r = parseInt(c.charAt(0) + c.charAt(0), 16) / 255,
                        this.g = parseInt(c.charAt(1) + c.charAt(1), 16) / 255,
                        this.b = parseInt(c.charAt(2) + c.charAt(2), 16) / 255,
                        this;
                    if (6 === u)
                        return this.r = parseInt(c.charAt(0) + c.charAt(1), 16) / 255,
                        this.g = parseInt(c.charAt(2) + c.charAt(3), 16) / 255,
                        this.b = parseInt(c.charAt(4) + c.charAt(5), 16) / 255,
                        this
                }
                if (t && t.length > 0) {
                    var c = n.ColorKeywords[t];
                    void 0 !== c && this.setHex(c)
                }
                return this
            },
            clone: function() {
                return new this.constructor(this.r,this.g,this.b)
            },
            copy: function(t) {
                return this.r = t.r,
                this.g = t.g,
                this.b = t.b,
                this
            },
            copyGammaToLinear: function(t, e) {
                return void 0 === e && (e = 2),
                this.r = Math.pow(t.r, e),
                this.g = Math.pow(t.g, e),
                this.b = Math.pow(t.b, e),
                this
            },
            copyLinearToGamma: function(t, e) {
                void 0 === e && (e = 2);
                var i = e > 0 ? 1 / e : 1;
                return this.r = Math.pow(t.r, i),
                this.g = Math.pow(t.g, i),
                this.b = Math.pow(t.b, i),
                this
            },
            convertGammaToLinear: function() {
                var t = this.r
                  , e = this.g
                  , i = this.b;
                return this.r = t * t,
                this.g = e * e,
                this.b = i * i,
                this
            },
            convertLinearToGamma: function() {
                return this.r = Math.sqrt(this.r),
                this.g = Math.sqrt(this.g),
                this.b = Math.sqrt(this.b),
                this
            },
            getHex: function() {
                return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
            },
            getHexString: function() {
                return ("000000" + this.getHex().toString(16)).slice(-6)
            },
            getHSL: function(t) {
                var e, i, n = t || {
                    h: 0,
                    s: 0,
                    l: 0
                }, r = this.r, a = this.g, o = this.b, s = Math.max(r, a, o), l = Math.min(r, a, o), h = (l + s) / 2;
                if (l === s)
                    e = 0,
                    i = 0;
                else {
                    var c = s - l;
                    switch (i = h <= .5 ? c / (s + l) : c / (2 - s - l),
                    s) {
                    case r:
                        e = (a - o) / c + (a < o ? 6 : 0);
                        break;
                    case a:
                        e = (o - r) / c + 2;
                        break;
                    case o:
                        e = (r - a) / c + 4
                    }
                    e /= 6
                }
                return n.h = e,
                n.s = i,
                n.l = h,
                n
            },
            getStyle: function() {
                return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
            },
            offsetHSL: function(t, e, i) {
                var n = this.getHSL();
                return n.h += t,
                n.s += e,
                n.l += i,
                this.setHSL(n.h, n.s, n.l),
                this
            },
            add: function(t) {
                return this.r += t.r,
                this.g += t.g,
                this.b += t.b,
                this
            },
            addColors: function(t, e) {
                return this.r = t.r + e.r,
                this.g = t.g + e.g,
                this.b = t.b + e.b,
                this
            },
            addScalar: function(t) {
                return this.r += t,
                this.g += t,
                this.b += t,
                this
            },
            sub: function(t) {
                return this.r = Math.max(0, this.r - t.r),
                this.g = Math.max(0, this.g - t.g),
                this.b = Math.max(0, this.b - t.b),
                this
            },
            multiply: function(t) {
                return this.r *= t.r,
                this.g *= t.g,
                this.b *= t.b,
                this
            },
            multiplyScalar: function(t) {
                return this.r *= t,
                this.g *= t,
                this.b *= t,
                this
            },
            lerp: function(t, e) {
                return this.r += (t.r - this.r) * e,
                this.g += (t.g - this.g) * e,
                this.b += (t.b - this.b) * e,
                this
            },
            equals: function(t) {
                return t.r === this.r && t.g === this.g && t.b === this.b
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.r = t[e],
                this.g = t[e + 1],
                this.b = t[e + 2],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.r,
                t[e + 1] = this.g,
                t[e + 2] = this.b,
                t
            }
        },
        n.ColorKeywords = {
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        },
        n.Quaternion = function(t, e, i, n) {
            this._x = t || 0,
            this._y = e || 0,
            this._z = i || 0,
            this._w = void 0 !== n ? n : 1
        }
        ,
        n.Quaternion.prototype = {
            constructor: n.Quaternion,
            get x() {
                return this._x
            },
            set x(t) {
                this._x = t,
                this.onChangeCallback()
            },
            get y() {
                return this._y
            },
            set y(t) {
                this._y = t,
                this.onChangeCallback()
            },
            get z() {
                return this._z
            },
            set z(t) {
                this._z = t,
                this.onChangeCallback()
            },
            get w() {
                return this._w
            },
            set w(t) {
                this._w = t,
                this.onChangeCallback()
            },
            set: function(t, e, i, n) {
                return this._x = t,
                this._y = e,
                this._z = i,
                this._w = n,
                this.onChangeCallback(),
                this
            },
            clone: function() {
                return new this.constructor(this._x,this._y,this._z,this._w)
            },
            copy: function(t) {
                return this._x = t.x,
                this._y = t.y,
                this._z = t.z,
                this._w = t.w,
                this.onChangeCallback(),
                this
            },
            setFromEuler: function(t, e) {
                if (t instanceof n.Euler == !1)
                    throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                var i = Math.cos(t._x / 2)
                  , r = Math.cos(t._y / 2)
                  , a = Math.cos(t._z / 2)
                  , o = Math.sin(t._x / 2)
                  , s = Math.sin(t._y / 2)
                  , l = Math.sin(t._z / 2)
                  , h = t.order;
                return "XYZ" === h ? (this._x = o * r * a + i * s * l,
                this._y = i * s * a - o * r * l,
                this._z = i * r * l + o * s * a,
                this._w = i * r * a - o * s * l) : "YXZ" === h ? (this._x = o * r * a + i * s * l,
                this._y = i * s * a - o * r * l,
                this._z = i * r * l - o * s * a,
                this._w = i * r * a + o * s * l) : "ZXY" === h ? (this._x = o * r * a - i * s * l,
                this._y = i * s * a + o * r * l,
                this._z = i * r * l + o * s * a,
                this._w = i * r * a - o * s * l) : "ZYX" === h ? (this._x = o * r * a - i * s * l,
                this._y = i * s * a + o * r * l,
                this._z = i * r * l - o * s * a,
                this._w = i * r * a + o * s * l) : "YZX" === h ? (this._x = o * r * a + i * s * l,
                this._y = i * s * a + o * r * l,
                this._z = i * r * l - o * s * a,
                this._w = i * r * a - o * s * l) : "XZY" === h && (this._x = o * r * a - i * s * l,
                this._y = i * s * a - o * r * l,
                this._z = i * r * l + o * s * a,
                this._w = i * r * a + o * s * l),
                e !== !1 && this.onChangeCallback(),
                this
            },
            setFromAxisAngle: function(t, e) {
                var i = e / 2
                  , n = Math.sin(i);
                return this._x = t.x * n,
                this._y = t.y * n,
                this._z = t.z * n,
                this._w = Math.cos(i),
                this.onChangeCallback(),
                this
            },
            setFromRotationMatrix: function(t) {
                var e, i = t.elements, n = i[0], r = i[4], a = i[8], o = i[1], s = i[5], l = i[9], h = i[2], c = i[6], u = i[10], p = n + s + u;
                return p > 0 ? (e = .5 / Math.sqrt(p + 1),
                this._w = .25 / e,
                this._x = (c - l) * e,
                this._y = (a - h) * e,
                this._z = (o - r) * e) : n > s && n > u ? (e = 2 * Math.sqrt(1 + n - s - u),
                this._w = (c - l) / e,
                this._x = .25 * e,
                this._y = (r + o) / e,
                this._z = (a + h) / e) : s > u ? (e = 2 * Math.sqrt(1 + s - n - u),
                this._w = (a - h) / e,
                this._x = (r + o) / e,
                this._y = .25 * e,
                this._z = (l + c) / e) : (e = 2 * Math.sqrt(1 + u - n - s),
                this._w = (o - r) / e,
                this._x = (a + h) / e,
                this._y = (l + c) / e,
                this._z = .25 * e),
                this.onChangeCallback(),
                this
            },
            setFromUnitVectors: function() {
                var t, e, i = 1e-6;
                return function(r, a) {
                    return void 0 === t && (t = new n.Vector3),
                    e = r.dot(a) + 1,
                    e < i ? (e = 0,
                    Math.abs(r.x) > Math.abs(r.z) ? t.set(-r.y, r.x, 0) : t.set(0, -r.z, r.y)) : t.crossVectors(r, a),
                    this._x = t.x,
                    this._y = t.y,
                    this._z = t.z,
                    this._w = e,
                    this.normalize()
                }
            }(),
            inverse: function() {
                return this.conjugate().normalize()
            },
            conjugate: function() {
                return this._x *= -1,
                this._y *= -1,
                this._z *= -1,
                this.onChangeCallback(),
                this
            },
            dot: function(t) {
                return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
            },
            lengthSq: function() {
                return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
            },
            length: function() {
                return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
            },
            normalize: function() {
                var t = this.length();
                return 0 === t ? (this._x = 0,
                this._y = 0,
                this._z = 0,
                this._w = 1) : (t = 1 / t,
                this._x = this._x * t,
                this._y = this._y * t,
                this._z = this._z * t,
                this._w = this._w * t),
                this.onChangeCallback(),
                this
            },
            multiply: function(t, e) {
                return void 0 !== e ? this.multiplyQuaternions(t, e) : this.multiplyQuaternions(this, t)
            },
            premultiply: function(t) {
                return this.multiplyQuaternions(t, this)
            },
            multiplyQuaternions: function(t, e) {
                var i = t._x
                  , n = t._y
                  , r = t._z
                  , a = t._w
                  , o = e._x
                  , s = e._y
                  , l = e._z
                  , h = e._w;
                return this._x = i * h + a * o + n * l - r * s,
                this._y = n * h + a * s + r * o - i * l,
                this._z = r * h + a * l + i * s - n * o,
                this._w = a * h - i * o - n * s - r * l,
                this.onChangeCallback(),
                this
            },
            slerp: function(t, e) {
                if (0 === e)
                    return this;
                if (1 === e)
                    return this.copy(t);
                var i = this._x
                  , n = this._y
                  , r = this._z
                  , a = this._w
                  , o = a * t._w + i * t._x + n * t._y + r * t._z;
                if (o < 0 ? (this._w = -t._w,
                this._x = -t._x,
                this._y = -t._y,
                this._z = -t._z,
                o = -o) : this.copy(t),
                o >= 1)
                    return this._w = a,
                    this._x = i,
                    this._y = n,
                    this._z = r,
                    this;
                var s = Math.sqrt(1 - o * o);
                if (Math.abs(s) < .001)
                    return this._w = .5 * (a + this._w),
                    this._x = .5 * (i + this._x),
                    this._y = .5 * (n + this._y),
                    this._z = .5 * (r + this._z),
                    this;
                var l = Math.atan2(s, o)
                  , h = Math.sin((1 - e) * l) / s
                  , c = Math.sin(e * l) / s;
                return this._w = a * h + this._w * c,
                this._x = i * h + this._x * c,
                this._y = n * h + this._y * c,
                this._z = r * h + this._z * c,
                this.onChangeCallback(),
                this
            },
            equals: function(t) {
                return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this._x = t[e],
                this._y = t[e + 1],
                this._z = t[e + 2],
                this._w = t[e + 3],
                this.onChangeCallback(),
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this._x,
                t[e + 1] = this._y,
                t[e + 2] = this._z,
                t[e + 3] = this._w,
                t
            },
            onChange: function(t) {
                return this.onChangeCallback = t,
                this
            },
            onChangeCallback: function() {}
        },
        Object.assign(n.Quaternion, {
            slerp: function(t, e, i, n) {
                return i.copy(t).slerp(e, n)
            },
            slerpFlat: function(t, e, i, n, r, a, o) {
                var s = i[n + 0]
                  , l = i[n + 1]
                  , h = i[n + 2]
                  , c = i[n + 3]
                  , u = r[a + 0]
                  , p = r[a + 1]
                  , f = r[a + 2]
                  , d = r[a + 3];
                if (c !== d || s !== u || l !== p || h !== f) {
                    var m = 1 - o
                      , g = s * u + l * p + h * f + c * d
                      , v = g >= 0 ? 1 : -1
                      , y = 1 - g * g;
                    if (y > Number.EPSILON) {
                        var _ = Math.sqrt(y)
                          , x = Math.atan2(_, g * v);
                        m = Math.sin(m * x) / _,
                        o = Math.sin(o * x) / _
                    }
                    var b = o * v;
                    if (s = s * m + u * b,
                    l = l * m + p * b,
                    h = h * m + f * b,
                    c = c * m + d * b,
                    m === 1 - o) {
                        var w = 1 / Math.sqrt(s * s + l * l + h * h + c * c);
                        s *= w,
                        l *= w,
                        h *= w,
                        c *= w
                    }
                }
                t[e] = s,
                t[e + 1] = l,
                t[e + 2] = h,
                t[e + 3] = c
            }
        }),
        n.Vector2 = function(t, e) {
            this.x = t || 0,
            this.y = e || 0
        }
        ,
        n.Vector2.prototype = {
            constructor: n.Vector2,
            get width() {
                return this.x
            },
            set width(t) {
                this.x = t
            },
            get height() {
                return this.y
            },
            set height(t) {
                this.y = t
            },
            set: function(t, e) {
                return this.x = t,
                this.y = e,
                this
            },
            setScalar: function(t) {
                return this.x = t,
                this.y = t,
                this
            },
            setX: function(t) {
                return this.x = t,
                this
            },
            setY: function(t) {
                return this.y = t,
                this
            },
            setComponent: function(t, e) {
                switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            getComponent: function(t) {
                switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            clone: function() {
                return new this.constructor(this.x,this.y)
            },
            copy: function(t) {
                return this.x = t.x,
                this.y = t.y,
                this
            },
            add: function(t, e) {
                return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                this.y += t.y,
                this)
            },
            addScalar: function(t) {
                return this.x += t,
                this.y += t,
                this
            },
            addVectors: function(t, e) {
                return this.x = t.x + e.x,
                this.y = t.y + e.y,
                this
            },
            addScaledVector: function(t, e) {
                return this.x += t.x * e,
                this.y += t.y * e,
                this
            },
            sub: function(t, e) {
                return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                this.y -= t.y,
                this)
            },
            subScalar: function(t) {
                return this.x -= t,
                this.y -= t,
                this
            },
            subVectors: function(t, e) {
                return this.x = t.x - e.x,
                this.y = t.y - e.y,
                this
            },
            multiply: function(t) {
                return this.x *= t.x,
                this.y *= t.y,
                this
            },
            multiplyScalar: function(t) {
                return isFinite(t) ? (this.x *= t,
                this.y *= t) : (this.x = 0,
                this.y = 0),
                this
            },
            divide: function(t) {
                return this.x /= t.x,
                this.y /= t.y,
                this
            },
            divideScalar: function(t) {
                return this.multiplyScalar(1 / t)
            },
            min: function(t) {
                return this.x = Math.min(this.x, t.x),
                this.y = Math.min(this.y, t.y),
                this
            },
            max: function(t) {
                return this.x = Math.max(this.x, t.x),
                this.y = Math.max(this.y, t.y),
                this
            },
            clamp: function(t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                this.y = Math.max(t.y, Math.min(e.y, this.y)),
                this
            },
            clampScalar: function() {
                var t, e;
                return function(i, r) {
                    return void 0 === t && (t = new n.Vector2,
                    e = new n.Vector2),
                    t.set(i, i),
                    e.set(r, r),
                    this.clamp(t, e)
                }
            }(),
            clampLength: function(t, e) {
                var i = this.length();
                return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
            },
            floor: function() {
                return this.x = Math.floor(this.x),
                this.y = Math.floor(this.y),
                this
            },
            ceil: function() {
                return this.x = Math.ceil(this.x),
                this.y = Math.ceil(this.y),
                this
            },
            round: function() {
                return this.x = Math.round(this.x),
                this.y = Math.round(this.y),
                this
            },
            roundToZero: function() {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                this
            },
            negate: function() {
                return this.x = -this.x,
                this.y = -this.y,
                this
            },
            dot: function(t) {
                return this.x * t.x + this.y * t.y
            },
            lengthSq: function() {
                return this.x * this.x + this.y * this.y
            },
            length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y)
            },
            lengthManhattan: function() {
                return Math.abs(this.x) + Math.abs(this.y)
            },
            normalize: function() {
                return this.divideScalar(this.length())
            },
            angle: function() {
                var t = Math.atan2(this.y, this.x);
                return t < 0 && (t += 2 * Math.PI),
                t
            },
            distanceTo: function(t) {
                return Math.sqrt(this.distanceToSquared(t))
            },
            distanceToSquared: function(t) {
                var e = this.x - t.x
                  , i = this.y - t.y;
                return e * e + i * i
            },
            distanceToManhattan: function(t) {
                return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
            },
            setLength: function(t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function(t, e) {
                return this.x += (t.x - this.x) * e,
                this.y += (t.y - this.y) * e,
                this
            },
            lerpVectors: function(t, e, i) {
                return this.subVectors(e, t).multiplyScalar(i).add(t)
            },
            equals: function(t) {
                return t.x === this.x && t.y === this.y
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.x = t[e],
                this.y = t[e + 1],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.x,
                t[e + 1] = this.y,
                t
            },
            fromAttribute: function(t, e, i) {
                return void 0 === i && (i = 0),
                e = e * t.itemSize + i,
                this.x = t.array[e],
                this.y = t.array[e + 1],
                this
            },
            rotateAround: function(t, e) {
                var i = Math.cos(e)
                  , n = Math.sin(e)
                  , r = this.x - t.x
                  , a = this.y - t.y;
                return this.x = r * i - a * n + t.x,
                this.y = r * n + a * i + t.y,
                this
            }
        },
        n.Vector3 = function(t, e, i) {
            this.x = t || 0,
            this.y = e || 0,
            this.z = i || 0
        }
        ,
        n.Vector3.prototype = {
            constructor: n.Vector3,
            set: function(t, e, i) {
                return this.x = t,
                this.y = e,
                this.z = i,
                this
            },
            setScalar: function(t) {
                return this.x = t,
                this.y = t,
                this.z = t,
                this
            },
            setX: function(t) {
                return this.x = t,
                this
            },
            setY: function(t) {
                return this.y = t,
                this
            },
            setZ: function(t) {
                return this.z = t,
                this
            },
            setComponent: function(t, e) {
                switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                case 2:
                    this.z = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            getComponent: function(t) {
                switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            clone: function() {
                return new this.constructor(this.x,this.y,this.z)
            },
            copy: function(t) {
                return this.x = t.x,
                this.y = t.y,
                this.z = t.z,
                this
            },
            add: function(t, e) {
                return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                this.y += t.y,
                this.z += t.z,
                this)
            },
            addScalar: function(t) {
                return this.x += t,
                this.y += t,
                this.z += t,
                this
            },
            addVectors: function(t, e) {
                return this.x = t.x + e.x,
                this.y = t.y + e.y,
                this.z = t.z + e.z,
                this
            },
            addScaledVector: function(t, e) {
                return this.x += t.x * e,
                this.y += t.y * e,
                this.z += t.z * e,
                this
            },
            sub: function(t, e) {
                return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                this.y -= t.y,
                this.z -= t.z,
                this)
            },
            subScalar: function(t) {
                return this.x -= t,
                this.y -= t,
                this.z -= t,
                this
            },
            subVectors: function(t, e) {
                return this.x = t.x - e.x,
                this.y = t.y - e.y,
                this.z = t.z - e.z,
                this
            },
            multiply: function(t, e) {
                return void 0 !== e ? this.multiplyVectors(t, e) : (this.x *= t.x,
                this.y *= t.y,
                this.z *= t.z,
                this)
            },
            multiplyScalar: function(t) {
                return isFinite(t) ? (this.x *= t,
                this.y *= t,
                this.z *= t) : (this.x = 0,
                this.y = 0,
                this.z = 0),
                this
            },
            multiplyVectors: function(t, e) {
                return this.x = t.x * e.x,
                this.y = t.y * e.y,
                this.z = t.z * e.z,
                this
            },
            applyEuler: function() {
                var t;
                return function(e) {
                    return e instanceof n.Euler == !1,
                    void 0 === t && (t = new n.Quaternion),
                    this.applyQuaternion(t.setFromEuler(e))
                }
            }(),
            applyAxisAngle: function() {
                var t;
                return function(e, i) {
                    return void 0 === t && (t = new n.Quaternion),
                    this.applyQuaternion(t.setFromAxisAngle(e, i))
                }
            }(),
            applyMatrix3: function(t) {
                var e = this.x
                  , i = this.y
                  , n = this.z
                  , r = t.elements;
                return this.x = r[0] * e + r[3] * i + r[6] * n,
                this.y = r[1] * e + r[4] * i + r[7] * n,
                this.z = r[2] * e + r[5] * i + r[8] * n,
                this
            },
            applyMatrix4: function(t) {
                var e = this.x
                  , i = this.y
                  , n = this.z
                  , r = t.elements;
                return this.x = r[0] * e + r[4] * i + r[8] * n + r[12],
                this.y = r[1] * e + r[5] * i + r[9] * n + r[13],
                this.z = r[2] * e + r[6] * i + r[10] * n + r[14],
                this
            },
            applyProjection: function(t) {
                var e = this.x
                  , i = this.y
                  , n = this.z
                  , r = t.elements
                  , a = 1 / (r[3] * e + r[7] * i + r[11] * n + r[15]);
                return this.x = (r[0] * e + r[4] * i + r[8] * n + r[12]) * a,
                this.y = (r[1] * e + r[5] * i + r[9] * n + r[13]) * a,
                this.z = (r[2] * e + r[6] * i + r[10] * n + r[14]) * a,
                this
            },
            applyQuaternion: function(t) {
                var e = this.x
                  , i = this.y
                  , n = this.z
                  , r = t.x
                  , a = t.y
                  , o = t.z
                  , s = t.w
                  , l = s * e + a * n - o * i
                  , h = s * i + o * e - r * n
                  , c = s * n + r * i - a * e
                  , u = -r * e - a * i - o * n;
                return this.x = l * s + u * -r + h * -o - c * -a,
                this.y = h * s + u * -a + c * -r - l * -o,
                this.z = c * s + u * -o + l * -a - h * -r,
                this
            },
            project: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)),
                    this.applyProjection(t)
                }
            }(),
            unproject: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)),
                    this.applyProjection(t)
                }
            }(),
            transformDirection: function(t) {
                var e = this.x
                  , i = this.y
                  , n = this.z
                  , r = t.elements;
                return this.x = r[0] * e + r[4] * i + r[8] * n,
                this.y = r[1] * e + r[5] * i + r[9] * n,
                this.z = r[2] * e + r[6] * i + r[10] * n,
                this.normalize()
            },
            divide: function(t) {
                return this.x /= t.x,
                this.y /= t.y,
                this.z /= t.z,
                this
            },
            divideScalar: function(t) {
                return this.multiplyScalar(1 / t)
            },
            min: function(t) {
                return this.x = Math.min(this.x, t.x),
                this.y = Math.min(this.y, t.y),
                this.z = Math.min(this.z, t.z),
                this
            },
            max: function(t) {
                return this.x = Math.max(this.x, t.x),
                this.y = Math.max(this.y, t.y),
                this.z = Math.max(this.z, t.z),
                this
            },
            clamp: function(t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                this.y = Math.max(t.y, Math.min(e.y, this.y)),
                this.z = Math.max(t.z, Math.min(e.z, this.z)),
                this
            },
            clampScalar: function() {
                var t, e;
                return function(i, r) {
                    return void 0 === t && (t = new n.Vector3,
                    e = new n.Vector3),
                    t.set(i, i, i),
                    e.set(r, r, r),
                    this.clamp(t, e)
                }
            }(),
            clampLength: function(t, e) {
                var i = this.length();
                return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
            },
            floor: function() {
                return this.x = Math.floor(this.x),
                this.y = Math.floor(this.y),
                this.z = Math.floor(this.z),
                this
            },
            ceil: function() {
                return this.x = Math.ceil(this.x),
                this.y = Math.ceil(this.y),
                this.z = Math.ceil(this.z),
                this
            },
            round: function() {
                return this.x = Math.round(this.x),
                this.y = Math.round(this.y),
                this.z = Math.round(this.z),
                this
            },
            roundToZero: function() {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                this
            },
            negate: function() {
                return this.x = -this.x,
                this.y = -this.y,
                this.z = -this.z,
                this
            },
            dot: function(t) {
                return this.x * t.x + this.y * t.y + this.z * t.z
            },
            lengthSq: function() {
                return this.x * this.x + this.y * this.y + this.z * this.z
            },
            length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
            },
            lengthManhattan: function() {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
            },
            normalize: function() {
                return this.divideScalar(this.length())
            },
            setLength: function(t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function(t, e) {
                return this.x += (t.x - this.x) * e,
                this.y += (t.y - this.y) * e,
                this.z += (t.z - this.z) * e,
                this
            },
            lerpVectors: function(t, e, i) {
                return this.subVectors(e, t).multiplyScalar(i).add(t)
            },
            cross: function(t, e) {
                if (void 0 !== e)
                    return this.crossVectors(t, e);
                var i = this.x
                  , n = this.y
                  , r = this.z;
                return this.x = n * t.z - r * t.y,
                this.y = r * t.x - i * t.z,
                this.z = i * t.y - n * t.x,
                this
            },
            crossVectors: function(t, e) {
                var i = t.x
                  , n = t.y
                  , r = t.z
                  , a = e.x
                  , o = e.y
                  , s = e.z;
                return this.x = n * s - r * o,
                this.y = r * a - i * s,
                this.z = i * o - n * a,
                this
            },
            projectOnVector: function(t) {
                var e = t.dot(this) / t.lengthSq();
                return this.copy(t).multiplyScalar(e)
            },
            projectOnPlane: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Vector3),
                    t.copy(this).projectOnVector(e),
                    this.sub(t)
                }
            }(),
            reflect: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Vector3),
                    this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
                }
            }(),
            angleTo: function(t) {
                var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
                return Math.acos(n.Math.clamp(e, -1, 1))
            },
            distanceTo: function(t) {
                return Math.sqrt(this.distanceToSquared(t))
            },
            distanceToSquared: function(t) {
                var e = this.x - t.x
                  , i = this.y - t.y
                  , n = this.z - t.z;
                return e * e + i * i + n * n
            },
            distanceToManhattan: function(t) {
                return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
            },
            setFromSpherical: function(t) {
                var e = Math.sin(t.phi) * t.radius;
                return this.x = e * Math.sin(t.theta),
                this.y = Math.cos(t.phi) * t.radius,
                this.z = e * Math.cos(t.theta),
                this
            },
            setFromMatrixPosition: function(t) {
                return this.setFromMatrixColumn(t, 3)
            },
            setFromMatrixScale: function(t) {
                var e = this.setFromMatrixColumn(t, 0).length()
                  , i = this.setFromMatrixColumn(t, 1).length()
                  , n = this.setFromMatrixColumn(t, 2).length();
                return this.x = e,
                this.y = i,
                this.z = n,
                this
            },
            setFromMatrixColumn: function(t, e) {
                if ("number" == typeof t) {
                    var i = t;
                    t = e,
                    e = i
                }
                return this.fromArray(t.elements, 4 * e)
            },
            equals: function(t) {
                return t.x === this.x && t.y === this.y && t.z === this.z
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.x = t[e],
                this.y = t[e + 1],
                this.z = t[e + 2],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.x,
                t[e + 1] = this.y,
                t[e + 2] = this.z,
                t
            },
            fromAttribute: function(t, e, i) {
                return void 0 === i && (i = 0),
                e = e * t.itemSize + i,
                this.x = t.array[e],
                this.y = t.array[e + 1],
                this.z = t.array[e + 2],
                this
            }
        },
        n.Vector4 = function(t, e, i, n) {
            this.x = t || 0,
            this.y = e || 0,
            this.z = i || 0,
            this.w = void 0 !== n ? n : 1
        }
        ,
        n.Vector4.prototype = {
            constructor: n.Vector4,
            set: function(t, e, i, n) {
                return this.x = t,
                this.y = e,
                this.z = i,
                this.w = n,
                this
            },
            setScalar: function(t) {
                return this.x = t,
                this.y = t,
                this.z = t,
                this.w = t,
                this
            },
            setX: function(t) {
                return this.x = t,
                this
            },
            setY: function(t) {
                return this.y = t,
                this
            },
            setZ: function(t) {
                return this.z = t,
                this
            },
            setW: function(t) {
                return this.w = t,
                this
            },
            setComponent: function(t, e) {
                switch (t) {
                case 0:
                    this.x = e;
                    break;
                case 1:
                    this.y = e;
                    break;
                case 2:
                    this.z = e;
                    break;
                case 3:
                    this.w = e;
                    break;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            getComponent: function(t) {
                switch (t) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                case 3:
                    return this.w;
                default:
                    throw new Error("index is out of range: " + t)
                }
            },
            clone: function() {
                return new this.constructor(this.x,this.y,this.z,this.w)
            },
            copy: function(t) {
                return this.x = t.x,
                this.y = t.y,
                this.z = t.z,
                this.w = void 0 !== t.w ? t.w : 1,
                this
            },
            add: function(t, e) {
                return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                this.y += t.y,
                this.z += t.z,
                this.w += t.w,
                this)
            },
            addScalar: function(t) {
                return this.x += t,
                this.y += t,
                this.z += t,
                this.w += t,
                this
            },
            addVectors: function(t, e) {
                return this.x = t.x + e.x,
                this.y = t.y + e.y,
                this.z = t.z + e.z,
                this.w = t.w + e.w,
                this
            },
            addScaledVector: function(t, e) {
                return this.x += t.x * e,
                this.y += t.y * e,
                this.z += t.z * e,
                this.w += t.w * e,
                this
            },
            sub: function(t, e) {
                return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                this.y -= t.y,
                this.z -= t.z,
                this.w -= t.w,
                this)
            },
            subScalar: function(t) {
                return this.x -= t,
                this.y -= t,
                this.z -= t,
                this.w -= t,
                this
            },
            subVectors: function(t, e) {
                return this.x = t.x - e.x,
                this.y = t.y - e.y,
                this.z = t.z - e.z,
                this.w = t.w - e.w,
                this
            },
            multiplyScalar: function(t) {
                return isFinite(t) ? (this.x *= t,
                this.y *= t,
                this.z *= t,
                this.w *= t) : (this.x = 0,
                this.y = 0,
                this.z = 0,
                this.w = 0),
                this
            },
            applyMatrix4: function(t) {
                var e = this.x
                  , i = this.y
                  , n = this.z
                  , r = this.w
                  , a = t.elements;
                return this.x = a[0] * e + a[4] * i + a[8] * n + a[12] * r,
                this.y = a[1] * e + a[5] * i + a[9] * n + a[13] * r,
                this.z = a[2] * e + a[6] * i + a[10] * n + a[14] * r,
                this.w = a[3] * e + a[7] * i + a[11] * n + a[15] * r,
                this
            },
            divideScalar: function(t) {
                return this.multiplyScalar(1 / t)
            },
            setAxisAngleFromQuaternion: function(t) {
                this.w = 2 * Math.acos(t.w);
                var e = Math.sqrt(1 - t.w * t.w);
                return e < 1e-4 ? (this.x = 1,
                this.y = 0,
                this.z = 0) : (this.x = t.x / e,
                this.y = t.y / e,
                this.z = t.z / e),
                this
            },
            setAxisAngleFromRotationMatrix: function(t) {
                var e, i, n, r, a = .01, o = .1, s = t.elements, l = s[0], h = s[4], c = s[8], u = s[1], p = s[5], f = s[9], d = s[2], m = s[6], g = s[10];
                if (Math.abs(h - u) < a && Math.abs(c - d) < a && Math.abs(f - m) < a) {
                    if (Math.abs(h + u) < o && Math.abs(c + d) < o && Math.abs(f + m) < o && Math.abs(l + p + g - 3) < o)
                        return this.set(1, 0, 0, 0),
                        this;
                    e = Math.PI;
                    var v = (l + 1) / 2
                      , y = (p + 1) / 2
                      , _ = (g + 1) / 2
                      , x = (h + u) / 4
                      , b = (c + d) / 4
                      , w = (f + m) / 4;
                    return v > y && v > _ ? v < a ? (i = 0,
                    n = .707106781,
                    r = .707106781) : (i = Math.sqrt(v),
                    n = x / i,
                    r = b / i) : y > _ ? y < a ? (i = .707106781,
                    n = 0,
                    r = .707106781) : (n = Math.sqrt(y),
                    i = x / n,
                    r = w / n) : _ < a ? (i = .707106781,
                    n = .707106781,
                    r = 0) : (r = Math.sqrt(_),
                    i = b / r,
                    n = w / r),
                    this.set(i, n, r, e),
                    this
                }
                var M = Math.sqrt((m - f) * (m - f) + (c - d) * (c - d) + (u - h) * (u - h));
                return Math.abs(M) < .001 && (M = 1),
                this.x = (m - f) / M,
                this.y = (c - d) / M,
                this.z = (u - h) / M,
                this.w = Math.acos((l + p + g - 1) / 2),
                this
            },
            min: function(t) {
                return this.x = Math.min(this.x, t.x),
                this.y = Math.min(this.y, t.y),
                this.z = Math.min(this.z, t.z),
                this.w = Math.min(this.w, t.w),
                this
            },
            max: function(t) {
                return this.x = Math.max(this.x, t.x),
                this.y = Math.max(this.y, t.y),
                this.z = Math.max(this.z, t.z),
                this.w = Math.max(this.w, t.w),
                this
            },
            clamp: function(t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                this.y = Math.max(t.y, Math.min(e.y, this.y)),
                this.z = Math.max(t.z, Math.min(e.z, this.z)),
                this.w = Math.max(t.w, Math.min(e.w, this.w)),
                this
            },
            clampScalar: function() {
                var t, e;
                return function(i, r) {
                    return void 0 === t && (t = new n.Vector4,
                    e = new n.Vector4),
                    t.set(i, i, i, i),
                    e.set(r, r, r, r),
                    this.clamp(t, e)
                }
            }(),
            floor: function() {
                return this.x = Math.floor(this.x),
                this.y = Math.floor(this.y),
                this.z = Math.floor(this.z),
                this.w = Math.floor(this.w),
                this
            },
            ceil: function() {
                return this.x = Math.ceil(this.x),
                this.y = Math.ceil(this.y),
                this.z = Math.ceil(this.z),
                this.w = Math.ceil(this.w),
                this
            },
            round: function() {
                return this.x = Math.round(this.x),
                this.y = Math.round(this.y),
                this.z = Math.round(this.z),
                this.w = Math.round(this.w),
                this
            },
            roundToZero: function() {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                this
            },
            negate: function() {
                return this.x = -this.x,
                this.y = -this.y,
                this.z = -this.z,
                this.w = -this.w,
                this
            },
            dot: function(t) {
                return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
            },
            lengthSq: function() {
                return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
            },
            length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
            },
            lengthManhattan: function() {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
            },
            normalize: function() {
                return this.divideScalar(this.length())
            },
            setLength: function(t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function(t, e) {
                return this.x += (t.x - this.x) * e,
                this.y += (t.y - this.y) * e,
                this.z += (t.z - this.z) * e,
                this.w += (t.w - this.w) * e,
                this
            },
            lerpVectors: function(t, e, i) {
                return this.subVectors(e, t).multiplyScalar(i).add(t)
            },
            equals: function(t) {
                return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
            },
            fromArray: function(t, e) {
                return void 0 === e && (e = 0),
                this.x = t[e],
                this.y = t[e + 1],
                this.z = t[e + 2],
                this.w = t[e + 3],
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.x,
                t[e + 1] = this.y,
                t[e + 2] = this.z,
                t[e + 3] = this.w,
                t
            },
            fromAttribute: function(t, e, i) {
                return void 0 === i && (i = 0),
                e = e * t.itemSize + i,
                this.x = t.array[e],
                this.y = t.array[e + 1],
                this.z = t.array[e + 2],
                this.w = t.array[e + 3],
                this
            }
        },
        n.Euler = function(t, e, i, r) {
            this._x = t || 0,
            this._y = e || 0,
            this._z = i || 0,
            this._order = r || n.Euler.DefaultOrder
        }
        ,
        n.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
        n.Euler.DefaultOrder = "XYZ",
        n.Euler.prototype = {
            constructor: n.Euler,
            get x() {
                return this._x
            },
            set x(t) {
                this._x = t,
                this.onChangeCallback()
            },
            get y() {
                return this._y
            },
            set y(t) {
                this._y = t,
                this.onChangeCallback()
            },
            get z() {
                return this._z
            },
            set z(t) {
                this._z = t,
                this.onChangeCallback()
            },
            get order() {
                return this._order
            },
            set order(t) {
                this._order = t,
                this.onChangeCallback()
            },
            set: function(t, e, i, n) {
                return this._x = t,
                this._y = e,
                this._z = i,
                this._order = n || this._order,
                this.onChangeCallback(),
                this
            },
            clone: function() {
                return new this.constructor(this._x,this._y,this._z,this._order)
            },
            copy: function(t) {
                return this._x = t._x,
                this._y = t._y,
                this._z = t._z,
                this._order = t._order,
                this.onChangeCallback(),
                this
            },
            setFromRotationMatrix: function(t, e, i) {
                var r = n.Math.clamp
                  , a = t.elements
                  , o = a[0]
                  , s = a[4]
                  , l = a[8]
                  , h = a[1]
                  , c = a[5]
                  , u = a[9]
                  , p = a[2]
                  , f = a[6]
                  , d = a[10];
                return e = e || this._order,
                "XYZ" === e ? (this._y = Math.asin(r(l, -1, 1)),
                Math.abs(l) < .99999 ? (this._x = Math.atan2(-u, d),
                this._z = Math.atan2(-s, o)) : (this._x = Math.atan2(f, c),
                this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-r(u, -1, 1)),
                Math.abs(u) < .99999 ? (this._y = Math.atan2(l, d),
                this._z = Math.atan2(h, c)) : (this._y = Math.atan2(-p, o),
                this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(r(f, -1, 1)),
                Math.abs(f) < .99999 ? (this._y = Math.atan2(-p, d),
                this._z = Math.atan2(-s, c)) : (this._y = 0,
                this._z = Math.atan2(h, o))) : "ZYX" === e ? (this._y = Math.asin(-r(p, -1, 1)),
                Math.abs(p) < .99999 ? (this._x = Math.atan2(f, d),
                this._z = Math.atan2(h, o)) : (this._x = 0,
                this._z = Math.atan2(-s, c))) : "YZX" === e ? (this._z = Math.asin(r(h, -1, 1)),
                Math.abs(h) < .99999 ? (this._x = Math.atan2(-u, c),
                this._y = Math.atan2(-p, o)) : (this._x = 0,
                this._y = Math.atan2(l, d))) : "XZY" === e && (this._z = Math.asin(-r(s, -1, 1)),
                Math.abs(s) < .99999 ? (this._x = Math.atan2(f, c),
                this._y = Math.atan2(l, o)) : (this._x = Math.atan2(-u, d),
                this._y = 0)),
                this._order = e,
                i !== !1 && this.onChangeCallback(),
                this
            },
            setFromQuaternion: function() {
                var t;
                return function(e, i, r) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(t, i, r)
                }
            }(),
            setFromVector3: function(t, e) {
                return this.set(t.x, t.y, t.z, e || this._order)
            },
            reorder: function() {
                var t = new n.Quaternion;
                return function(e) {
                    return t.setFromEuler(this),
                    this.setFromQuaternion(t, e)
                }
            }(),
            equals: function(t) {
                return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
            },
            fromArray: function(t) {
                return this._x = t[0],
                this._y = t[1],
                this._z = t[2],
                void 0 !== t[3] && (this._order = t[3]),
                this.onChangeCallback(),
                this
            },
            toArray: function(t, e) {
                return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this._x,
                t[e + 1] = this._y,
                t[e + 2] = this._z,
                t[e + 3] = this._order,
                t
            },
            toVector3: function(t) {
                return t ? t.set(this._x, this._y, this._z) : new n.Vector3(this._x,this._y,this._z)
            },
            onChange: function(t) {
                return this.onChangeCallback = t,
                this
            },
            onChangeCallback: function() {}
        },
        n.Line3 = function(t, e) {
            this.start = void 0 !== t ? t : new n.Vector3,
            this.end = void 0 !== e ? e : new n.Vector3
        }
        ,
        n.Line3.prototype = {
            constructor: n.Line3,
            set: function(t, e) {
                return this.start.copy(t),
                this.end.copy(e),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.start.copy(t.start),
                this.end.copy(t.end),
                this
            },
            center: function(t) {
                var e = t || new n.Vector3;
                return e.addVectors(this.start, this.end).multiplyScalar(.5)
            },
            delta: function(t) {
                var e = t || new n.Vector3;
                return e.subVectors(this.end, this.start)
            },
            distanceSq: function() {
                return this.start.distanceToSquared(this.end)
            },
            distance: function() {
                return this.start.distanceTo(this.end)
            },
            at: function(t, e) {
                var i = e || new n.Vector3;
                return this.delta(i).multiplyScalar(t).add(this.start)
            },
            closestPointToPointParameter: function() {
                var t = new n.Vector3
                  , e = new n.Vector3;
                return function(i, r) {
                    t.subVectors(i, this.start),
                    e.subVectors(this.end, this.start);
                    var a = e.dot(e)
                      , o = e.dot(t)
                      , s = o / a;
                    return r && (s = n.Math.clamp(s, 0, 1)),
                    s
                }
            }(),
            closestPointToPoint: function(t, e, i) {
                var r = this.closestPointToPointParameter(t, e)
                  , a = i || new n.Vector3;
                return this.delta(a).multiplyScalar(r).add(this.start)
            },
            applyMatrix4: function(t) {
                return this.start.applyMatrix4(t),
                this.end.applyMatrix4(t),
                this
            },
            equals: function(t) {
                return t.start.equals(this.start) && t.end.equals(this.end)
            }
        },
        n.Box2 = function(t, e) {
            this.min = void 0 !== t ? t : new n.Vector2((+(1 / 0)),(+(1 / 0))),
            this.max = void 0 !== e ? e : new n.Vector2((-(1 / 0)),(-(1 / 0)))
        }
        ,
        n.Box2.prototype = {
            constructor: n.Box2,
            set: function(t, e) {
                return this.min.copy(t),
                this.max.copy(e),
                this
            },
            setFromPoints: function(t) {
                this.makeEmpty();
                for (var e = 0, i = t.length; e < i; e++)
                    this.expandByPoint(t[e]);
                return this
            },
            setFromCenterAndSize: function() {
                var t = new n.Vector2;
                return function(e, i) {
                    var n = t.copy(i).multiplyScalar(.5);
                    return this.min.copy(e).sub(n),
                    this.max.copy(e).add(n),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.min.copy(t.min),
                this.max.copy(t.max),
                this
            },
            makeEmpty: function() {
                return this.min.x = this.min.y = +(1 / 0),
                this.max.x = this.max.y = -(1 / 0),
                this
            },
            isEmpty: function() {
                return this.max.x < this.min.x || this.max.y < this.min.y
            },
            center: function(t) {
                var e = t || new n.Vector2;
                return e.addVectors(this.min, this.max).multiplyScalar(.5)
            },
            size: function(t) {
                var e = t || new n.Vector2;
                return e.subVectors(this.max, this.min)
            },
            expandByPoint: function(t) {
                return this.min.min(t),
                this.max.max(t),
                this
            },
            expandByVector: function(t) {
                return this.min.sub(t),
                this.max.add(t),
                this
            },
            expandByScalar: function(t) {
                return this.min.addScalar(-t),
                this.max.addScalar(t),
                this
            },
            containsPoint: function(t) {
                return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
            },
            containsBox: function(t) {
                return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
            },
            getParameter: function(t, e) {
                var i = e || new n.Vector2;
                return i.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
            },
            intersectsBox: function(t) {
                return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
            },
            clampPoint: function(t, e) {
                var i = e || new n.Vector2;
                return i.copy(t).clamp(this.min, this.max)
            },
            distanceToPoint: function() {
                var t = new n.Vector2;
                return function(e) {
                    var i = t.copy(e).clamp(this.min, this.max);
                    return i.sub(e).length()
                }
            }(),
            intersect: function(t) {
                return this.min.max(t.min),
                this.max.min(t.max),
                this
            },
            union: function(t) {
                return this.min.min(t.min),
                this.max.max(t.max),
                this
            },
            translate: function(t) {
                return this.min.add(t),
                this.max.add(t),
                this
            },
            equals: function(t) {
                return t.min.equals(this.min) && t.max.equals(this.max)
            }
        },
        n.Box3 = function(t, e) {
            this.min = void 0 !== t ? t : new n.Vector3((+(1 / 0)),(+(1 / 0)),(+(1 / 0))),
            this.max = void 0 !== e ? e : new n.Vector3((-(1 / 0)),(-(1 / 0)),(-(1 / 0)))
        }
        ,
        n.Box3.prototype = {
            constructor: n.Box3,
            set: function(t, e) {
                return this.min.copy(t),
                this.max.copy(e),
                this
            },
            setFromArray: function(t) {
                for (var e = +(1 / 0), i = +(1 / 0), n = +(1 / 0), r = -(1 / 0), a = -(1 / 0), o = -(1 / 0), s = 0, l = t.length; s < l; s += 3) {
                    var h = t[s]
                      , c = t[s + 1]
                      , u = t[s + 2];
                    h < e && (e = h),
                    c < i && (i = c),
                    u < n && (n = u),
                    h > r && (r = h),
                    c > a && (a = c),
                    u > o && (o = u)
                }
                this.min.set(e, i, n),
                this.max.set(r, a, o)
            },
            setFromPoints: function(t) {
                this.makeEmpty();
                for (var e = 0, i = t.length; e < i; e++)
                    this.expandByPoint(t[e]);
                return this
            },
            setFromCenterAndSize: function() {
                var t = new n.Vector3;
                return function(e, i) {
                    var n = t.copy(i).multiplyScalar(.5);
                    return this.min.copy(e).sub(n),
                    this.max.copy(e).add(n),
                    this
                }
            }(),
            setFromObject: function() {
                var t = new n.Vector3;
                return function(e) {
                    var i = this;
                    return e.updateMatrixWorld(!0),
                    this.makeEmpty(),
                    e.traverse(function(e) {
                        var r = e.geometry;
                        if (void 0 !== r)
                            if (r instanceof n.Geometry)
                                for (var a = r.vertices, o = 0, s = a.length; o < s; o++)
                                    t.copy(a[o]),
                                    t.applyMatrix4(e.matrixWorld),
                                    i.expandByPoint(t);
                            else if (r instanceof n.BufferGeometry) {
                                var l = r.attributes.position;
                                if (void 0 !== l) {
                                    var h, c, u;
                                    l instanceof n.InterleavedBufferAttribute ? (h = l.data.array,
                                    c = l.offset,
                                    u = l.data.stride) : (h = l.array,
                                    c = 0,
                                    u = 3);
                                    for (var o = c, s = h.length; o < s; o += u)
                                        t.fromArray(h, o),
                                        t.applyMatrix4(e.matrixWorld),
                                        i.expandByPoint(t)
                                }
                            }
                    }),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.min.copy(t.min),
                this.max.copy(t.max),
                this
            },
            makeEmpty: function() {
                return this.min.x = this.min.y = this.min.z = +(1 / 0),
                this.max.x = this.max.y = this.max.z = -(1 / 0),
                this
            },
            isEmpty: function() {
                return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
            },
            center: function(t) {
                var e = t || new n.Vector3;
                return e.addVectors(this.min, this.max).multiplyScalar(.5)
            },
            size: function(t) {
                var e = t || new n.Vector3;
                return e.subVectors(this.max, this.min)
            },
            expandByPoint: function(t) {
                return this.min.min(t),
                this.max.max(t),
                this
            },
            expandByVector: function(t) {
                return this.min.sub(t),
                this.max.add(t),
                this
            },
            expandByScalar: function(t) {
                return this.min.addScalar(-t),
                this.max.addScalar(t),
                this
            },
            containsPoint: function(t) {
                return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
            },
            containsBox: function(t) {
                return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
            },
            getParameter: function(t, e) {
                var i = e || new n.Vector3;
                return i.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
            },
            intersectsBox: function(t) {
                return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
            },
            intersectsSphere: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Vector3),
                    this.clampPoint(e.center, t),
                    t.distanceToSquared(e.center) <= e.radius * e.radius
                }
            }(),
            intersectsPlane: function(t) {
                var e, i;
                return t.normal.x > 0 ? (e = t.normal.x * this.min.x,
                i = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x,
                i = t.normal.x * this.min.x),
                t.normal.y > 0 ? (e += t.normal.y * this.min.y,
                i += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
                i += t.normal.y * this.min.y),
                t.normal.z > 0 ? (e += t.normal.z * this.min.z,
                i += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
                i += t.normal.z * this.min.z),
                e <= t.constant && i >= t.constant
            },
            clampPoint: function(t, e) {
                var i = e || new n.Vector3;
                return i.copy(t).clamp(this.min, this.max)
            },
            distanceToPoint: function() {
                var t = new n.Vector3;
                return function(e) {
                    var i = t.copy(e).clamp(this.min, this.max);
                    return i.sub(e).length()
                }
            }(),
            getBoundingSphere: function() {
                var t = new n.Vector3;
                return function(e) {
                    var i = e || new n.Sphere;
                    return i.center = this.center(),
                    i.radius = .5 * this.size(t).length(),
                    i
                }
            }(),
            intersect: function(t) {
                return this.min.max(t.min),
                this.max.min(t.max),
                this.isEmpty() && this.makeEmpty(),
                this
            },
            union: function(t) {
                return this.min.min(t.min),
                this.max.max(t.max),
                this
            },
            applyMatrix4: function() {
                var t = [new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3];
                return function(e) {
                    return this.isEmpty() ? this : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                    t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                    t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                    t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                    t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                    t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                    t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                    t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                    this.setFromPoints(t),
                    this)
                }
            }(),
            translate: function(t) {
                return this.min.add(t),
                this.max.add(t),
                this
            },
            equals: function(t) {
                return t.min.equals(this.min) && t.max.equals(this.max)
            }
        },
        n.Matrix3 = function() {
            this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),
            arguments.length > 0
        }
        ,
        n.Matrix3.prototype = {
            constructor: n.Matrix3,
            set: function(t, e, i, n, r, a, o, s, l) {
                var h = this.elements;
                return h[0] = t,
                h[1] = n,
                h[2] = o,
                h[3] = e,
                h[4] = r,
                h[5] = s,
                h[6] = i,
                h[7] = a,
                h[8] = l,
                this
            },
            identity: function() {
                return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                this
            },
            clone: function() {
                return (new this.constructor).fromArray(this.elements)
            },
            copy: function(t) {
                var e = t.elements;
                return this.set(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8]),
                this
            },
            setFromMatrix4: function(t) {
                var e = t.elements;
                return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
                this
            },
            applyToVector3Array: function() {
                var t;
                return function(e, i, r) {
                    void 0 === t && (t = new n.Vector3),
                    void 0 === i && (i = 0),
                    void 0 === r && (r = e.length);
                    for (var a = 0, o = i; a < r; a += 3,
                    o += 3)
                        t.fromArray(e, o),
                        t.applyMatrix3(this),
                        t.toArray(e, o);
                    return e
                }
            }(),
            applyToBuffer: function() {
                var t;
                return function(e, i, r) {
                    void 0 === t && (t = new n.Vector3),
                    void 0 === i && (i = 0),
                    void 0 === r && (r = e.length / e.itemSize);
                    for (var a = 0, o = i; a < r; a++,
                    o++)
                        t.x = e.getX(o),
                        t.y = e.getY(o),
                        t.z = e.getZ(o),
                        t.applyMatrix3(this),
                        e.setXYZ(t.x, t.y, t.z);
                    return e
                }
            }(),
            multiplyScalar: function(t) {
                var e = this.elements;
                return e[0] *= t,
                e[3] *= t,
                e[6] *= t,
                e[1] *= t,
                e[4] *= t,
                e[7] *= t,
                e[2] *= t,
                e[5] *= t,
                e[8] *= t,
                this
            },
            determinant: function() {
                var t = this.elements
                  , e = t[0]
                  , i = t[1]
                  , n = t[2]
                  , r = t[3]
                  , a = t[4]
                  , o = t[5]
                  , s = t[6]
                  , l = t[7]
                  , h = t[8];
                return e * a * h - e * o * l - i * r * h + i * o * s + n * r * l - n * a * s
            },
            getInverse: function(t, e) {
                t instanceof n.Matrix4;
                var i = t.elements
                  , r = this.elements
                  , a = i[0]
                  , o = i[1]
                  , s = i[2]
                  , l = i[3]
                  , h = i[4]
                  , c = i[5]
                  , u = i[6]
                  , p = i[7]
                  , f = i[8]
                  , d = f * h - c * p
                  , m = c * u - f * l
                  , g = p * l - h * u
                  , v = a * d + o * m + s * g;
                if (0 === v) {
                    var y = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
                    if (e)
                        throw new Error(y);
                    return this.identity()
                }
                var _ = 1 / v;
                return r[0] = d * _,
                r[1] = (s * p - f * o) * _,
                r[2] = (c * o - s * h) * _,
                r[3] = m * _,
                r[4] = (f * a - s * u) * _,
                r[5] = (s * l - c * a) * _,
                r[6] = g * _,
                r[7] = (o * u - p * a) * _,
                r[8] = (h * a - o * l) * _,
                this
            },
            transpose: function() {
                var t, e = this.elements;
                return t = e[1],
                e[1] = e[3],
                e[3] = t,
                t = e[2],
                e[2] = e[6],
                e[6] = t,
                t = e[5],
                e[5] = e[7],
                e[7] = t,
                this
            },
            flattenToArrayOffset: function(t, e) {
                return this.toArray(t, e)
            },
            getNormalMatrix: function(t) {
                return this.setFromMatrix4(t).getInverse(this).transpose()
            },
            transposeIntoArray: function(t) {
                var e = this.elements;
                return t[0] = e[0],
                t[1] = e[3],
                t[2] = e[6],
                t[3] = e[1],
                t[4] = e[4],
                t[5] = e[7],
                t[6] = e[2],
                t[7] = e[5],
                t[8] = e[8],
                this
            },
            fromArray: function(t) {
                return this.elements.set(t),
                this
            },
            toArray: function(t, e) {
                void 0 === t && (t = []),
                void 0 === e && (e = 0);
                var i = this.elements;
                return t[e] = i[0],
                t[e + 1] = i[1],
                t[e + 2] = i[2],
                t[e + 3] = i[3],
                t[e + 4] = i[4],
                t[e + 5] = i[5],
                t[e + 6] = i[6],
                t[e + 7] = i[7],
                t[e + 8] = i[8],
                t
            }
        },
        n.Matrix4 = function() {
            this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
            arguments.length > 0
        }
        ,
        n.Matrix4.prototype = {
            constructor: n.Matrix4,
            set: function(t, e, i, n, r, a, o, s, l, h, c, u, p, f, d, m) {
                var g = this.elements;
                return g[0] = t,
                g[4] = e,
                g[8] = i,
                g[12] = n,
                g[1] = r,
                g[5] = a,
                g[9] = o,
                g[13] = s,
                g[2] = l,
                g[6] = h,
                g[10] = c,
                g[14] = u,
                g[3] = p,
                g[7] = f,
                g[11] = d,
                g[15] = m,
                this
            },
            identity: function() {
                return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                this
            },
            clone: function() {
                return (new n.Matrix4).fromArray(this.elements)
            },
            copy: function(t) {
                return this.elements.set(t.elements),
                this
            },
            copyPosition: function(t) {
                var e = this.elements
                  , i = t.elements;
                return e[12] = i[12],
                e[13] = i[13],
                e[14] = i[14],
                this
            },
            extractBasis: function(t, e, i) {
                return t.setFromMatrixColumn(this, 0),
                e.setFromMatrixColumn(this, 1),
                i.setFromMatrixColumn(this, 2),
                this
            },
            makeBasis: function(t, e, i) {
                return this.set(t.x, e.x, i.x, 0, t.y, e.y, i.y, 0, t.z, e.z, i.z, 0, 0, 0, 0, 1),
                this
            },
            extractRotation: function() {
                var t;
                return function(e) {
                    void 0 === t && (t = new n.Vector3);
                    var i = this.elements
                      , r = e.elements
                      , a = 1 / t.setFromMatrixColumn(e, 0).length()
                      , o = 1 / t.setFromMatrixColumn(e, 1).length()
                      , s = 1 / t.setFromMatrixColumn(e, 2).length();
                    return i[0] = r[0] * a,
                    i[1] = r[1] * a,
                    i[2] = r[2] * a,
                    i[4] = r[4] * o,
                    i[5] = r[5] * o,
                    i[6] = r[6] * o,
                    i[8] = r[8] * s,
                    i[9] = r[9] * s,
                    i[10] = r[10] * s,
                    this
                }
            }(),
            makeRotationFromEuler: function(t) {
                t instanceof n.Euler == !1;
                var e = this.elements
                  , i = t.x
                  , r = t.y
                  , a = t.z
                  , o = Math.cos(i)
                  , s = Math.sin(i)
                  , l = Math.cos(r)
                  , h = Math.sin(r)
                  , c = Math.cos(a)
                  , u = Math.sin(a);
                if ("XYZ" === t.order) {
                    var p = o * c
                      , f = o * u
                      , d = s * c
                      , m = s * u;
                    e[0] = l * c,
                    e[4] = -l * u,
                    e[8] = h,
                    e[1] = f + d * h,
                    e[5] = p - m * h,
                    e[9] = -s * l,
                    e[2] = m - p * h,
                    e[6] = d + f * h,
                    e[10] = o * l
                } else if ("YXZ" === t.order) {
                    var g = l * c
                      , v = l * u
                      , y = h * c
                      , _ = h * u;
                    e[0] = g + _ * s,
                    e[4] = y * s - v,
                    e[8] = o * h,
                    e[1] = o * u,
                    e[5] = o * c,
                    e[9] = -s,
                    e[2] = v * s - y,
                    e[6] = _ + g * s,
                    e[10] = o * l
                } else if ("ZXY" === t.order) {
                    var g = l * c
                      , v = l * u
                      , y = h * c
                      , _ = h * u;
                    e[0] = g - _ * s,
                    e[4] = -o * u,
                    e[8] = y + v * s,
                    e[1] = v + y * s,
                    e[5] = o * c,
                    e[9] = _ - g * s,
                    e[2] = -o * h,
                    e[6] = s,
                    e[10] = o * l
                } else if ("ZYX" === t.order) {
                    var p = o * c
                      , f = o * u
                      , d = s * c
                      , m = s * u;
                    e[0] = l * c,
                    e[4] = d * h - f,
                    e[8] = p * h + m,
                    e[1] = l * u,
                    e[5] = m * h + p,
                    e[9] = f * h - d,
                    e[2] = -h,
                    e[6] = s * l,
                    e[10] = o * l
                } else if ("YZX" === t.order) {
                    var x = o * l
                      , b = o * h
                      , w = s * l
                      , M = s * h;
                    e[0] = l * c,
                    e[4] = M - x * u,
                    e[8] = w * u + b,
                    e[1] = u,
                    e[5] = o * c,
                    e[9] = -s * c,
                    e[2] = -h * c,
                    e[6] = b * u + w,
                    e[10] = x - M * u
                } else if ("XZY" === t.order) {
                    var x = o * l
                      , b = o * h
                      , w = s * l
                      , M = s * h;
                    e[0] = l * c,
                    e[4] = -u,
                    e[8] = h * c,
                    e[1] = x * u + M,
                    e[5] = o * c,
                    e[9] = b * u - w,
                    e[2] = w * u - b,
                    e[6] = s * c,
                    e[10] = M * u + x
                }
                return e[3] = 0,
                e[7] = 0,
                e[11] = 0,
                e[12] = 0,
                e[13] = 0,
                e[14] = 0,
                e[15] = 1,
                this
            },
            makeRotationFromQuaternion: function(t) {
                var e = this.elements
                  , i = t.x
                  , n = t.y
                  , r = t.z
                  , a = t.w
                  , o = i + i
                  , s = n + n
                  , l = r + r
                  , h = i * o
                  , c = i * s
                  , u = i * l
                  , p = n * s
                  , f = n * l
                  , d = r * l
                  , m = a * o
                  , g = a * s
                  , v = a * l;
                return e[0] = 1 - (p + d),
                e[4] = c - v,
                e[8] = u + g,
                e[1] = c + v,
                e[5] = 1 - (h + d),
                e[9] = f - m,
                e[2] = u - g,
                e[6] = f + m,
                e[10] = 1 - (h + p),
                e[3] = 0,
                e[7] = 0,
                e[11] = 0,
                e[12] = 0,
                e[13] = 0,
                e[14] = 0,
                e[15] = 1,
                this
            },
            lookAt: function() {
                var t, e, i;
                return function(r, a, o) {
                    void 0 === t && (t = new n.Vector3,
                    e = new n.Vector3,
                    i = new n.Vector3);
                    var s = this.elements;
                    return i.subVectors(r, a).normalize(),
                    0 === i.lengthSq() && (i.z = 1),
                    t.crossVectors(o, i).normalize(),
                    0 === t.lengthSq() && (i.z += 1e-4,
                    t.crossVectors(o, i).normalize()),
                    e.crossVectors(i, t),
                    s[0] = t.x,
                    s[4] = e.x,
                    s[8] = i.x,
                    s[1] = t.y,
                    s[5] = e.y,
                    s[9] = i.y,
                    s[2] = t.z,
                    s[6] = e.z,
                    s[10] = i.z,
                    this
                }
            }(),
            multiply: function(t, e) {
                return void 0 !== e ? this.multiplyMatrices(t, e) : this.multiplyMatrices(this, t)
            },
            premultiply: function(t) {
                return this.multiplyMatrices(t, this)
            },
            multiplyMatrices: function(t, e) {
                var i = t.elements
                  , n = e.elements
                  , r = this.elements
                  , a = i[0]
                  , o = i[4]
                  , s = i[8]
                  , l = i[12]
                  , h = i[1]
                  , c = i[5]
                  , u = i[9]
                  , p = i[13]
                  , f = i[2]
                  , d = i[6]
                  , m = i[10]
                  , g = i[14]
                  , v = i[3]
                  , y = i[7]
                  , _ = i[11]
                  , x = i[15]
                  , b = n[0]
                  , w = n[4]
                  , M = n[8]
                  , T = n[12]
                  , S = n[1]
                  , C = n[5]
                  , A = n[9]
                  , P = n[13]
                  , E = n[2]
                  , L = n[6]
                  , O = n[10]
                  , R = n[14]
                  , D = n[3]
                  , I = n[7]
                  , k = n[11]
                  , N = n[15];
                return r[0] = a * b + o * S + s * E + l * D,
                r[4] = a * w + o * C + s * L + l * I,
                r[8] = a * M + o * A + s * O + l * k,
                r[12] = a * T + o * P + s * R + l * N,
                r[1] = h * b + c * S + u * E + p * D,
                r[5] = h * w + c * C + u * L + p * I,
                r[9] = h * M + c * A + u * O + p * k,
                r[13] = h * T + c * P + u * R + p * N,
                r[2] = f * b + d * S + m * E + g * D,
                r[6] = f * w + d * C + m * L + g * I,
                r[10] = f * M + d * A + m * O + g * k,
                r[14] = f * T + d * P + m * R + g * N,
                r[3] = v * b + y * S + _ * E + x * D,
                r[7] = v * w + y * C + _ * L + x * I,
                r[11] = v * M + y * A + _ * O + x * k,
                r[15] = v * T + y * P + _ * R + x * N,
                this
            },
            multiplyToArray: function(t, e, i) {
                var n = this.elements;
                return this.multiplyMatrices(t, e),
                i[0] = n[0],
                i[1] = n[1],
                i[2] = n[2],
                i[3] = n[3],
                i[4] = n[4],
                i[5] = n[5],
                i[6] = n[6],
                i[7] = n[7],
                i[8] = n[8],
                i[9] = n[9],
                i[10] = n[10],
                i[11] = n[11],
                i[12] = n[12],
                i[13] = n[13],
                i[14] = n[14],
                i[15] = n[15],
                this
            },
            multiplyScalar: function(t) {
                var e = this.elements;
                return e[0] *= t,
                e[4] *= t,
                e[8] *= t,
                e[12] *= t,
                e[1] *= t,
                e[5] *= t,
                e[9] *= t,
                e[13] *= t,
                e[2] *= t,
                e[6] *= t,
                e[10] *= t,
                e[14] *= t,
                e[3] *= t,
                e[7] *= t,
                e[11] *= t,
                e[15] *= t,
                this
            },
            applyToVector3Array: function() {
                var t;
                return function(e, i, r) {
                    void 0 === t && (t = new n.Vector3),
                    void 0 === i && (i = 0),
                    void 0 === r && (r = e.length);
                    for (var a = 0, o = i; a < r; a += 3,
                    o += 3)
                        t.fromArray(e, o),
                        t.applyMatrix4(this),
                        t.toArray(e, o);
                    return e
                }
            }(),
            applyToBuffer: function() {
                var t;
                return function(e, i, r) {
                    void 0 === t && (t = new n.Vector3),
                    void 0 === i && (i = 0),
                    void 0 === r && (r = e.length / e.itemSize);
                    for (var a = 0, o = i; a < r; a++,
                    o++)
                        t.x = e.getX(o),
                        t.y = e.getY(o),
                        t.z = e.getZ(o),
                        t.applyMatrix4(this),
                        e.setXYZ(t.x, t.y, t.z);
                    return e
                }
            }(),
            determinant: function() {
                var t = this.elements
                  , e = t[0]
                  , i = t[4]
                  , n = t[8]
                  , r = t[12]
                  , a = t[1]
                  , o = t[5]
                  , s = t[9]
                  , l = t[13]
                  , h = t[2]
                  , c = t[6]
                  , u = t[10]
                  , p = t[14]
                  , f = t[3]
                  , d = t[7]
                  , m = t[11]
                  , g = t[15];
                return f * (+r * s * c - n * l * c - r * o * u + i * l * u + n * o * p - i * s * p) + d * (+e * s * p - e * l * u + r * a * u - n * a * p + n * l * h - r * s * h) + m * (+e * l * c - e * o * p - r * a * c + i * a * p + r * o * h - i * l * h) + g * (-n * o * h - e * s * c + e * o * u + n * a * c - i * a * u + i * s * h)
            },
            transpose: function() {
                var t, e = this.elements;
                return t = e[1],
                e[1] = e[4],
                e[4] = t,
                t = e[2],
                e[2] = e[8],
                e[8] = t,
                t = e[6],
                e[6] = e[9],
                e[9] = t,
                t = e[3],
                e[3] = e[12],
                e[12] = t,
                t = e[7],
                e[7] = e[13],
                e[13] = t,
                t = e[11],
                e[11] = e[14],
                e[14] = t,
                this
            },
            flattenToArrayOffset: function(t, e) {
                return this.toArray(t, e)
            },
            getPosition: function() {
                var t;
                return function() {
                    return void 0 === t && (t = new n.Vector3),
                    t.setFromMatrixColumn(this, 3)
                }
            }(),
            setPosition: function(t) {
                var e = this.elements;
                return e[12] = t.x,
                e[13] = t.y,
                e[14] = t.z,
                this
            },
            getInverse: function(t, e) {
                var i = this.elements
                  , n = t.elements
                  , r = n[0]
                  , a = n[1]
                  , o = n[2]
                  , s = n[3]
                  , l = n[4]
                  , h = n[5]
                  , c = n[6]
                  , u = n[7]
                  , p = n[8]
                  , f = n[9]
                  , d = n[10]
                  , m = n[11]
                  , g = n[12]
                  , v = n[13]
                  , y = n[14]
                  , _ = n[15]
                  , x = f * y * u - v * d * u + v * c * m - h * y * m - f * c * _ + h * d * _
                  , b = g * d * u - p * y * u - g * c * m + l * y * m + p * c * _ - l * d * _
                  , w = p * v * u - g * f * u + g * h * m - l * v * m - p * h * _ + l * f * _
                  , M = g * f * c - p * v * c - g * h * d + l * v * d + p * h * y - l * f * y
                  , T = r * x + a * b + o * w + s * M;
                if (0 === T) {
                    var S = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                    if (e)
                        throw new Error(S);
                    return this.identity()
                }
                var C = 1 / T;
                return i[0] = x * C,
                i[1] = (v * d * s - f * y * s - v * o * m + a * y * m + f * o * _ - a * d * _) * C,
                i[2] = (h * y * s - v * c * s + v * o * u - a * y * u - h * o * _ + a * c * _) * C,
                i[3] = (f * c * s - h * d * s - f * o * u + a * d * u + h * o * m - a * c * m) * C,
                i[4] = b * C,
                i[5] = (p * y * s - g * d * s + g * o * m - r * y * m - p * o * _ + r * d * _) * C,
                i[6] = (g * c * s - l * y * s - g * o * u + r * y * u + l * o * _ - r * c * _) * C,
                i[7] = (l * d * s - p * c * s + p * o * u - r * d * u - l * o * m + r * c * m) * C,
                i[8] = w * C,
                i[9] = (g * f * s - p * v * s - g * a * m + r * v * m + p * a * _ - r * f * _) * C,
                i[10] = (l * v * s - g * h * s + g * a * u - r * v * u - l * a * _ + r * h * _) * C,
                i[11] = (p * h * s - l * f * s - p * a * u + r * f * u + l * a * m - r * h * m) * C,
                i[12] = M * C,
                i[13] = (p * v * o - g * f * o + g * a * d - r * v * d - p * a * y + r * f * y) * C,
                i[14] = (g * h * o - l * v * o - g * a * c + r * v * c + l * a * y - r * h * y) * C,
                i[15] = (l * f * o - p * h * o + p * a * c - r * f * c - l * a * d + r * h * d) * C,
                this
            },
            scale: function(t) {
                var e = this.elements
                  , i = t.x
                  , n = t.y
                  , r = t.z;
                return e[0] *= i,
                e[4] *= n,
                e[8] *= r,
                e[1] *= i,
                e[5] *= n,
                e[9] *= r,
                e[2] *= i,
                e[6] *= n,
                e[10] *= r,
                e[3] *= i,
                e[7] *= n,
                e[11] *= r,
                this
            },
            getMaxScaleOnAxis: function() {
                var t = this.elements
                  , e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
                  , i = t[4] * t[4] + t[5] * t[5] + t[6] * t[6]
                  , n = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
                return Math.sqrt(Math.max(e, i, n))
            },
            makeTranslation: function(t, e, i) {
                return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1),
                this
            },
            makeRotationX: function(t) {
                var e = Math.cos(t)
                  , i = Math.sin(t);
                return this.set(1, 0, 0, 0, 0, e, -i, 0, 0, i, e, 0, 0, 0, 0, 1),
                this
            },
            makeRotationY: function(t) {
                var e = Math.cos(t)
                  , i = Math.sin(t);
                return this.set(e, 0, i, 0, 0, 1, 0, 0, -i, 0, e, 0, 0, 0, 0, 1),
                this
            },
            makeRotationZ: function(t) {
                var e = Math.cos(t)
                  , i = Math.sin(t);
                return this.set(e, -i, 0, 0, i, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                this
            },
            makeRotationAxis: function(t, e) {
                var i = Math.cos(e)
                  , n = Math.sin(e)
                  , r = 1 - i
                  , a = t.x
                  , o = t.y
                  , s = t.z
                  , l = r * a
                  , h = r * o;
                return this.set(l * a + i, l * o - n * s, l * s + n * o, 0, l * o + n * s, h * o + i, h * s - n * a, 0, l * s - n * o, h * s + n * a, r * s * s + i, 0, 0, 0, 0, 1),
                this
            },
            makeScale: function(t, e, i) {
                return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1),
                this
            },
            compose: function(t, e, i) {
                return this.makeRotationFromQuaternion(e),
                this.scale(i),
                this.setPosition(t),
                this
            },
            decompose: function() {
                var t, e;
                return function(i, r, a) {
                    void 0 === t && (t = new n.Vector3,
                    e = new n.Matrix4);
                    var o = this.elements
                      , s = t.set(o[0], o[1], o[2]).length()
                      , l = t.set(o[4], o[5], o[6]).length()
                      , h = t.set(o[8], o[9], o[10]).length()
                      , c = this.determinant();
                    c < 0 && (s = -s),
                    i.x = o[12],
                    i.y = o[13],
                    i.z = o[14],
                    e.elements.set(this.elements);
                    var u = 1 / s
                      , p = 1 / l
                      , f = 1 / h;
                    return e.elements[0] *= u,
                    e.elements[1] *= u,
                    e.elements[2] *= u,
                    e.elements[4] *= p,
                    e.elements[5] *= p,
                    e.elements[6] *= p,
                    e.elements[8] *= f,
                    e.elements[9] *= f,
                    e.elements[10] *= f,
                    r.setFromRotationMatrix(e),
                    a.x = s,
                    a.y = l,
                    a.z = h,
                    this
                }
            }(),
            makeFrustum: function(t, e, i, n, r, a) {
                var o = this.elements
                  , s = 2 * r / (e - t)
                  , l = 2 * r / (n - i)
                  , h = (e + t) / (e - t)
                  , c = (n + i) / (n - i)
                  , u = -(a + r) / (a - r)
                  , p = -2 * a * r / (a - r);
                return o[0] = s,
                o[4] = 0,
                o[8] = h,
                o[12] = 0,
                o[1] = 0,
                o[5] = l,
                o[9] = c,
                o[13] = 0,
                o[2] = 0,
                o[6] = 0,
                o[10] = u,
                o[14] = p,
                o[3] = 0,
                o[7] = 0,
                o[11] = -1,
                o[15] = 0,
                this
            },
            makePerspective: function(t, e, i, r) {
                var a = i * Math.tan(n.Math.DEG2RAD * t * .5)
                  , o = -a
                  , s = o * e
                  , l = a * e;
                return this.makeFrustum(s, l, o, a, i, r)
            },
            makeOrthographic: function(t, e, i, n, r, a) {
                var o = this.elements
                  , s = 1 / (e - t)
                  , l = 1 / (i - n)
                  , h = 1 / (a - r)
                  , c = (e + t) * s
                  , u = (i + n) * l
                  , p = (a + r) * h;
                return o[0] = 2 * s,
                o[4] = 0,
                o[8] = 0,
                o[12] = -c,
                o[1] = 0,
                o[5] = 2 * l,
                o[9] = 0,
                o[13] = -u,
                o[2] = 0,
                o[6] = 0,
                o[10] = -2 * h,
                o[14] = -p,
                o[3] = 0,
                o[7] = 0,
                o[11] = 0,
                o[15] = 1,
                this
            },
            equals: function(t) {
                for (var e = this.elements, i = t.elements, n = 0; n < 16; n++)
                    if (e[n] !== i[n])
                        return !1;
                return !0
            },
            fromArray: function(t) {
                return this.elements.set(t),
                this
            },
            toArray: function(t, e) {
                void 0 === t && (t = []),
                void 0 === e && (e = 0);
                var i = this.elements;
                return t[e] = i[0],
                t[e + 1] = i[1],
                t[e + 2] = i[2],
                t[e + 3] = i[3],
                t[e + 4] = i[4],
                t[e + 5] = i[5],
                t[e + 6] = i[6],
                t[e + 7] = i[7],
                t[e + 8] = i[8],
                t[e + 9] = i[9],
                t[e + 10] = i[10],
                t[e + 11] = i[11],
                t[e + 12] = i[12],
                t[e + 13] = i[13],
                t[e + 14] = i[14],
                t[e + 15] = i[15],
                t
            }
        },
        n.Ray = function(t, e) {
            this.origin = void 0 !== t ? t : new n.Vector3,
            this.direction = void 0 !== e ? e : new n.Vector3
        }
        ,
        n.Ray.prototype = {
            constructor: n.Ray,
            set: function(t, e) {
                return this.origin.copy(t),
                this.direction.copy(e),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.origin.copy(t.origin),
                this.direction.copy(t.direction),
                this
            },
            at: function(t, e) {
                var i = e || new n.Vector3;
                return i.copy(this.direction).multiplyScalar(t).add(this.origin)
            },
            lookAt: function(t) {
                return this.direction.copy(t).sub(this.origin).normalize(),
                this
            },
            recast: function() {
                var t = new n.Vector3;
                return function(e) {
                    return this.origin.copy(this.at(e, t)),
                    this
                }
            }(),
            closestPointToPoint: function(t, e) {
                var i = e || new n.Vector3;
                i.subVectors(t, this.origin);
                var r = i.dot(this.direction);
                return r < 0 ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(r).add(this.origin)
            },
            distanceToPoint: function(t) {
                return Math.sqrt(this.distanceSqToPoint(t))
            },
            distanceSqToPoint: function() {
                var t = new n.Vector3;
                return function(e) {
                    var i = t.subVectors(e, this.origin).dot(this.direction);
                    return i < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(i).add(this.origin),
                    t.distanceToSquared(e))
                }
            }(),
            distanceSqToSegment: function() {
                var t = new n.Vector3
                  , e = new n.Vector3
                  , i = new n.Vector3;
                return function(n, r, a, o) {
                    t.copy(n).add(r).multiplyScalar(.5),
                    e.copy(r).sub(n).normalize(),
                    i.copy(this.origin).sub(t);
                    var s, l, h, c, u = .5 * n.distanceTo(r), p = -this.direction.dot(e), f = i.dot(this.direction), d = -i.dot(e), m = i.lengthSq(), g = Math.abs(1 - p * p);
                    if (g > 0)
                        if (s = p * d - f,
                        l = p * f - d,
                        c = u * g,
                        s >= 0)
                            if (l >= -c)
                                if (l <= c) {
                                    var v = 1 / g;
                                    s *= v,
                                    l *= v,
                                    h = s * (s + p * l + 2 * f) + l * (p * s + l + 2 * d) + m
                                } else
                                    l = u,
                                    s = Math.max(0, -(p * l + f)),
                                    h = -s * s + l * (l + 2 * d) + m;
                            else
                                l = -u,
                                s = Math.max(0, -(p * l + f)),
                                h = -s * s + l * (l + 2 * d) + m;
                        else
                            l <= -c ? (s = Math.max(0, -(-p * u + f)),
                            l = s > 0 ? -u : Math.min(Math.max(-u, -d), u),
                            h = -s * s + l * (l + 2 * d) + m) : l <= c ? (s = 0,
                            l = Math.min(Math.max(-u, -d), u),
                            h = l * (l + 2 * d) + m) : (s = Math.max(0, -(p * u + f)),
                            l = s > 0 ? u : Math.min(Math.max(-u, -d), u),
                            h = -s * s + l * (l + 2 * d) + m);
                    else
                        l = p > 0 ? -u : u,
                        s = Math.max(0, -(p * l + f)),
                        h = -s * s + l * (l + 2 * d) + m;
                    return a && a.copy(this.direction).multiplyScalar(s).add(this.origin),
                    o && o.copy(e).multiplyScalar(l).add(t),
                    h
                }
            }(),
            intersectSphere: function() {
                var t = new n.Vector3;
                return function(e, i) {
                    t.subVectors(e.center, this.origin);
                    var n = t.dot(this.direction)
                      , r = t.dot(t) - n * n
                      , a = e.radius * e.radius;
                    if (r > a)
                        return null;
                    var o = Math.sqrt(a - r)
                      , s = n - o
                      , l = n + o;
                    return s < 0 && l < 0 ? null : s < 0 ? this.at(l, i) : this.at(s, i)
                }
            }(),
            intersectsSphere: function(t) {
                return this.distanceToPoint(t.center) <= t.radius
            },
            distanceToPlane: function(t) {
                var e = t.normal.dot(this.direction);
                if (0 === e)
                    return 0 === t.distanceToPoint(this.origin) ? 0 : null;
                var i = -(this.origin.dot(t.normal) + t.constant) / e;
                return i >= 0 ? i : null
            },
            intersectPlane: function(t, e) {
                var i = this.distanceToPlane(t);
                return null === i ? null : this.at(i, e)
            },
            intersectsPlane: function(t) {
                var e = t.distanceToPoint(this.origin);
                if (0 === e)
                    return !0;
                var i = t.normal.dot(this.direction);
                return i * e < 0
            },
            intersectBox: function(t, e) {
                var i, n, r, a, o, s, l = 1 / this.direction.x, h = 1 / this.direction.y, c = 1 / this.direction.z, u = this.origin;
                return l >= 0 ? (i = (t.min.x - u.x) * l,
                n = (t.max.x - u.x) * l) : (i = (t.max.x - u.x) * l,
                n = (t.min.x - u.x) * l),
                h >= 0 ? (r = (t.min.y - u.y) * h,
                a = (t.max.y - u.y) * h) : (r = (t.max.y - u.y) * h,
                a = (t.min.y - u.y) * h),
                i > a || r > n ? null : ((r > i || i !== i) && (i = r),
                (a < n || n !== n) && (n = a),
                c >= 0 ? (o = (t.min.z - u.z) * c,
                s = (t.max.z - u.z) * c) : (o = (t.max.z - u.z) * c,
                s = (t.min.z - u.z) * c),
                i > s || o > n ? null : ((o > i || i !== i) && (i = o),
                (s < n || n !== n) && (n = s),
                n < 0 ? null : this.at(i >= 0 ? i : n, e)))
            },
            intersectsBox: function() {
                var t = new n.Vector3;
                return function(e) {
                    return null !== this.intersectBox(e, t)
                }
            }(),
            intersectTriangle: function() {
                var t = new n.Vector3
                  , e = new n.Vector3
                  , i = new n.Vector3
                  , r = new n.Vector3;
                return function(n, a, o, s, l) {
                    e.subVectors(a, n),
                    i.subVectors(o, n),
                    r.crossVectors(e, i);
                    var h, c = this.direction.dot(r);
                    if (c > 0) {
                        if (s)
                            return null;
                        h = 1
                    } else {
                        if (!(c < 0))
                            return null;
                        h = -1,
                        c = -c
                    }
                    t.subVectors(this.origin, n);
                    var u = h * this.direction.dot(i.crossVectors(t, i));
                    if (u < 0)
                        return null;
                    var p = h * this.direction.dot(e.cross(t));
                    if (p < 0)
                        return null;
                    if (u + p > c)
                        return null;
                    var f = -h * t.dot(r);
                    return f < 0 ? null : this.at(f / c, l)
                }
            }(),
            applyMatrix4: function(t) {
                return this.direction.add(this.origin).applyMatrix4(t),
                this.origin.applyMatrix4(t),
                this.direction.sub(this.origin),
                this.direction.normalize(),
                this
            },
            equals: function(t) {
                return t.origin.equals(this.origin) && t.direction.equals(this.direction)
            }
        },
        n.Sphere = function(t, e) {
            this.center = void 0 !== t ? t : new n.Vector3,
            this.radius = void 0 !== e ? e : 0
        }
        ,
        n.Sphere.prototype = {
            constructor: n.Sphere,
            set: function(t, e) {
                return this.center.copy(t),
                this.radius = e,
                this
            },
            setFromPoints: function() {
                var t = new n.Box3;
                return function(e, i) {
                    var n = this.center;
                    void 0 !== i ? n.copy(i) : t.setFromPoints(e).center(n);
                    for (var r = 0, a = 0, o = e.length; a < o; a++)
                        r = Math.max(r, n.distanceToSquared(e[a]));
                    return this.radius = Math.sqrt(r),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.center.copy(t.center),
                this.radius = t.radius,
                this
            },
            empty: function() {
                return this.radius <= 0
            },
            containsPoint: function(t) {
                return t.distanceToSquared(this.center) <= this.radius * this.radius
            },
            distanceToPoint: function(t) {
                return t.distanceTo(this.center) - this.radius
            },
            intersectsSphere: function(t) {
                var e = this.radius + t.radius;
                return t.center.distanceToSquared(this.center) <= e * e
            },
            intersectsBox: function(t) {
                return t.intersectsSphere(this)
            },
            intersectsPlane: function(t) {
                return Math.abs(this.center.dot(t.normal) - t.constant) <= this.radius
            },
            clampPoint: function(t, e) {
                var i = this.center.distanceToSquared(t)
                  , r = e || new n.Vector3;
                return r.copy(t),
                i > this.radius * this.radius && (r.sub(this.center).normalize(),
                r.multiplyScalar(this.radius).add(this.center)),
                r
            },
            getBoundingBox: function(t) {
                var e = t || new n.Box3;
                return e.set(this.center, this.center),
                e.expandByScalar(this.radius),
                e
            },
            applyMatrix4: function(t) {
                return this.center.applyMatrix4(t),
                this.radius = this.radius * t.getMaxScaleOnAxis(),
                this
            },
            translate: function(t) {
                return this.center.add(t),
                this
            },
            equals: function(t) {
                return t.center.equals(this.center) && t.radius === this.radius
            }
        },
        n.Frustum = function(t, e, i, r, a, o) {
            this.planes = [void 0 !== t ? t : new n.Plane, void 0 !== e ? e : new n.Plane, void 0 !== i ? i : new n.Plane, void 0 !== r ? r : new n.Plane, void 0 !== a ? a : new n.Plane, void 0 !== o ? o : new n.Plane]
        }
        ,
        n.Frustum.prototype = {
            constructor: n.Frustum,
            set: function(t, e, i, n, r, a) {
                var o = this.planes;
                return o[0].copy(t),
                o[1].copy(e),
                o[2].copy(i),
                o[3].copy(n),
                o[4].copy(r),
                o[5].copy(a),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                for (var e = this.planes, i = 0; i < 6; i++)
                    e[i].copy(t.planes[i]);
                return this
            },
            setFromMatrix: function(t) {
                var e = this.planes
                  , i = t.elements
                  , n = i[0]
                  , r = i[1]
                  , a = i[2]
                  , o = i[3]
                  , s = i[4]
                  , l = i[5]
                  , h = i[6]
                  , c = i[7]
                  , u = i[8]
                  , p = i[9]
                  , f = i[10]
                  , d = i[11]
                  , m = i[12]
                  , g = i[13]
                  , v = i[14]
                  , y = i[15];
                return e[0].setComponents(o - n, c - s, d - u, y - m).normalize(),
                e[1].setComponents(o + n, c + s, d + u, y + m).normalize(),
                e[2].setComponents(o + r, c + l, d + p, y + g).normalize(),
                e[3].setComponents(o - r, c - l, d - p, y - g).normalize(),
                e[4].setComponents(o - a, c - h, d - f, y - v).normalize(),
                e[5].setComponents(o + a, c + h, d + f, y + v).normalize(),
                this
            },
            intersectsObject: function() {
                var t = new n.Sphere;
                return function(e) {
                    var i = e.geometry;
                    return null === i.boundingSphere && i.computeBoundingSphere(),
                    t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(t)
                }
            }(),
            intersectsSprite: function() {
                var t = new n.Sphere;
                return function(e) {
                    return t.center.set(0, 0, 0),
                    t.radius = .7071067811865476,
                    t.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(t)
                }
            }(),
            intersectsSphere: function(t) {
                for (var e = this.planes, i = t.center, n = -t.radius, r = 0; r < 6; r++) {
                    var a = e[r].distanceToPoint(i);
                    if (a < n)
                        return !1
                }
                return !0
            },
            intersectsBox: function() {
                var t = new n.Vector3
                  , e = new n.Vector3;
                return function(i) {
                    for (var n = this.planes, r = 0; r < 6; r++) {
                        var a = n[r];
                        t.x = a.normal.x > 0 ? i.min.x : i.max.x,
                        e.x = a.normal.x > 0 ? i.max.x : i.min.x,
                        t.y = a.normal.y > 0 ? i.min.y : i.max.y,
                        e.y = a.normal.y > 0 ? i.max.y : i.min.y,
                        t.z = a.normal.z > 0 ? i.min.z : i.max.z,
                        e.z = a.normal.z > 0 ? i.max.z : i.min.z;
                        var o = a.distanceToPoint(t)
                          , s = a.distanceToPoint(e);
                        if (o < 0 && s < 0)
                            return !1
                    }
                    return !0
                }
            }(),
            containsPoint: function(t) {
                for (var e = this.planes, i = 0; i < 6; i++)
                    if (e[i].distanceToPoint(t) < 0)
                        return !1;
                return !0
            }
        },
        n.Plane = function(t, e) {
            this.normal = void 0 !== t ? t : new n.Vector3(1,0,0),
            this.constant = void 0 !== e ? e : 0
        }
        ,
        n.Plane.prototype = {
            constructor: n.Plane,
            set: function(t, e) {
                return this.normal.copy(t),
                this.constant = e,
                this
            },
            setComponents: function(t, e, i, n) {
                return this.normal.set(t, e, i),
                this.constant = n,
                this
            },
            setFromNormalAndCoplanarPoint: function(t, e) {
                return this.normal.copy(t),
                this.constant = -e.dot(this.normal),
                this
            },
            setFromCoplanarPoints: function() {
                var t = new n.Vector3
                  , e = new n.Vector3;
                return function(i, n, r) {
                    var a = t.subVectors(r, n).cross(e.subVectors(i, n)).normalize();
                    return this.setFromNormalAndCoplanarPoint(a, i),
                    this
                }
            }(),
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.normal.copy(t.normal),
                this.constant = t.constant,
                this
            },
            normalize: function() {
                var t = 1 / this.normal.length();
                return this.normal.multiplyScalar(t),
                this.constant *= t,
                this
            },
            negate: function() {
                return this.constant *= -1,
                this.normal.negate(),
                this
            },
            distanceToPoint: function(t) {
                return this.normal.dot(t) + this.constant
            },
            distanceToSphere: function(t) {
                return this.distanceToPoint(t.center) - t.radius
            },
            projectPoint: function(t, e) {
                return this.orthoPoint(t, e).sub(t).negate()
            },
            orthoPoint: function(t, e) {
                var i = this.distanceToPoint(t)
                  , r = e || new n.Vector3;
                return r.copy(this.normal).multiplyScalar(i)
            },
            intersectLine: function() {
                var t = new n.Vector3;
                return function(e, i) {
                    var r = i || new n.Vector3
                      , a = e.delta(t)
                      , o = this.normal.dot(a);
                    if (0 !== o) {
                        var s = -(e.start.dot(this.normal) + this.constant) / o;
                        if (!(s < 0 || s > 1))
                            return r.copy(a).multiplyScalar(s).add(e.start)
                    } else if (0 === this.distanceToPoint(e.start))
                        return r.copy(e.start)
                }
            }(),
            intersectsLine: function(t) {
                var e = this.distanceToPoint(t.start)
                  , i = this.distanceToPoint(t.end);
                return e < 0 && i > 0 || i < 0 && e > 0
            },
            intersectsBox: function(t) {
                return t.intersectsPlane(this)
            },
            intersectsSphere: function(t) {
                return t.intersectsPlane(this)
            },
            coplanarPoint: function(t) {
                var e = t || new n.Vector3;
                return e.copy(this.normal).multiplyScalar(-this.constant)
            },
            applyMatrix4: function() {
                var t = new n.Vector3
                  , e = new n.Matrix3;
                return function(i, n) {
                    var r = this.coplanarPoint(t).applyMatrix4(i)
                      , a = n || e.getNormalMatrix(i)
                      , o = this.normal.applyMatrix3(a).normalize();
                    return this.constant = -r.dot(o),
                    this
                }
            }(),
            translate: function(t) {
                return this.constant = this.constant - t.dot(this.normal),
                this
            },
            equals: function(t) {
                return t.normal.equals(this.normal) && t.constant === this.constant
            }
        },
        n.Spherical = function(t, e, i) {
            return this.radius = void 0 !== t ? t : 1,
            this.phi = void 0 !== e ? e : 0,
            this.theta = void 0 !== i ? i : 0,
            this
        }
        ,
        n.Spherical.prototype = {
            constructor: n.Spherical,
            set: function(t, e, i) {
                return this.radius = t,
                this.phi = e,
                this.theta = i,
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.radius.copy(t.radius),
                this.phi.copy(t.phi),
                this.theta.copy(t.theta),
                this
            },
            makeSafe: function() {
                var t = 1e-6;
                return this.phi = Math.max(t, Math.min(Math.PI - t, this.phi)),
                this
            },
            setFromVector3: function(t) {
                return this.radius = t.length(),
                0 === this.radius ? (this.theta = 0,
                this.phi = 0) : (this.theta = Math.atan2(t.x, t.z),
                this.phi = Math.acos(n.Math.clamp(t.y / this.radius, -1, 1))),
                this
            }
        },
        n.Math = {
            DEG2RAD: Math.PI / 180,
            RAD2DEG: 180 / Math.PI,
            generateUUID: function() {
                var t, e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), i = new Array(36), n = 0;
                return function() {
                    for (var r = 0; r < 36; r++)
                        8 === r || 13 === r || 18 === r || 23 === r ? i[r] = "-" : 14 === r ? i[r] = "4" : (n <= 2 && (n = 33554432 + 16777216 * Math.random() | 0),
                        t = 15 & n,
                        n >>= 4,
                        i[r] = e[19 === r ? 3 & t | 8 : t]);
                    return i.join("")
                }
            }(),
            clamp: function(t, e, i) {
                return Math.max(e, Math.min(i, t))
            },
            euclideanModulo: function(t, e) {
                return (t % e + e) % e
            },
            mapLinear: function(t, e, i, n, r) {
                return n + (t - e) * (r - n) / (i - e)
            },
            smoothstep: function(t, e, i) {
                return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e),
                t * t * (3 - 2 * t))
            },
            smootherstep: function(t, e, i) {
                return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e),
                t * t * t * (t * (6 * t - 15) + 10))
            },
            random16: function() {
                return Math.random()
            },
            randInt: function(t, e) {
                return t + Math.floor(Math.random() * (e - t + 1))
            },
            randFloat: function(t, e) {
                return t + Math.random() * (e - t)
            },
            randFloatSpread: function(t) {
                return t * (.5 - Math.random())
            },
            degToRad: function(t) {
                return t * n.Math.DEG2RAD
            },
            radToDeg: function(t) {
                return t * n.Math.RAD2DEG
            },
            isPowerOfTwo: function(t) {
                return 0 === (t & t - 1) && 0 !== t
            },
            nearestPowerOfTwo: function(t) {
                return Math.pow(2, Math.round(Math.log(t) / Math.LN2))
            },
            nextPowerOfTwo: function(t) {
                return t--,
                t |= t >> 1,
                t |= t >> 2,
                t |= t >> 4,
                t |= t >> 8,
                t |= t >> 16,
                t++,
                t
            }
        },
        n.Spline = function(t) {
            function e(t, e, i, n, r, a, o) {
                var s = .5 * (i - t)
                  , l = .5 * (n - e);
                return (2 * (e - i) + s + l) * o + (-3 * (e - i) - 2 * s - l) * a + s * r + e
            }
            this.points = t;
            var i, r, a, o, s, l, h, c, u, p = [], f = {
                x: 0,
                y: 0,
                z: 0
            };
            this.initFromArray = function(t) {
                this.points = [];
                for (var e = 0; e < t.length; e++)
                    this.points[e] = {
                        x: t[e][0],
                        y: t[e][1],
                        z: t[e][2]
                    }
            }
            ,
            this.getPoint = function(t) {
                return i = (this.points.length - 1) * t,
                r = Math.floor(i),
                a = i - r,
                p[0] = 0 === r ? r : r - 1,
                p[1] = r,
                p[2] = r > this.points.length - 2 ? this.points.length - 1 : r + 1,
                p[3] = r > this.points.length - 3 ? this.points.length - 1 : r + 2,
                l = this.points[p[0]],
                h = this.points[p[1]],
                c = this.points[p[2]],
                u = this.points[p[3]],
                o = a * a,
                s = a * o,
                f.x = e(l.x, h.x, c.x, u.x, a, o, s),
                f.y = e(l.y, h.y, c.y, u.y, a, o, s),
                f.z = e(l.z, h.z, c.z, u.z, a, o, s),
                f
            }
            ,
            this.getControlPointsArray = function() {
                var t, e, i = this.points.length, n = [];
                for (t = 0; t < i; t++)
                    e = this.points[t],
                    n[t] = [e.x, e.y, e.z];
                return n
            }
            ,
            this.getLength = function(t) {
                var e, i, r, a, o = 0, s = 0, l = 0, h = new n.Vector3, c = new n.Vector3, u = [], p = 0;
                for (u[0] = 0,
                t || (t = 100),
                r = this.points.length * t,
                h.copy(this.points[0]),
                e = 1; e < r; e++)
                    i = e / r,
                    a = this.getPoint(i),
                    c.copy(a),
                    p += c.distanceTo(h),
                    h.copy(a),
                    o = (this.points.length - 1) * i,
                    s = Math.floor(o),
                    s !== l && (u[s] = p,
                    l = s);
                return u[u.length] = p,
                {
                    chunks: u,
                    total: p
                }
            }
            ,
            this.reparametrizeByArcLength = function(t) {
                var e, i, r, a, o, s, l, h, c = [], u = new n.Vector3, p = this.getLength();
                for (c.push(u.copy(this.points[0]).clone()),
                e = 1; e < this.points.length; e++) {
                    for (s = p.chunks[e] - p.chunks[e - 1],
                    l = Math.ceil(t * s / p.total),
                    a = (e - 1) / (this.points.length - 1),
                    o = e / (this.points.length - 1),
                    i = 1; i < l - 1; i++)
                        r = a + i * (1 / l) * (o - a),
                        h = this.getPoint(r),
                        c.push(u.copy(h).clone());
                    c.push(u.copy(this.points[e]).clone())
                }
                this.points = c
            }
        }
        ,
        n.Triangle = function(t, e, i) {
            this.a = void 0 !== t ? t : new n.Vector3,
            this.b = void 0 !== e ? e : new n.Vector3,
            this.c = void 0 !== i ? i : new n.Vector3
        }
        ,
        n.Triangle.normal = function() {
            var t = new n.Vector3;
            return function(e, i, r, a) {
                var o = a || new n.Vector3;
                o.subVectors(r, i),
                t.subVectors(e, i),
                o.cross(t);
                var s = o.lengthSq();
                return s > 0 ? o.multiplyScalar(1 / Math.sqrt(s)) : o.set(0, 0, 0)
            }
        }(),
        n.Triangle.barycoordFromPoint = function() {
            var t = new n.Vector3
              , e = new n.Vector3
              , i = new n.Vector3;
            return function(r, a, o, s, l) {
                t.subVectors(s, a),
                e.subVectors(o, a),
                i.subVectors(r, a);
                var h = t.dot(t)
                  , c = t.dot(e)
                  , u = t.dot(i)
                  , p = e.dot(e)
                  , f = e.dot(i)
                  , d = h * p - c * c
                  , m = l || new n.Vector3;
                if (0 === d)
                    return m.set(-2, -1, -1);
                var g = 1 / d
                  , v = (p * u - c * f) * g
                  , y = (h * f - c * u) * g;
                return m.set(1 - v - y, y, v)
            }
        }(),
        n.Triangle.containsPoint = function() {
            var t = new n.Vector3;
            return function(e, i, r, a) {
                var o = n.Triangle.barycoordFromPoint(e, i, r, a, t);
                return o.x >= 0 && o.y >= 0 && o.x + o.y <= 1
            }
        }(),
        n.Triangle.prototype = {
            constructor: n.Triangle,
            set: function(t, e, i) {
                return this.a.copy(t),
                this.b.copy(e),
                this.c.copy(i),
                this
            },
            setFromPointsAndIndices: function(t, e, i, n) {
                return this.a.copy(t[e]),
                this.b.copy(t[i]),
                this.c.copy(t[n]),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.a.copy(t.a),
                this.b.copy(t.b),
                this.c.copy(t.c),
                this
            },
            area: function() {
                var t = new n.Vector3
                  , e = new n.Vector3;
                return function() {
                    return t.subVectors(this.c, this.b),
                    e.subVectors(this.a, this.b),
                    .5 * t.cross(e).length()
                }
            }(),
            midpoint: function(t) {
                var e = t || new n.Vector3;
                return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
            },
            normal: function(t) {
                return n.Triangle.normal(this.a, this.b, this.c, t)
            },
            plane: function(t) {
                var e = t || new n.Plane;
                return e.setFromCoplanarPoints(this.a, this.b, this.c)
            },
            barycoordFromPoint: function(t, e) {
                return n.Triangle.barycoordFromPoint(t, this.a, this.b, this.c, e)
            },
            containsPoint: function(t) {
                return n.Triangle.containsPoint(t, this.a, this.b, this.c)
            },
            closestPointToPoint: function() {
                var t, e, i, r;
                return function(a, o) {
                    void 0 === t && (t = new n.Plane,
                    e = [new n.Line3, new n.Line3, new n.Line3],
                    i = new n.Vector3,
                    r = new n.Vector3);
                    var s = o || new n.Vector3
                      , l = 1 / 0;
                    if (t.setFromCoplanarPoints(this.a, this.b, this.c),
                    t.projectPoint(a, i),
                    this.containsPoint(i) === !0)
                        s.copy(i);
                    else {
                        e[0].set(this.a, this.b),
                        e[1].set(this.b, this.c),
                        e[2].set(this.c, this.a);
                        for (var h = 0; h < e.length; h++) {
                            e[h].closestPointToPoint(i, !0, r);
                            var c = i.distanceToSquared(r);
                            c < l && (l = c,
                            s.copy(r))
                        }
                    }
                    return s
                }
            }(),
            equals: function(t) {
                return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
            }
        },
        n.Interpolant = function(t, e, i, n) {
            this.parameterPositions = t,
            this._cachedIndex = 0,
            this.resultBuffer = void 0 !== n ? n : new e.constructor(i),
            this.sampleValues = e,
            this.valueSize = i
        }
        ,
        n.Interpolant.prototype = {
            constructor: n.Interpolant,
            evaluate: function(t) {
                var e = this.parameterPositions
                  , i = this._cachedIndex
                  , n = e[i]
                  , r = e[i - 1];
                t: {
                    e: {
                        var a;
                        i: {
                            n: if (!(t < n)) {
                                for (var o = i + 2; ; ) {
                                    if (void 0 === n) {
                                        if (t < r)
                                            break n;
                                        return i = e.length,
                                        this._cachedIndex = i,
                                        this.afterEnd_(i - 1, t, r)
                                    }
                                    if (i === o)
                                        break;
                                    if (r = n,
                                    n = e[++i],
                                    t < n)
                                        break e
                                }
                                a = e.length;
                                break i
                            }
                            {
                                if (t >= r)
                                    break t;
                                var s = e[1];
                                t < s && (i = 2,
                                r = s);
                                for (var o = i - 2; ; ) {
                                    if (void 0 === r)
                                        return this._cachedIndex = 0,
                                        this.beforeStart_(0, t, n);
                                    if (i === o)
                                        break;
                                    if (n = r,
                                    r = e[--i - 1],
                                    t >= r)
                                        break e
                                }
                                a = i,
                                i = 0
                            }
                        }
                        for (; i < a; ) {
                            var l = i + a >>> 1;
                            t < e[l] ? a = l : i = l + 1
                        }
                        if (n = e[i],
                        r = e[i - 1],
                        void 0 === r)
                            return this._cachedIndex = 0,
                            this.beforeStart_(0, t, n);
                        if (void 0 === n)
                            return i = e.length,
                            this._cachedIndex = i,
                            this.afterEnd_(i - 1, r, t)
                    }
                    this._cachedIndex = i,
                    this.intervalChanged_(i, r, n)
                }
                return this.interpolate_(i, r, t, n)
            },
            settings: null,
            DefaultSettings_: {},
            getSettings_: function() {
                return this.settings || this.DefaultSettings_
            },
            copySampleValue_: function(t) {
                for (var e = this.resultBuffer, i = this.sampleValues, n = this.valueSize, r = t * n, a = 0; a !== n; ++a)
                    e[a] = i[r + a];
                return e
            },
            interpolate_: function(t, e, i, n) {
                throw new Error("call to abstract method")
            },
            intervalChanged_: function(t, e, i) {}
        },
        Object.assign(n.Interpolant.prototype, {
            beforeStart_: n.Interpolant.prototype.copySampleValue_,
            afterEnd_: n.Interpolant.prototype.copySampleValue_
        }),
        n.CubicInterpolant = function(t, e, i, r) {
            n.Interpolant.call(this, t, e, i, r),
            this._weightPrev = -0,
            this._offsetPrev = -0,
            this._weightNext = -0,
            this._offsetNext = -0
        }
        ,
        n.CubicInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
            constructor: n.CubicInterpolant,
            DefaultSettings_: {
                endingStart: n.ZeroCurvatureEnding,
                endingEnd: n.ZeroCurvatureEnding
            },
            intervalChanged_: function(t, e, i) {
                var r = this.parameterPositions
                  , a = t - 2
                  , o = t + 1
                  , s = r[a]
                  , l = r[o];
                if (void 0 === s)
                    switch (this.getSettings_().endingStart) {
                    case n.ZeroSlopeEnding:
                        a = t,
                        s = 2 * e - i;
                        break;
                    case n.WrapAroundEnding:
                        a = r.length - 2,
                        s = e + r[a] - r[a + 1];
                        break;
                    default:
                        a = t,
                        s = i
                    }
                if (void 0 === l)
                    switch (this.getSettings_().endingEnd) {
                    case n.ZeroSlopeEnding:
                        o = t,
                        l = 2 * i - e;
                        break;
                    case n.WrapAroundEnding:
                        o = 1,
                        l = i + r[1] - r[0];
                        break;
                    default:
                        o = t - 1,
                        l = e
                    }
                var h = .5 * (i - e)
                  , c = this.valueSize;
                this._weightPrev = h / (e - s),
                this._weightNext = h / (l - i),
                this._offsetPrev = a * c,
                this._offsetNext = o * c
            },
            interpolate_: function(t, e, i, n) {
                for (var r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = t * o, l = s - o, h = this._offsetPrev, c = this._offsetNext, u = this._weightPrev, p = this._weightNext, f = (i - e) / (n - e), d = f * f, m = d * f, g = -u * m + 2 * u * d - u * f, v = (1 + u) * m + (-1.5 - 2 * u) * d + (-.5 + u) * f + 1, y = (-1 - p) * m + (1.5 + p) * d + .5 * f, _ = p * m - p * d, x = 0; x !== o; ++x)
                    r[x] = g * a[h + x] + v * a[l + x] + y * a[s + x] + _ * a[c + x];
                return r
            }
        }),
        n.DiscreteInterpolant = function(t, e, i, r) {
            n.Interpolant.call(this, t, e, i, r)
        }
        ,
        n.DiscreteInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
            constructor: n.DiscreteInterpolant,
            interpolate_: function(t, e, i, n) {
                return this.copySampleValue_(t - 1)
            }
        }),
        n.LinearInterpolant = function(t, e, i, r) {
            n.Interpolant.call(this, t, e, i, r)
        }
        ,
        n.LinearInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
            constructor: n.LinearInterpolant,
            interpolate_: function(t, e, i, n) {
                for (var r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = t * o, l = s - o, h = (i - e) / (n - e), c = 1 - h, u = 0; u !== o; ++u)
                    r[u] = a[l + u] * c + a[s + u] * h;
                return r
            }
        }),
        n.QuaternionLinearInterpolant = function(t, e, i, r) {
            n.Interpolant.call(this, t, e, i, r)
        }
        ,
        n.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
            constructor: n.QuaternionLinearInterpolant,
            interpolate_: function(t, e, i, r) {
                for (var a = this.resultBuffer, o = this.sampleValues, s = this.valueSize, l = t * s, h = (i - e) / (r - e), c = l + s; l !== c; l += 4)
                    n.Quaternion.slerpFlat(a, 0, o, l - s, o, l, h);
                return a
            }
        }),
        n.Clock = function(t) {
            this.autoStart = void 0 === t || t,
            this.startTime = 0,
            this.oldTime = 0,
            this.elapsedTime = 0,
            this.running = !1
        }
        ,
        n.Clock.prototype = {
            constructor: n.Clock,
            start: function() {
                this.startTime = (performance || Date).now(),
                this.oldTime = this.startTime,
                this.running = !0
            },
            stop: function() {
                this.getElapsedTime(),
                this.running = !1
            },
            getElapsedTime: function() {
                return this.getDelta(),
                this.elapsedTime
            },
            getDelta: function() {
                var t = 0;
                if (this.autoStart && !this.running && this.start(),
                this.running) {
                    var e = (performance || Date).now();
                    t = (e - this.oldTime) / 1e3,
                    this.oldTime = e,
                    this.elapsedTime += t
                }
                return t
            }
        },
        n.EventDispatcher = function() {}
        ,
        Object.assign(n.EventDispatcher.prototype, {
            addEventListener: function(t, e) {
                void 0 === this._listeners && (this._listeners = {});
                var i = this._listeners;
                void 0 === i[t] && (i[t] = []),
                i[t].indexOf(e) === -1 && i[t].push(e)
            },
            hasEventListener: function(t, e) {
                if (void 0 === this._listeners)
                    return !1;
                var i = this._listeners;
                return void 0 !== i[t] && i[t].indexOf(e) !== -1
            },
            removeEventListener: function(t, e) {
                if (void 0 !== this._listeners) {
                    var i = this._listeners
                      , n = i[t];
                    if (void 0 !== n) {
                        var r = n.indexOf(e);
                        r !== -1 && n.splice(r, 1)
                    }
                }
            },
            dispatchEvent: function(t) {
                if (void 0 !== this._listeners) {
                    var e = this._listeners
                      , i = e[t.type];
                    if (void 0 !== i) {
                        t.target = this;
                        var n = []
                          , r = 0
                          , a = i.length;
                        for (r = 0; r < a; r++)
                            n[r] = i[r];
                        for (r = 0; r < a; r++)
                            n[r].call(this, t)
                    }
                }
            }
        }),
        n.Layers = function() {
            this.mask = 1
        }
        ,
        n.Layers.prototype = {
            constructor: n.Layers,
            set: function(t) {
                this.mask = 1 << t
            },
            enable: function(t) {
                this.mask |= 1 << t
            },
            toggle: function(t) {
                this.mask ^= 1 << t
            },
            disable: function(t) {
                this.mask &= ~(1 << t)
            },
            test: function(t) {
                return 0 !== (this.mask & t.mask)
            }
        },
        function(t) {
            function e(t, e) {
                return t.distance - e.distance
            }
            function i(t, e, n, r) {
                if (t.visible !== !1 && (t.raycast(e, n),
                r === !0))
                    for (var a = t.children, o = 0, s = a.length; o < s; o++)
                        i(a[o], e, n, !0)
            }
            t.Raycaster = function(e, i, n, r) {
                this.ray = new t.Ray(e,i),
                this.near = n || 0,
                this.far = r || 1 / 0,
                this.params = {
                    Mesh: {},
                    Line: {},
                    LOD: {},
                    Points: {
                        threshold: 1
                    },
                    Sprite: {}
                },
                Object.defineProperties(this.params, {
                    PointCloud: {
                        get: function() {
                            return this.Points
                        }
                    }
                })
            }
            ,
            t.Raycaster.prototype = {
                constructor: t.Raycaster,
                linePrecision: 1,
                set: function(t, e) {
                    this.ray.set(t, e)
                },
                setFromCamera: function(e, i) {
                    i instanceof t.PerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(i.matrixWorld),
                    this.ray.direction.set(e.x, e.y, .5).unproject(i).sub(this.ray.origin).normalize()) : i instanceof t.OrthographicCamera && (this.ray.origin.set(e.x, e.y, (i.near + i.far) / (i.near - i.far)).unproject(i),
                    this.ray.direction.set(0, 0, -1).transformDirection(i.matrixWorld))
                },
                intersectObject: function(t, n) {
                    var r = [];
                    return i(t, this, r, n),
                    r.sort(e),
                    r
                },
                intersectObjects: function(t, n) {
                    var r = [];
                    if (Array.isArray(t) === !1)
                        return r;
                    for (var a = 0, o = t.length; a < o; a++)
                        i(t[a], this, r, n);
                    return r.sort(e),
                    r
                }
            }
        }(n),
        n.Object3D = function() {
            function t() {
                a.setFromEuler(r, !1)
            }
            function e() {
                r.setFromQuaternion(a, void 0, !1)
            }
            Object.defineProperty(this, "id", {
                value: n.Object3DIdCount++
            }),
            this.uuid = n.Math.generateUUID(),
            this.name = "",
            this.type = "Object3D",
            this.parent = null,
            this.children = [],
            this.up = n.Object3D.DefaultUp.clone();
            var i = new n.Vector3
              , r = new n.Euler
              , a = new n.Quaternion
              , o = new n.Vector3(1,1,1);
            r.onChange(t),
            a.onChange(e),
            Object.defineProperties(this, {
                position: {
                    enumerable: !0,
                    value: i
                },
                rotation: {
                    enumerable: !0,
                    value: r
                },
                quaternion: {
                    enumerable: !0,
                    value: a
                },
                scale: {
                    enumerable: !0,
                    value: o
                },
                modelViewMatrix: {
                    value: new n.Matrix4
                },
                normalMatrix: {
                    value: new n.Matrix3
                }
            }),
            this.matrix = new n.Matrix4,
            this.matrixWorld = new n.Matrix4,
            this.matrixAutoUpdate = n.Object3D.DefaultMatrixAutoUpdate,
            this.matrixWorldNeedsUpdate = !1,
            this.layers = new n.Layers,
            this.visible = !0,
            this.castShadow = !1,
            this.receiveShadow = !1,
            this.frustumCulled = !0,
            this.renderOrder = 0,
            this.userData = {}
        }
        ,
        n.Object3D.DefaultUp = new n.Vector3(0,1,0),
        n.Object3D.DefaultMatrixAutoUpdate = !0,
        Object.assign(n.Object3D.prototype, n.EventDispatcher.prototype, {
            applyMatrix: function(t) {
                this.matrix.multiplyMatrices(t, this.matrix),
                this.matrix.decompose(this.position, this.quaternion, this.scale)
            },
            setRotationFromAxisAngle: function(t, e) {
                this.quaternion.setFromAxisAngle(t, e)
            },
            setRotationFromEuler: function(t) {
                this.quaternion.setFromEuler(t, !0)
            },
            setRotationFromMatrix: function(t) {
                this.quaternion.setFromRotationMatrix(t)
            },
            setRotationFromQuaternion: function(t) {
                this.quaternion.copy(t)
            },
            rotateOnAxis: function() {
                var t = new n.Quaternion;
                return function(e, i) {
                    return t.setFromAxisAngle(e, i),
                    this.quaternion.multiply(t),
                    this
                }
            }(),
            rotateX: function() {
                var t = new n.Vector3(1,0,0);
                return function(e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            rotateY: function() {
                var t = new n.Vector3(0,1,0);
                return function(e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            rotateZ: function() {
                var t = new n.Vector3(0,0,1);
                return function(e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            translateOnAxis: function() {
                var t = new n.Vector3;
                return function(e, i) {
                    return t.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(t.multiplyScalar(i)),
                    this
                }
            }(),
            translateX: function() {
                var t = new n.Vector3(1,0,0);
                return function(e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            translateY: function() {
                var t = new n.Vector3(0,1,0);
                return function(e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            translateZ: function() {
                var t = new n.Vector3(0,0,1);
                return function(e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            localToWorld: function(t) {
                return t.applyMatrix4(this.matrixWorld)
            },
            worldToLocal: function() {
                var t = new n.Matrix4;
                return function(e) {
                    return e.applyMatrix4(t.getInverse(this.matrixWorld))
                }
            }(),
            lookAt: function() {
                var t = new n.Matrix4;
                return function(e) {
                    t.lookAt(e, this.position, this.up),
                    this.quaternion.setFromRotationMatrix(t)
                }
            }(),
            add: function(t) {
                if (arguments.length > 1) {
                    for (var e = 0; e < arguments.length; e++)
                        this.add(arguments[e]);
                    return this
                }
                return t === this ? this : (t instanceof n.Object3D && (null !== t.parent && t.parent.remove(t),
                t.parent = this,
                t.dispatchEvent({
                    type: "added"
                }),
                this.children.push(t)),
                this)
            },
            remove: function(t) {
                if (arguments.length > 1)
                    for (var e = 0; e < arguments.length; e++)
                        this.remove(arguments[e]);
                var i = this.children.indexOf(t);
                i !== -1 && (t.parent = null,
                t.dispatchEvent({
                    type: "removed"
                }),
                this.children.splice(i, 1))
            },
            getObjectById: function(t) {
                return this.getObjectByProperty("id", t)
            },
            getObjectByName: function(t) {
                return this.getObjectByProperty("name", t)
            },
            getObjectByProperty: function(t, e) {
                if (this[t] === e)
                    return this;
                for (var i = 0, n = this.children.length; i < n; i++) {
                    var r = this.children[i]
                      , a = r.getObjectByProperty(t, e);
                    if (void 0 !== a)
                        return a
                }
            },
            getWorldPosition: function(t) {
                var e = t || new n.Vector3;
                return this.updateMatrixWorld(!0),
                e.setFromMatrixPosition(this.matrixWorld)
            },
            getWorldQuaternion: function() {
                var t = new n.Vector3
                  , e = new n.Vector3;
                return function(i) {
                    var r = i || new n.Quaternion;
                    return this.updateMatrixWorld(!0),
                    this.matrixWorld.decompose(t, r, e),
                    r
                }
            }(),
            getWorldRotation: function() {
                var t = new n.Quaternion;
                return function(e) {
                    var i = e || new n.Euler;
                    return this.getWorldQuaternion(t),
                    i.setFromQuaternion(t, this.rotation.order, !1)
                }
            }(),
            getWorldScale: function() {
                var t = new n.Vector3
                  , e = new n.Quaternion;
                return function(i) {
                    var r = i || new n.Vector3;
                    return this.updateMatrixWorld(!0),
                    this.matrixWorld.decompose(t, e, r),
                    r
                }
            }(),
            getWorldDirection: function() {
                var t = new n.Quaternion;
                return function(e) {
                    var i = e || new n.Vector3;
                    return this.getWorldQuaternion(t),
                    i.set(0, 0, 1).applyQuaternion(t)
                }
            }(),
            raycast: function() {},
            traverse: function(t) {
                t(this);
                for (var e = this.children, i = 0, n = e.length; i < n; i++)
                    e[i].traverse(t)
            },
            traverseVisible: function(t) {
                if (this.visible !== !1) {
                    t(this);
                    for (var e = this.children, i = 0, n = e.length; i < n; i++)
                        e[i].traverseVisible(t)
                }
            },
            traverseAncestors: function(t) {
                var e = this.parent;
                null !== e && (t(e),
                e.traverseAncestors(t))
            },
            updateMatrix: function() {
                this.matrix.compose(this.position, this.quaternion, this.scale),
                this.matrixWorldNeedsUpdate = !0
            },
            updateMatrixWorld: function(t) {
                this.matrixAutoUpdate === !0 && this.updateMatrix(),
                this.matrixWorldNeedsUpdate !== !0 && t !== !0 || (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                this.matrixWorldNeedsUpdate = !1,
                t = !0);
                for (var e = 0, i = this.children.length; e < i; e++)
                    this.children[e].updateMatrixWorld(t)
            },
            toJSON: function(t) {
                function e(t) {
                    var e = [];
                    for (var i in t) {
                        var n = t[i];
                        delete n.metadata,
                        e.push(n)
                    }
                    return e
                }
                var i = void 0 === t || "" === t
                  , n = {};
                i && (t = {
                    geometries: {},
                    materials: {},
                    textures: {},
                    images: {}
                },
                n.metadata = {
                    version: 4.4,
                    type: "Object",
                    generator: "Object3D.toJSON"
                });
                var r = {};
                if (r.uuid = this.uuid,
                r.type = this.type,
                "" !== this.name && (r.name = this.name),
                "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
                this.castShadow === !0 && (r.castShadow = !0),
                this.receiveShadow === !0 && (r.receiveShadow = !0),
                this.visible === !1 && (r.visible = !1),
                r.matrix = this.matrix.toArray(),
                void 0 !== this.geometry && (void 0 === t.geometries[this.geometry.uuid] && (t.geometries[this.geometry.uuid] = this.geometry.toJSON(t)),
                r.geometry = this.geometry.uuid),
                void 0 !== this.material && (void 0 === t.materials[this.material.uuid] && (t.materials[this.material.uuid] = this.material.toJSON(t)),
                r.material = this.material.uuid),
                this.children.length > 0) {
                    r.children = [];
                    for (var a = 0; a < this.children.length; a++)
                        r.children.push(this.children[a].toJSON(t).object)
                }
                if (i) {
                    var o = e(t.geometries)
                      , s = e(t.materials)
                      , l = e(t.textures)
                      , h = e(t.images);
                    o.length > 0 && (n.geometries = o),
                    s.length > 0 && (n.materials = s),
                    l.length > 0 && (n.textures = l),
                    h.length > 0 && (n.images = h)
                }
                return n.object = r,
                n
            },
            clone: function(t) {
                return (new this.constructor).copy(this, t)
            },
            copy: function(t, e) {
                if (void 0 === e && (e = !0),
                this.name = t.name,
                this.up.copy(t.up),
                this.position.copy(t.position),
                this.quaternion.copy(t.quaternion),
                this.scale.copy(t.scale),
                this.matrix.copy(t.matrix),
                this.matrixWorld.copy(t.matrixWorld),
                this.matrixAutoUpdate = t.matrixAutoUpdate,
                this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
                this.visible = t.visible,
                this.castShadow = t.castShadow,
                this.receiveShadow = t.receiveShadow,
                this.frustumCulled = t.frustumCulled,
                this.renderOrder = t.renderOrder,
                this.userData = JSON.parse(JSON.stringify(t.userData)),
                e === !0)
                    for (var i = 0; i < t.children.length; i++) {
                        var n = t.children[i];
                        this.add(n.clone())
                    }
                return this
            }
        }),
        n.Object3DIdCount = 0,
        n.Face3 = function(t, e, i, r, a, o) {
            this.a = t,
            this.b = e,
            this.c = i,
            this.normal = r instanceof n.Vector3 ? r : new n.Vector3,
            this.vertexNormals = Array.isArray(r) ? r : [],
            this.color = a instanceof n.Color ? a : new n.Color,
            this.vertexColors = Array.isArray(a) ? a : [],
            this.materialIndex = void 0 !== o ? o : 0
        }
        ,
        n.Face3.prototype = {
            constructor: n.Face3,
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                this.a = t.a,
                this.b = t.b,
                this.c = t.c,
                this.normal.copy(t.normal),
                this.color.copy(t.color),
                this.materialIndex = t.materialIndex;
                for (var e = 0, i = t.vertexNormals.length; e < i; e++)
                    this.vertexNormals[e] = t.vertexNormals[e].clone();
                for (var e = 0, i = t.vertexColors.length; e < i; e++)
                    this.vertexColors[e] = t.vertexColors[e].clone();
                return this
            }
        },
        n.BufferAttribute = function(t, e, i) {
            this.uuid = n.Math.generateUUID(),
            this.array = t,
            this.itemSize = e,
            this.dynamic = !1,
            this.updateRange = {
                offset: 0,
                count: -1
            },
            this.version = 0,
            this.normalized = i === !0
        }
        ,
        n.BufferAttribute.prototype = {
            constructor: n.BufferAttribute,
            get count() {
                return this.array.length / this.itemSize
            },
            set needsUpdate(t) {
                t === !0 && this.version++
            },
            setDynamic: function(t) {
                return this.dynamic = t,
                this
            },
            copy: function(t) {
                return this.array = new t.array.constructor(t.array),
                this.itemSize = t.itemSize,
                this.dynamic = t.dynamic,
                this
            },
            copyAt: function(t, e, i) {
                t *= this.itemSize,
                i *= e.itemSize;
                for (var n = 0, r = this.itemSize; n < r; n++)
                    this.array[t + n] = e.array[i + n];
                return this
            },
            copyArray: function(t) {
                return this.array.set(t),
                this
            },
            copyColorsArray: function(t) {
                for (var e = this.array, i = 0, r = 0, a = t.length; r < a; r++) {
                    var o = t[r];
                    void 0 === o && (o = new n.Color),
                    e[i++] = o.r,
                    e[i++] = o.g,
                    e[i++] = o.b
                }
                return this
            },
            copyIndicesArray: function(t) {
                for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    e[i++] = a.a,
                    e[i++] = a.b,
                    e[i++] = a.c
                }
                return this
            },
            copyVector2sArray: function(t) {
                for (var e = this.array, i = 0, r = 0, a = t.length; r < a; r++) {
                    var o = t[r];
                    void 0 === o && (o = new n.Vector2),
                    e[i++] = o.x,
                    e[i++] = o.y
                }
                return this
            },
            copyVector3sArray: function(t) {
                for (var e = this.array, i = 0, r = 0, a = t.length; r < a; r++) {
                    var o = t[r];
                    void 0 === o && (o = new n.Vector3),
                    e[i++] = o.x,
                    e[i++] = o.y,
                    e[i++] = o.z
                }
                return this
            },
            copyVector4sArray: function(t) {
                for (var e = this.array, i = 0, r = 0, a = t.length; r < a; r++) {
                    var o = t[r];
                    void 0 === o && (o = new n.Vector4),
                    e[i++] = o.x,
                    e[i++] = o.y,
                    e[i++] = o.z,
                    e[i++] = o.w
                }
                return this
            },
            set: function(t, e) {
                return void 0 === e && (e = 0),
                this.array.set(t, e),
                this
            },
            getX: function(t) {
                return this.array[t * this.itemSize]
            },
            setX: function(t, e) {
                return this.array[t * this.itemSize] = e,
                this
            },
            getY: function(t) {
                return this.array[t * this.itemSize + 1]
            },
            setY: function(t, e) {
                return this.array[t * this.itemSize + 1] = e,
                this
            },
            getZ: function(t) {
                return this.array[t * this.itemSize + 2]
            },
            setZ: function(t, e) {
                return this.array[t * this.itemSize + 2] = e,
                this
            },
            getW: function(t) {
                return this.array[t * this.itemSize + 3]
            },
            setW: function(t, e) {
                return this.array[t * this.itemSize + 3] = e,
                this
            },
            setXY: function(t, e, i) {
                return t *= this.itemSize,
                this.array[t + 0] = e,
                this.array[t + 1] = i,
                this
            },
            setXYZ: function(t, e, i, n) {
                return t *= this.itemSize,
                this.array[t + 0] = e,
                this.array[t + 1] = i,
                this.array[t + 2] = n,
                this
            },
            setXYZW: function(t, e, i, n, r) {
                return t *= this.itemSize,
                this.array[t + 0] = e,
                this.array[t + 1] = i,
                this.array[t + 2] = n,
                this.array[t + 3] = r,
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            }
        },
        n.Int8Attribute = function(t, e) {
            return new n.BufferAttribute(new Int8Array(t),e)
        }
        ,
        n.Uint8Attribute = function(t, e) {
            return new n.BufferAttribute(new Uint8Array(t),e)
        }
        ,
        n.Uint8ClampedAttribute = function(t, e) {
            return new n.BufferAttribute(new Uint8ClampedArray(t),e)
        }
        ,
        n.Int16Attribute = function(t, e) {
            return new n.BufferAttribute(new Int16Array(t),e)
        }
        ,
        n.Uint16Attribute = function(t, e) {
            return new n.BufferAttribute(new Uint16Array(t),e)
        }
        ,
        n.Int32Attribute = function(t, e) {
            return new n.BufferAttribute(new Int32Array(t),e)
        }
        ,
        n.Uint32Attribute = function(t, e) {
            return new n.BufferAttribute(new Uint32Array(t),e)
        }
        ,
        n.Float32Attribute = function(t, e) {
            return new n.BufferAttribute(new Float32Array(t),e)
        }
        ,
        n.Float64Attribute = function(t, e) {
            return new n.BufferAttribute(new Float64Array(t),e)
        }
        ,
        n.DynamicBufferAttribute = function(t, e) {
            return new n.BufferAttribute(t,e).setDynamic(!0)
        }
        ,
        n.InstancedBufferAttribute = function(t, e, i) {
            n.BufferAttribute.call(this, t, e),
            this.meshPerAttribute = i || 1
        }
        ,
        n.InstancedBufferAttribute.prototype = Object.create(n.BufferAttribute.prototype),
        n.InstancedBufferAttribute.prototype.constructor = n.InstancedBufferAttribute,
        n.InstancedBufferAttribute.prototype.copy = function(t) {
            return n.BufferAttribute.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
        ,
        n.InterleavedBuffer = function(t, e) {
            this.uuid = n.Math.generateUUID(),
            this.array = t,
            this.stride = e,
            this.dynamic = !1,
            this.updateRange = {
                offset: 0,
                count: -1
            },
            this.version = 0
        }
        ,
        n.InterleavedBuffer.prototype = {
            constructor: n.InterleavedBuffer,
            get length() {
                return this.array.length
            },
            get count() {
                return this.array.length / this.stride
            },
            set needsUpdate(t) {
                t === !0 && this.version++
            },
            setDynamic: function(t) {
                return this.dynamic = t,
                this
            },
            copy: function(t) {
                return this.array = new t.array.constructor(t.array),
                this.stride = t.stride,
                this.dynamic = t.dynamic,
                this
            },
            copyAt: function(t, e, i) {
                t *= this.stride,
                i *= e.stride;
                for (var n = 0, r = this.stride; n < r; n++)
                    this.array[t + n] = e.array[i + n];
                return this
            },
            set: function(t, e) {
                return void 0 === e && (e = 0),
                this.array.set(t, e),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            }
        },
        n.InstancedInterleavedBuffer = function(t, e, i) {
            n.InterleavedBuffer.call(this, t, e),
            this.meshPerAttribute = i || 1
        }
        ,
        n.InstancedInterleavedBuffer.prototype = Object.create(n.InterleavedBuffer.prototype),
        n.InstancedInterleavedBuffer.prototype.constructor = n.InstancedInterleavedBuffer,
        n.InstancedInterleavedBuffer.prototype.copy = function(t) {
            return n.InterleavedBuffer.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
        ,
        n.InterleavedBufferAttribute = function(t, e, i, r) {
            this.uuid = n.Math.generateUUID(),
            this.data = t,
            this.itemSize = e,
            this.offset = i,
            this.normalized = r === !0
        }
        ,
        n.InterleavedBufferAttribute.prototype = {
            constructor: n.InterleavedBufferAttribute,
            get length() {
                return this.array.length
            },
            get count() {
                return this.data.count
            },
            get array() {
                return this.data.array
            },
            setX: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset] = e,
                this
            },
            setY: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset + 1] = e,
                this
            },
            setZ: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset + 2] = e,
                this
            },
            setW: function(t, e) {
                return this.data.array[t * this.data.stride + this.offset + 3] = e,
                this
            },
            getX: function(t) {
                return this.data.array[t * this.data.stride + this.offset]
            },
            getY: function(t) {
                return this.data.array[t * this.data.stride + this.offset + 1]
            },
            getZ: function(t) {
                return this.data.array[t * this.data.stride + this.offset + 2]
            },
            getW: function(t) {
                return this.data.array[t * this.data.stride + this.offset + 3]
            },
            setXY: function(t, e, i) {
                return t = t * this.data.stride + this.offset,
                this.data.array[t + 0] = e,
                this.data.array[t + 1] = i,
                this
            },
            setXYZ: function(t, e, i, n) {
                return t = t * this.data.stride + this.offset,
                this.data.array[t + 0] = e,
                this.data.array[t + 1] = i,
                this.data.array[t + 2] = n,
                this
            },
            setXYZW: function(t, e, i, n, r) {
                return t = t * this.data.stride + this.offset,
                this.data.array[t + 0] = e,
                this.data.array[t + 1] = i,
                this.data.array[t + 2] = n,
                this.data.array[t + 3] = r,
                this
            }
        },
        n.Geometry = function() {
            Object.defineProperty(this, "id", {
                value: n.GeometryIdCount++
            }),
            this.uuid = n.Math.generateUUID(),
            this.name = "",
            this.type = "Geometry",
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.elementsNeedUpdate = !1,
            this.verticesNeedUpdate = !1,
            this.uvsNeedUpdate = !1,
            this.normalsNeedUpdate = !1,
            this.colorsNeedUpdate = !1,
            this.lineDistancesNeedUpdate = !1,
            this.groupsNeedUpdate = !1
        }
        ,
        Object.assign(n.Geometry.prototype, n.EventDispatcher.prototype, {
            applyMatrix: function(t) {
                for (var e = (new n.Matrix3).getNormalMatrix(t), i = 0, r = this.vertices.length; i < r; i++) {
                    var a = this.vertices[i];
                    a.applyMatrix4(t)
                }
                for (var i = 0, r = this.faces.length; i < r; i++) {
                    var o = this.faces[i];
                    o.normal.applyMatrix3(e).normalize();
                    for (var s = 0, l = o.vertexNormals.length; s < l; s++)
                        o.vertexNormals[s].applyMatrix3(e).normalize()
                }
                return null !== this.boundingBox && this.computeBoundingBox(),
                null !== this.boundingSphere && this.computeBoundingSphere(),
                this.verticesNeedUpdate = !0,
                this.normalsNeedUpdate = !0,
                this
            },
            rotateX: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeRotationX(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateY: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeRotationY(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateZ: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeRotationZ(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            translate: function() {
                var t;
                return function(e, i, r) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeTranslation(e, i, r),
                    this.applyMatrix(t),
                    this
                }
            }(),
            scale: function() {
                var t;
                return function(e, i, r) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeScale(e, i, r),
                    this.applyMatrix(t),
                    this
                }
            }(),
            lookAt: function() {
                var t;
                return function(e) {
                    void 0 === t && (t = new n.Object3D),
                    t.lookAt(e),
                    t.updateMatrix(),
                    this.applyMatrix(t.matrix)
                }
            }(),
            fromBufferGeometry: function(t) {
                function e(t, e, r, a) {
                    var o = void 0 !== s ? [u[t].clone(), u[e].clone(), u[r].clone()] : []
                      , d = void 0 !== l ? [i.colors[t].clone(), i.colors[e].clone(), i.colors[r].clone()] : []
                      , m = new n.Face3(t,e,r,o,d,a);
                    i.faces.push(m),
                    void 0 !== h && i.faceVertexUvs[0].push([p[t].clone(), p[e].clone(), p[r].clone()]),
                    void 0 !== c && i.faceVertexUvs[1].push([f[t].clone(), f[e].clone(), f[r].clone()])
                }
                var i = this
                  , r = null !== t.index ? t.index.array : void 0
                  , a = t.attributes
                  , o = a.position.array
                  , s = void 0 !== a.normal ? a.normal.array : void 0
                  , l = void 0 !== a.color ? a.color.array : void 0
                  , h = void 0 !== a.uv ? a.uv.array : void 0
                  , c = void 0 !== a.uv2 ? a.uv2.array : void 0;
                void 0 !== c && (this.faceVertexUvs[1] = []);
                for (var u = [], p = [], f = [], d = 0, m = 0; d < o.length; d += 3,
                m += 2)
                    i.vertices.push(new n.Vector3(o[d],o[d + 1],o[d + 2])),
                    void 0 !== s && u.push(new n.Vector3(s[d],s[d + 1],s[d + 2])),
                    void 0 !== l && i.colors.push(new n.Color(l[d],l[d + 1],l[d + 2])),
                    void 0 !== h && p.push(new n.Vector2(h[m],h[m + 1])),
                    void 0 !== c && f.push(new n.Vector2(c[m],c[m + 1]));
                if (void 0 !== r) {
                    var g = t.groups;
                    if (g.length > 0)
                        for (var d = 0; d < g.length; d++)
                            for (var v = g[d], y = v.start, _ = v.count, m = y, x = y + _; m < x; m += 3)
                                e(r[m], r[m + 1], r[m + 2], v.materialIndex);
                    else
                        for (var d = 0; d < r.length; d += 3)
                            e(r[d], r[d + 1], r[d + 2])
                } else
                    for (var d = 0; d < o.length / 3; d += 3)
                        e(d, d + 1, d + 2);
                return this.computeFaceNormals(),
                null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                this
            },
            center: function() {
                this.computeBoundingBox();
                var t = this.boundingBox.center().negate();
                return this.translate(t.x, t.y, t.z),
                t
            },
            normalize: function() {
                this.computeBoundingSphere();
                var t = this.boundingSphere.center
                  , e = this.boundingSphere.radius
                  , i = 0 === e ? 1 : 1 / e
                  , r = new n.Matrix4;
                return r.set(i, 0, 0, -i * t.x, 0, i, 0, -i * t.y, 0, 0, i, -i * t.z, 0, 0, 0, 1),
                this.applyMatrix(r),
                this
            },
            computeFaceNormals: function() {
                for (var t = new n.Vector3, e = new n.Vector3, i = 0, r = this.faces.length; i < r; i++) {
                    var a = this.faces[i]
                      , o = this.vertices[a.a]
                      , s = this.vertices[a.b]
                      , l = this.vertices[a.c];
                    t.subVectors(l, s),
                    e.subVectors(o, s),
                    t.cross(e),
                    t.normalize(),
                    a.normal.copy(t)
                }
            },
            computeVertexNormals: function(t) {
                void 0 === t && (t = !0);
                var e, i, r, a, o, s;
                for (s = new Array(this.vertices.length),
                e = 0,
                i = this.vertices.length; e < i; e++)
                    s[e] = new n.Vector3;
                if (t) {
                    var l, h, c, u = new n.Vector3, p = new n.Vector3;
                    for (r = 0,
                    a = this.faces.length; r < a; r++)
                        o = this.faces[r],
                        l = this.vertices[o.a],
                        h = this.vertices[o.b],
                        c = this.vertices[o.c],
                        u.subVectors(c, h),
                        p.subVectors(l, h),
                        u.cross(p),
                        s[o.a].add(u),
                        s[o.b].add(u),
                        s[o.c].add(u)
                } else
                    for (r = 0,
                    a = this.faces.length; r < a; r++)
                        o = this.faces[r],
                        s[o.a].add(o.normal),
                        s[o.b].add(o.normal),
                        s[o.c].add(o.normal);
                for (e = 0,
                i = this.vertices.length; e < i; e++)
                    s[e].normalize();
                for (r = 0,
                a = this.faces.length; r < a; r++) {
                    o = this.faces[r];
                    var f = o.vertexNormals;
                    3 === f.length ? (f[0].copy(s[o.a]),
                    f[1].copy(s[o.b]),
                    f[2].copy(s[o.c])) : (f[0] = s[o.a].clone(),
                    f[1] = s[o.b].clone(),
                    f[2] = s[o.c].clone())
                }
                this.faces.length > 0 && (this.normalsNeedUpdate = !0)
            },
            computeMorphNormals: function() {
                var t, e, i, r, a;
                for (i = 0,
                r = this.faces.length; i < r; i++)
                    for (a = this.faces[i],
                    a.__originalFaceNormal ? a.__originalFaceNormal.copy(a.normal) : a.__originalFaceNormal = a.normal.clone(),
                    a.__originalVertexNormals || (a.__originalVertexNormals = []),
                    t = 0,
                    e = a.vertexNormals.length; t < e; t++)
                        a.__originalVertexNormals[t] ? a.__originalVertexNormals[t].copy(a.vertexNormals[t]) : a.__originalVertexNormals[t] = a.vertexNormals[t].clone();
                var o = new n.Geometry;
                for (o.faces = this.faces,
                t = 0,
                e = this.morphTargets.length; t < e; t++) {
                    if (!this.morphNormals[t]) {
                        this.morphNormals[t] = {},
                        this.morphNormals[t].faceNormals = [],
                        this.morphNormals[t].vertexNormals = [];
                        var s, l, h = this.morphNormals[t].faceNormals, c = this.morphNormals[t].vertexNormals;
                        for (i = 0,
                        r = this.faces.length; i < r; i++)
                            s = new n.Vector3,
                            l = {
                                a: new n.Vector3,
                                b: new n.Vector3,
                                c: new n.Vector3
                            },
                            h.push(s),
                            c.push(l)
                    }
                    var u = this.morphNormals[t];
                    o.vertices = this.morphTargets[t].vertices,
                    o.computeFaceNormals(),
                    o.computeVertexNormals();
                    var s, l;
                    for (i = 0,
                    r = this.faces.length; i < r; i++)
                        a = this.faces[i],
                        s = u.faceNormals[i],
                        l = u.vertexNormals[i],
                        s.copy(a.normal),
                        l.a.copy(a.vertexNormals[0]),
                        l.b.copy(a.vertexNormals[1]),
                        l.c.copy(a.vertexNormals[2])
                }
                for (i = 0,
                r = this.faces.length; i < r; i++)
                    a = this.faces[i],
                    a.normal = a.__originalFaceNormal,
                    a.vertexNormals = a.__originalVertexNormals
            },
            computeTangents: function() {},
            computeLineDistances: function() {
                for (var t = 0, e = this.vertices, i = 0, n = e.length; i < n; i++)
                    i > 0 && (t += e[i].distanceTo(e[i - 1])),
                    this.lineDistances[i] = t
            },
            computeBoundingBox: function() {
                null === this.boundingBox && (this.boundingBox = new n.Box3),
                this.boundingBox.setFromPoints(this.vertices)
            },
            computeBoundingSphere: function() {
                null === this.boundingSphere && (this.boundingSphere = new n.Sphere),
                this.boundingSphere.setFromPoints(this.vertices)
            },
            merge: function(t, e, i) {
                if (t instanceof n.Geometry != !1) {
                    var r, a = this.vertices.length, o = this.vertices, s = t.vertices, l = this.faces, h = t.faces, c = this.faceVertexUvs[0], u = t.faceVertexUvs[0];
                    void 0 === i && (i = 0),
                    void 0 !== e && (r = (new n.Matrix3).getNormalMatrix(e));
                    for (var p = 0, f = s.length; p < f; p++) {
                        var d = s[p]
                          , m = d.clone();
                        void 0 !== e && m.applyMatrix4(e),
                        o.push(m)
                    }
                    for (p = 0,
                    f = h.length; p < f; p++) {
                        var g, v, y, _ = h[p], x = _.vertexNormals, b = _.vertexColors;
                        g = new n.Face3(_.a + a,_.b + a,_.c + a),
                        g.normal.copy(_.normal),
                        void 0 !== r && g.normal.applyMatrix3(r).normalize();
                        for (var w = 0, M = x.length; w < M; w++)
                            v = x[w].clone(),
                            void 0 !== r && v.applyMatrix3(r).normalize(),
                            g.vertexNormals.push(v);
                        g.color.copy(_.color);
                        for (var w = 0, M = b.length; w < M; w++)
                            y = b[w],
                            g.vertexColors.push(y.clone());
                        g.materialIndex = _.materialIndex + i,
                        l.push(g)
                    }
                    for (p = 0,
                    f = u.length; p < f; p++) {
                        var T = u[p]
                          , S = [];
                        if (void 0 !== T) {
                            for (var w = 0, M = T.length; w < M; w++)
                                S.push(T[w].clone());
                            c.push(S)
                        }
                    }
                }
            },
            mergeMesh: function(t) {
                t instanceof n.Mesh != !1 && (t.matrixAutoUpdate && t.updateMatrix(),
                this.merge(t.geometry, t.matrix))
            },
            mergeVertices: function() {
                var t, e, i, n, r, a, o, s, l = {}, h = [], c = [], u = 4, p = Math.pow(10, u);
                for (i = 0,
                n = this.vertices.length; i < n; i++)
                    t = this.vertices[i],
                    e = Math.round(t.x * p) + "_" + Math.round(t.y * p) + "_" + Math.round(t.z * p),
                    void 0 === l[e] ? (l[e] = i,
                    h.push(this.vertices[i]),
                    c[i] = h.length - 1) : c[i] = c[l[e]];
                var f = [];
                for (i = 0,
                n = this.faces.length; i < n; i++) {
                    r = this.faces[i],
                    r.a = c[r.a],
                    r.b = c[r.b],
                    r.c = c[r.c],
                    a = [r.a, r.b, r.c];
                    for (var d = -1, m = 0; m < 3; m++)
                        if (a[m] === a[(m + 1) % 3]) {
                            d = m,
                            f.push(i);
                            break
                        }
                }
                for (i = f.length - 1; i >= 0; i--) {
                    var g = f[i];
                    for (this.faces.splice(g, 1),
                    o = 0,
                    s = this.faceVertexUvs.length; o < s; o++)
                        this.faceVertexUvs[o].splice(g, 1)
                }
                var v = this.vertices.length - h.length;
                return this.vertices = h,
                v
            },
            sortFacesByMaterialIndex: function() {
                function t(t, e) {
                    return t.materialIndex - e.materialIndex
                }
                for (var e = this.faces, i = e.length, n = 0; n < i; n++)
                    e[n]._id = n;
                e.sort(t);
                var r, a, o = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
                o && o.length === i && (r = []),
                s && s.length === i && (a = []);
                for (var n = 0; n < i; n++) {
                    var l = e[n]._id;
                    r && r.push(o[l]),
                    a && a.push(s[l])
                }
                r && (this.faceVertexUvs[0] = r),
                a && (this.faceVertexUvs[1] = a)
            },
            toJSON: function() {
                function t(t, e, i) {
                    return i ? t | 1 << e : t & ~(1 << e)
                }
                function e(t) {
                    var e = t.x.toString() + t.y.toString() + t.z.toString();
                    return void 0 !== p[e] ? p[e] : (p[e] = u.length / 3,
                    u.push(t.x, t.y, t.z),
                    p[e])
                }
                function i(t) {
                    var e = t.r.toString() + t.g.toString() + t.b.toString();
                    return void 0 !== d[e] ? d[e] : (d[e] = f.length,
                    f.push(t.getHex()),
                    d[e])
                }
                function n(t) {
                    var e = t.x.toString() + t.y.toString();
                    return void 0 !== g[e] ? g[e] : (g[e] = m.length / 2,
                    m.push(t.x, t.y),
                    g[e])
                }
                var r = {
                    metadata: {
                        version: 4.4,
                        type: "Geometry",
                        generator: "Geometry.toJSON"
                    }
                };
                if (r.uuid = this.uuid,
                r.type = this.type,
                "" !== this.name && (r.name = this.name),
                void 0 !== this.parameters) {
                    var a = this.parameters;
                    for (var o in a)
                        void 0 !== a[o] && (r[o] = a[o]);
                    return r
                }
                for (var s = [], l = 0; l < this.vertices.length; l++) {
                    var h = this.vertices[l];
                    s.push(h.x, h.y, h.z)
                }
                for (var c = [], u = [], p = {}, f = [], d = {}, m = [], g = {}, l = 0; l < this.faces.length; l++) {
                    var v = this.faces[l]
                      , y = !0
                      , _ = !1
                      , x = void 0 !== this.faceVertexUvs[0][l]
                      , b = v.normal.length() > 0
                      , w = v.vertexNormals.length > 0
                      , M = 1 !== v.color.r || 1 !== v.color.g || 1 !== v.color.b
                      , T = v.vertexColors.length > 0
                      , S = 0;
                    if (S = t(S, 0, 0),
                    S = t(S, 1, y),
                    S = t(S, 2, _),
                    S = t(S, 3, x),
                    S = t(S, 4, b),
                    S = t(S, 5, w),
                    S = t(S, 6, M),
                    S = t(S, 7, T),
                    c.push(S),
                    c.push(v.a, v.b, v.c),
                    c.push(v.materialIndex),
                    x) {
                        var C = this.faceVertexUvs[0][l];
                        c.push(n(C[0]), n(C[1]), n(C[2]))
                    }
                    if (b && c.push(e(v.normal)),
                    w) {
                        var A = v.vertexNormals;
                        c.push(e(A[0]), e(A[1]), e(A[2]))
                    }
                    if (M && c.push(i(v.color)),
                    T) {
                        var P = v.vertexColors;
                        c.push(i(P[0]), i(P[1]), i(P[2]))
                    }
                }
                return r.data = {},
                r.data.vertices = s,
                r.data.normals = u,
                f.length > 0 && (r.data.colors = f),
                m.length > 0 && (r.data.uvs = [m]),
                r.data.faces = c,
                r
            },
            clone: function() {
                return (new n.Geometry).copy(this)
            },
            copy: function(t) {
                this.vertices = [],
                this.faces = [],
                this.faceVertexUvs = [[]];
                for (var e = t.vertices, i = 0, n = e.length; i < n; i++)
                    this.vertices.push(e[i].clone());
                for (var r = t.faces, i = 0, n = r.length; i < n; i++)
                    this.faces.push(r[i].clone());
                for (var i = 0, n = t.faceVertexUvs.length; i < n; i++) {
                    var a = t.faceVertexUvs[i];
                    void 0 === this.faceVertexUvs[i] && (this.faceVertexUvs[i] = []);
                    for (var o = 0, s = a.length; o < s; o++) {
                        for (var l = a[o], h = [], c = 0, u = l.length; c < u; c++) {
                            var p = l[c];
                            h.push(p.clone())
                        }
                        this.faceVertexUvs[i].push(h)
                    }
                }
                return this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        }),
        n.GeometryIdCount = 0,
        n.DirectGeometry = function() {
            Object.defineProperty(this, "id", {
                value: n.GeometryIdCount++
            }),
            this.uuid = n.Math.generateUUID(),
            this.name = "",
            this.type = "DirectGeometry",
            this.indices = [],
            this.vertices = [],
            this.normals = [],
            this.colors = [],
            this.uvs = [],
            this.uvs2 = [],
            this.groups = [],
            this.morphTargets = {},
            this.skinWeights = [],
            this.skinIndices = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.verticesNeedUpdate = !1,
            this.normalsNeedUpdate = !1,
            this.colorsNeedUpdate = !1,
            this.uvsNeedUpdate = !1,
            this.groupsNeedUpdate = !1
        }
        ,
        Object.assign(n.DirectGeometry.prototype, n.EventDispatcher.prototype, {
            computeBoundingBox: n.Geometry.prototype.computeBoundingBox,
            computeBoundingSphere: n.Geometry.prototype.computeBoundingSphere,
            computeFaceNormals: function() {},
            computeVertexNormals: function() {},
            computeGroups: function(t) {
                for (var e, i, n = [], r = t.faces, a = 0; a < r.length; a++) {
                    var o = r[a];
                    o.materialIndex !== i && (i = o.materialIndex,
                    void 0 !== e && (e.count = 3 * a - e.start,
                    n.push(e)),
                    e = {
                        start: 3 * a,
                        materialIndex: i
                    })
                }
                void 0 !== e && (e.count = 3 * a - e.start,
                n.push(e)),
                this.groups = n
            },
            fromGeometry: function(t) {
                var e, i = t.faces, r = t.vertices, a = t.faceVertexUvs, o = a[0] && a[0].length > 0, s = a[1] && a[1].length > 0, l = t.morphTargets, h = l.length;
                if (h > 0) {
                    e = [];
                    for (var c = 0; c < h; c++)
                        e[c] = [];
                    this.morphTargets.position = e
                }
                var u, p = t.morphNormals, f = p.length;
                if (f > 0) {
                    u = [];
                    for (var c = 0; c < f; c++)
                        u[c] = [];
                    this.morphTargets.normal = u
                }
                for (var d = t.skinIndices, m = t.skinWeights, g = d.length === r.length, v = m.length === r.length, c = 0; c < i.length; c++) {
                    var y = i[c];
                    this.vertices.push(r[y.a], r[y.b], r[y.c]);
                    var _ = y.vertexNormals;
                    if (3 === _.length)
                        this.normals.push(_[0], _[1], _[2]);
                    else {
                        var x = y.normal;
                        this.normals.push(x, x, x)
                    }
                    var b = y.vertexColors;
                    if (3 === b.length)
                        this.colors.push(b[0], b[1], b[2]);
                    else {
                        var w = y.color;
                        this.colors.push(w, w, w)
                    }
                    if (o === !0) {
                        var M = a[0][c];
                        void 0 !== M ? this.uvs.push(M[0], M[1], M[2]) : this.uvs.push(new n.Vector2, new n.Vector2, new n.Vector2)
                    }
                    if (s === !0) {
                        var M = a[1][c];
                        void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : this.uvs2.push(new n.Vector2, new n.Vector2, new n.Vector2)
                    }
                    for (var T = 0; T < h; T++) {
                        var S = l[T].vertices;
                        e[T].push(S[y.a], S[y.b], S[y.c])
                    }
                    for (var T = 0; T < f; T++) {
                        var C = p[T].vertexNormals[c];
                        u[T].push(C.a, C.b, C.c)
                    }
                    g && this.skinIndices.push(d[y.a], d[y.b], d[y.c]),
                    v && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
                }
                return this.computeGroups(t),
                this.verticesNeedUpdate = t.verticesNeedUpdate,
                this.normalsNeedUpdate = t.normalsNeedUpdate,
                this.colorsNeedUpdate = t.colorsNeedUpdate,
                this.uvsNeedUpdate = t.uvsNeedUpdate,
                this.groupsNeedUpdate = t.groupsNeedUpdate,
                this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        }),
        n.BufferGeometry = function() {
            Object.defineProperty(this, "id", {
                value: n.GeometryIdCount++
            }),
            this.uuid = n.Math.generateUUID(),
            this.name = "",
            this.type = "BufferGeometry",
            this.index = null,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.drawRange = {
                start: 0,
                count: 1 / 0
            }
        }
        ,
        Object.assign(n.BufferGeometry.prototype, n.EventDispatcher.prototype, {
            getIndex: function() {
                return this.index
            },
            setIndex: function(t) {
                this.index = t
            },
            addAttribute: function(t, e) {
                return e instanceof n.BufferAttribute == !1 && e instanceof n.InterleavedBufferAttribute == !1 ? void this.addAttribute(t, new n.BufferAttribute(arguments[1],arguments[2])) : "index" === t ? void this.setIndex(e) : (this.attributes[t] = e,
                this)
            },
            getAttribute: function(t) {
                return this.attributes[t]
            },
            removeAttribute: function(t) {
                return delete this.attributes[t],
                this
            },
            addGroup: function(t, e, i) {
                this.groups.push({
                    start: t,
                    count: e,
                    materialIndex: void 0 !== i ? i : 0
                })
            },
            clearGroups: function() {
                this.groups = []
            },
            setDrawRange: function(t, e) {
                this.drawRange.start = t,
                this.drawRange.count = e
            },
            applyMatrix: function(t) {
                var e = this.attributes.position;
                void 0 !== e && (t.applyToVector3Array(e.array),
                e.needsUpdate = !0);
                var i = this.attributes.normal;
                if (void 0 !== i) {
                    var r = (new n.Matrix3).getNormalMatrix(t);
                    r.applyToVector3Array(i.array),
                    i.needsUpdate = !0
                }
                return null !== this.boundingBox && this.computeBoundingBox(),
                null !== this.boundingSphere && this.computeBoundingSphere(),
                this
            },
            rotateX: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeRotationX(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateY: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeRotationY(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            rotateZ: function() {
                var t;
                return function(e) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeRotationZ(e),
                    this.applyMatrix(t),
                    this
                }
            }(),
            translate: function() {
                var t;
                return function(e, i, r) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeTranslation(e, i, r),
                    this.applyMatrix(t),
                    this
                }
            }(),
            scale: function() {
                var t;
                return function(e, i, r) {
                    return void 0 === t && (t = new n.Matrix4),
                    t.makeScale(e, i, r),
                    this.applyMatrix(t),
                    this
                }
            }(),
            lookAt: function() {
                var t;
                return function(e) {
                    void 0 === t && (t = new n.Object3D),
                    t.lookAt(e),
                    t.updateMatrix(),
                    this.applyMatrix(t.matrix)
                }
            }(),
            center: function() {
                this.computeBoundingBox();
                var t = this.boundingBox.center().negate();
                return this.translate(t.x, t.y, t.z),
                t
            },
            setFromObject: function(t) {
                var e = t.geometry;
                if (t instanceof n.Points || t instanceof n.Line) {
                    var i = new n.Float32Attribute(3 * e.vertices.length,3)
                      , r = new n.Float32Attribute(3 * e.colors.length,3);
                    if (this.addAttribute("position", i.copyVector3sArray(e.vertices)),
                    this.addAttribute("color", r.copyColorsArray(e.colors)),
                    e.lineDistances && e.lineDistances.length === e.vertices.length) {
                        var a = new n.Float32Attribute(e.lineDistances.length,1);
                        this.addAttribute("lineDistance", a.copyArray(e.lineDistances))
                    }
                    null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                    null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
                } else
                    t instanceof n.Mesh && e instanceof n.Geometry && this.fromGeometry(e);
                return this
            },
            updateFromObject: function(t) {
                var e = t.geometry;
                if (t instanceof n.Mesh) {
                    var i = e.__directGeometry;
                    if (void 0 === i || e.elementsNeedUpdate === !0)
                        return this.fromGeometry(e);
                    i.verticesNeedUpdate = e.verticesNeedUpdate || e.elementsNeedUpdate,
                    i.normalsNeedUpdate = e.normalsNeedUpdate || e.elementsNeedUpdate,
                    i.colorsNeedUpdate = e.colorsNeedUpdate || e.elementsNeedUpdate,
                    i.uvsNeedUpdate = e.uvsNeedUpdate || e.elementsNeedUpdate,
                    i.groupsNeedUpdate = e.groupsNeedUpdate || e.elementsNeedUpdate,
                    e.elementsNeedUpdate = !1,
                    e.verticesNeedUpdate = !1,
                    e.normalsNeedUpdate = !1,
                    e.colorsNeedUpdate = !1,
                    e.uvsNeedUpdate = !1,
                    e.groupsNeedUpdate = !1,
                    e = i
                }
                var r;
                return e.verticesNeedUpdate === !0 && (r = this.attributes.position,
                void 0 !== r && (r.copyVector3sArray(e.vertices),
                r.needsUpdate = !0),
                e.verticesNeedUpdate = !1),
                e.normalsNeedUpdate === !0 && (r = this.attributes.normal,
                void 0 !== r && (r.copyVector3sArray(e.normals),
                r.needsUpdate = !0),
                e.normalsNeedUpdate = !1),
                e.colorsNeedUpdate === !0 && (r = this.attributes.color,
                void 0 !== r && (r.copyColorsArray(e.colors),
                r.needsUpdate = !0),
                e.colorsNeedUpdate = !1),
                e.uvsNeedUpdate && (r = this.attributes.uv,
                void 0 !== r && (r.copyVector2sArray(e.uvs),
                r.needsUpdate = !0),
                e.uvsNeedUpdate = !1),
                e.lineDistancesNeedUpdate && (r = this.attributes.lineDistance,
                void 0 !== r && (r.copyArray(e.lineDistances),
                r.needsUpdate = !0),
                e.lineDistancesNeedUpdate = !1),
                e.groupsNeedUpdate && (e.computeGroups(t.geometry),
                this.groups = e.groups,
                e.groupsNeedUpdate = !1),
                this
            },
            fromGeometry: function(t) {
                return t.__directGeometry = (new n.DirectGeometry).fromGeometry(t),
                this.fromDirectGeometry(t.__directGeometry)
            },
            fromDirectGeometry: function(t) {
                var e = new Float32Array(3 * t.vertices.length);
                if (this.addAttribute("position", new n.BufferAttribute(e,3).copyVector3sArray(t.vertices)),
                t.normals.length > 0) {
                    var i = new Float32Array(3 * t.normals.length);
                    this.addAttribute("normal", new n.BufferAttribute(i,3).copyVector3sArray(t.normals))
                }
                if (t.colors.length > 0) {
                    var r = new Float32Array(3 * t.colors.length);
                    this.addAttribute("color", new n.BufferAttribute(r,3).copyColorsArray(t.colors))
                }
                if (t.uvs.length > 0) {
                    var a = new Float32Array(2 * t.uvs.length);
                    this.addAttribute("uv", new n.BufferAttribute(a,2).copyVector2sArray(t.uvs))
                }
                if (t.uvs2.length > 0) {
                    var o = new Float32Array(2 * t.uvs2.length);
                    this.addAttribute("uv2", new n.BufferAttribute(o,2).copyVector2sArray(t.uvs2))
                }
                if (t.indices.length > 0) {
                    var s = t.vertices.length > 65535 ? Uint32Array : Uint16Array
                      , l = new s(3 * t.indices.length);
                    this.setIndex(new n.BufferAttribute(l,1).copyIndicesArray(t.indices))
                }
                this.groups = t.groups;
                for (var h in t.morphTargets) {
                    for (var c = [], u = t.morphTargets[h], p = 0, f = u.length; p < f; p++) {
                        var d = u[p]
                          , m = new n.Float32Attribute(3 * d.length,3);
                        c.push(m.copyVector3sArray(d))
                    }
                    this.morphAttributes[h] = c
                }
                if (t.skinIndices.length > 0) {
                    var g = new n.Float32Attribute(4 * t.skinIndices.length,4);
                    this.addAttribute("skinIndex", g.copyVector4sArray(t.skinIndices))
                }
                if (t.skinWeights.length > 0) {
                    var v = new n.Float32Attribute(4 * t.skinWeights.length,4);
                    this.addAttribute("skinWeight", v.copyVector4sArray(t.skinWeights))
                }
                return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                this
            },
            computeBoundingBox: function() {
                null === this.boundingBox && (this.boundingBox = new n.Box3);
                var t = this.attributes.position.array;
                void 0 !== t ? this.boundingBox.setFromArray(t) : this.boundingBox.makeEmpty(),
                isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)
            },
            computeBoundingSphere: function() {
                var t = new n.Box3
                  , e = new n.Vector3;
                return function() {
                    null === this.boundingSphere && (this.boundingSphere = new n.Sphere);
                    var i = this.attributes.position;
                    if (i) {
                        var r = i.array
                          , a = this.boundingSphere.center;
                        t.setFromArray(r),
                        t.center(a);
                        for (var o = 0, s = 0, l = r.length; s < l; s += 3)
                            e.fromArray(r, s),
                            o = Math.max(o, a.distanceToSquared(e));
                        this.boundingSphere.radius = Math.sqrt(o),
                        isNaN(this.boundingSphere.radius)
                    }
                }
            }(),
            computeFaceNormals: function() {},
            computeVertexNormals: function() {
                var t = this.index
                  , e = this.attributes
                  , i = this.groups;
                if (e.position) {
                    var r = e.position.array;
                    if (void 0 === e.normal)
                        this.addAttribute("normal", new n.BufferAttribute(new Float32Array(r.length),3));
                    else
                        for (var a = e.normal.array, o = 0, s = a.length; o < s; o++)
                            a[o] = 0;
                    var l, h, c, u = e.normal.array, p = new n.Vector3, f = new n.Vector3, d = new n.Vector3, m = new n.Vector3, g = new n.Vector3;
                    if (t) {
                        var v = t.array;
                        0 === i.length && this.addGroup(0, v.length);
                        for (var y = 0, _ = i.length; y < _; ++y)
                            for (var x = i[y], b = x.start, w = x.count, o = b, s = b + w; o < s; o += 3)
                                l = 3 * v[o + 0],
                                h = 3 * v[o + 1],
                                c = 3 * v[o + 2],
                                p.fromArray(r, l),
                                f.fromArray(r, h),
                                d.fromArray(r, c),
                                m.subVectors(d, f),
                                g.subVectors(p, f),
                                m.cross(g),
                                u[l] += m.x,
                                u[l + 1] += m.y,
                                u[l + 2] += m.z,
                                u[h] += m.x,
                                u[h + 1] += m.y,
                                u[h + 2] += m.z,
                                u[c] += m.x,
                                u[c + 1] += m.y,
                                u[c + 2] += m.z
                    } else
                        for (var o = 0, s = r.length; o < s; o += 9)
                            p.fromArray(r, o),
                            f.fromArray(r, o + 3),
                            d.fromArray(r, o + 6),
                            m.subVectors(d, f),
                            g.subVectors(p, f),
                            m.cross(g),
                            u[o] = m.x,
                            u[o + 1] = m.y,
                            u[o + 2] = m.z,
                            u[o + 3] = m.x,
                            u[o + 4] = m.y,
                            u[o + 5] = m.z,
                            u[o + 6] = m.x,
                            u[o + 7] = m.y,
                            u[o + 8] = m.z;
                    this.normalizeNormals(),
                    e.normal.needsUpdate = !0
                }
            },
            merge: function(t, e) {
                if (t instanceof n.BufferGeometry != !1) {
                    void 0 === e && (e = 0);
                    var i = this.attributes;
                    for (var r in i)
                        if (void 0 !== t.attributes[r])
                            for (var a = i[r], o = a.array, s = t.attributes[r], l = s.array, h = s.itemSize, c = 0, u = h * e; c < l.length; c++,
                            u++)
                                o[u] = l[c];
                    return this
                }
            },
            normalizeNormals: function() {
                for (var t, e, i, n, r = this.attributes.normal.array, a = 0, o = r.length; a < o; a += 3)
                    t = r[a],
                    e = r[a + 1],
                    i = r[a + 2],
                    n = 1 / Math.sqrt(t * t + e * e + i * i),
                    r[a] *= n,
                    r[a + 1] *= n,
                    r[a + 2] *= n
            },
            toNonIndexed: function() {
                if (null === this.index)
                    return this;
                var t = new n.BufferGeometry
                  , e = this.index.array
                  , i = this.attributes;
                for (var r in i) {
                    for (var a = i[r], o = a.array, s = a.itemSize, l = new o.constructor(e.length * s), h = 0, c = 0, u = 0, p = e.length; u < p; u++) {
                        h = e[u] * s;
                        for (var f = 0; f < s; f++)
                            l[c++] = o[h++]
                    }
                    t.addAttribute(r, new n.BufferAttribute(l,s))
                }
                return t
            },
            toJSON: function() {
                var t = {
                    metadata: {
                        version: 4.4,
                        type: "BufferGeometry",
                        generator: "BufferGeometry.toJSON"
                    }
                };
                if (t.uuid = this.uuid,
                t.type = this.type,
                "" !== this.name && (t.name = this.name),
                void 0 !== this.parameters) {
                    var e = this.parameters;
                    for (var i in e)
                        void 0 !== e[i] && (t[i] = e[i]);
                    return t
                }
                t.data = {
                    attributes: {}
                };
                var n = this.index;
                if (null !== n) {
                    var r = Array.prototype.slice.call(n.array);
                    t.data.index = {
                        type: n.array.constructor.name,
                        array: r
                    }
                }
                var a = this.attributes;
                for (var i in a) {
                    var o = a[i]
                      , r = Array.prototype.slice.call(o.array);
                    t.data.attributes[i] = {
                        itemSize: o.itemSize,
                        type: o.array.constructor.name,
                        array: r,
                        normalized: o.normalized
                    }
                }
                var s = this.groups;
                s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
                var l = this.boundingSphere;
                return null !== l && (t.data.boundingSphere = {
                    center: l.center.toArray(),
                    radius: l.radius
                }),
                t
            },
            clone: function() {
                return (new n.BufferGeometry).copy(this)
            },
            copy: function(t) {
                var e = t.index;
                null !== e && this.setIndex(e.clone());
                var i = t.attributes;
                for (var n in i) {
                    var r = i[n];
                    this.addAttribute(n, r.clone())
                }
                for (var a = t.groups, o = 0, s = a.length; o < s; o++) {
                    var l = a[o];
                    this.addGroup(l.start, l.count, l.materialIndex)
                }
                return this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        }),
        n.BufferGeometry.MaxIndex = 65535,
        n.InstancedBufferGeometry = function() {
            n.BufferGeometry.call(this),
            this.type = "InstancedBufferGeometry",
            this.maxInstancedCount = void 0
        }
        ,
        n.InstancedBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.InstancedBufferGeometry.prototype.constructor = n.InstancedBufferGeometry,
        n.InstancedBufferGeometry.prototype.addGroup = function(t, e, i) {
            this.groups.push({
                start: t,
                count: e,
                instances: i
            })
        }
        ,
        n.InstancedBufferGeometry.prototype.copy = function(t) {
            var e = t.index;
            null !== e && this.setIndex(e.clone());
            var i = t.attributes;
            for (var n in i) {
                var r = i[n];
                this.addAttribute(n, r.clone())
            }
            for (var a = t.groups, o = 0, s = a.length; o < s; o++) {
                var l = a[o];
                this.addGroup(l.start, l.count, l.instances)
            }
            return this
        }
        ,
        n.Uniform = function(t) {
            "string" == typeof t && (t = arguments[1]),
            this.value = t,
            this.dynamic = !1
        }
        ,
        n.Uniform.prototype = {
            constructor: n.Uniform,
            onUpdate: function(t) {
                return this.dynamic = !0,
                this.onUpdateCallback = t,
                this
            }
        },
        n.AnimationAction = function() {
            throw new Error("THREE.AnimationAction: Use mixer.clipAction for construction.")
        }
        ,
        n.AnimationAction._new = function(t, e, i) {
            this._mixer = t,
            this._clip = e,
            this._localRoot = i || null;
            for (var r = e.tracks, a = r.length, o = new Array(a), s = {
                endingStart: n.ZeroCurvatureEnding,
                endingEnd: n.ZeroCurvatureEnding
            }, l = 0; l !== a; ++l) {
                var h = r[l].createInterpolant(null);
                o[l] = h,
                h.settings = s
            }
            this._interpolantSettings = s,
            this._interpolants = o,
            this._propertyBindings = new Array(a),
            this._cacheIndex = null,
            this._byClipCacheIndex = null,
            this._timeScaleInterpolant = null,
            this._weightInterpolant = null,
            this.loop = n.LoopRepeat,
            this._loopCount = -1,
            this._startTime = null,
            this.time = 0,
            this.timeScale = 1,
            this._effectiveTimeScale = 1,
            this.weight = 1,
            this._effectiveWeight = 1,
            this.repetitions = 1 / 0,
            this.paused = !1,
            this.enabled = !0,
            this.clampWhenFinished = !1,
            this.zeroSlopeAtStart = !0,
            this.zeroSlopeAtEnd = !0
        }
        ,
        n.AnimationAction._new.prototype = {
            constructor: n.AnimationAction._new,
            play: function() {
                return this._mixer._activateAction(this),
                this
            },
            stop: function() {
                return this._mixer._deactivateAction(this),
                this.reset()
            },
            reset: function() {
                return this.paused = !1,
                this.enabled = !0,
                this.time = 0,
                this._loopCount = -1,
                this._startTime = null,
                this.stopFading().stopWarping()
            },
            isRunning: function() {
                this._startTime;
                return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
            },
            isScheduled: function() {
                return this._mixer._isActiveAction(this)
            },
            startAt: function(t) {
                return this._startTime = t,
                this
            },
            setLoop: function(t, e) {
                return this.loop = t,
                this.repetitions = e,
                this
            },
            setEffectiveWeight: function(t) {
                return this.weight = t,
                this._effectiveWeight = this.enabled ? t : 0,
                this.stopFading()
            },
            getEffectiveWeight: function() {
                return this._effectiveWeight
            },
            fadeIn: function(t) {
                return this._scheduleFading(t, 0, 1)
            },
            fadeOut: function(t) {
                return this._scheduleFading(t, 1, 0)
            },
            crossFadeFrom: function(t, e, i) {
                this._mixer;
                if (t.fadeOut(e),
                this.fadeIn(e),
                i) {
                    var n = this._clip.duration
                      , r = t._clip.duration
                      , a = r / n
                      , o = n / r;
                    t.warp(1, a, e),
                    this.warp(o, 1, e)
                }
                return this
            },
            crossFadeTo: function(t, e, i) {
                return t.crossFadeFrom(this, e, i)
            },
            stopFading: function() {
                var t = this._weightInterpolant;
                return null !== t && (this._weightInterpolant = null,
                this._mixer._takeBackControlInterpolant(t)),
                this
            },
            setEffectiveTimeScale: function(t) {
                return this.timeScale = t,
                this._effectiveTimeScale = this.paused ? 0 : t,
                this.stopWarping()
            },
            getEffectiveTimeScale: function() {
                return this._effectiveTimeScale
            },
            setDuration: function(t) {
                return this.timeScale = this._clip.duration / t,
                this.stopWarping()
            },
            syncWith: function(t) {
                return this.time = t.time,
                this.timeScale = t.timeScale,
                this.stopWarping()
            },
            halt: function(t) {
                return this.warp(this._effectiveTimeScale, 0, t)
            },
            warp: function(t, e, i) {
                var n = this._mixer
                  , r = n.time
                  , a = this._timeScaleInterpolant
                  , o = this.timeScale;
                null === a && (a = n._lendControlInterpolant(),
                this._timeScaleInterpolant = a);
                var s = a.parameterPositions
                  , l = a.sampleValues;
                return s[0] = r,
                s[1] = r + i,
                l[0] = t / o,
                l[1] = e / o,
                this
            },
            stopWarping: function() {
                var t = this._timeScaleInterpolant;
                return null !== t && (this._timeScaleInterpolant = null,
                this._mixer._takeBackControlInterpolant(t)),
                this
            },
            getMixer: function() {
                return this._mixer
            },
            getClip: function() {
                return this._clip
            },
            getRoot: function() {
                return this._localRoot || this._mixer._root
            },
            _update: function(t, e, i, n) {
                var r = this._startTime;
                if (null !== r) {
                    var a = (t - r) * i;
                    if (a < 0 || 0 === i)
                        return;
                    this._startTime = null,
                    e = i * a
                }
                e *= this._updateTimeScale(t);
                var o = this._updateTime(e)
                  , s = this._updateWeight(t);
                if (s > 0)
                    for (var l = this._interpolants, h = this._propertyBindings, c = 0, u = l.length; c !== u; ++c)
                        l[c].evaluate(o),
                        h[c].accumulate(n, s)
            },
            _updateWeight: function(t) {
                var e = 0;
                if (this.enabled) {
                    e = this.weight;
                    var i = this._weightInterpolant;
                    if (null !== i) {
                        var n = i.evaluate(t)[0];
                        e *= n,
                        t > i.parameterPositions[1] && (this.stopFading(),
                        0 === n && (this.enabled = !1))
                    }
                }
                return this._effectiveWeight = e,
                e
            },
            _updateTimeScale: function(t) {
                var e = 0;
                if (!this.paused) {
                    e = this.timeScale;
                    var i = this._timeScaleInterpolant;
                    if (null !== i) {
                        var n = i.evaluate(t)[0];
                        e *= n,
                        t > i.parameterPositions[1] && (this.stopWarping(),
                        0 === e ? this.paused = !0 : this.timeScale = e)
                    }
                }
                return this._effectiveTimeScale = e,
                e
            },
            _updateTime: function(t) {
                var e = this.time + t;
                if (0 === t)
                    return e;
                var i = this._clip.duration
                  , r = this.loop
                  , a = this._loopCount;
                if (r === n.LoopOnce) {
                    a === -1 && (this.loopCount = 0,
                    this._setEndings(!0, !0, !1));
                    t: {
                        if (e >= i)
                            e = i;
                        else {
                            if (!(e < 0))
                                break t;
                            e = 0
                        }
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                        this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: t < 0 ? -1 : 1
                        })
                    }
                } else {
                    var o = r === n.LoopPingPong;
                    if (a === -1 && (t >= 0 ? (a = 0,
                    this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)),
                    e >= i || e < 0) {
                        var s = Math.floor(e / i);
                        e -= i * s,
                        a += Math.abs(s);
                        var l = this.repetitions - a;
                        if (l < 0)
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            e = t > 0 ? i : 0,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: t > 0 ? 1 : -1
                            });
                        else {
                            if (0 === l) {
                                var h = t < 0;
                                this._setEndings(h, !h, o)
                            } else
                                this._setEndings(!1, !1, o);
                            this._loopCount = a,
                            this._mixer.dispatchEvent({
                                type: "loop",
                                action: this,
                                loopDelta: s
                            })
                        }
                    }
                    if (o && 1 === (1 & a))
                        return this.time = e,
                        i - e
                }
                return this.time = e,
                e
            },
            _setEndings: function(t, e, i) {
                var r = this._interpolantSettings;
                i ? (r.endingStart = n.ZeroSlopeEnding,
                r.endingEnd = n.ZeroSlopeEnding) : (t ? r.endingStart = this.zeroSlopeAtStart ? n.ZeroSlopeEnding : n.ZeroCurvatureEnding : r.endingStart = n.WrapAroundEnding,
                e ? r.endingEnd = this.zeroSlopeAtEnd ? n.ZeroSlopeEnding : n.ZeroCurvatureEnding : r.endingEnd = n.WrapAroundEnding)
            },
            _scheduleFading: function(t, e, i) {
                var n = this._mixer
                  , r = n.time
                  , a = this._weightInterpolant;
                null === a && (a = n._lendControlInterpolant(),
                this._weightInterpolant = a);
                var o = a.parameterPositions
                  , s = a.sampleValues;
                return o[0] = r,
                s[0] = e,
                o[1] = r + t,
                s[1] = i,
                this
            }
        },
        n.AnimationClip = function(t, e, i) {
            this.name = t,
            this.tracks = i,
            this.duration = void 0 !== e ? e : -1,
            this.uuid = n.Math.generateUUID(),
            this.duration < 0 && this.resetDuration(),
            this.trim(),
            this.optimize()
        }
        ,
        n.AnimationClip.prototype = {
            constructor: n.AnimationClip,
            resetDuration: function() {
                for (var t = this.tracks, e = 0, i = 0, n = t.length; i !== n; ++i) {
                    var r = this.tracks[i];
                    e = Math.max(e, r.times[r.times.length - 1])
                }
                this.duration = e
            },
            trim: function() {
                for (var t = 0; t < this.tracks.length; t++)
                    this.tracks[t].trim(0, this.duration);
                return this
            },
            optimize: function() {
                for (var t = 0; t < this.tracks.length; t++)
                    this.tracks[t].optimize();
                return this
            }
        },
        Object.assign(n.AnimationClip, {
            parse: function(t) {
                for (var e = [], i = t.tracks, r = 1 / (t.fps || 1), a = 0, o = i.length; a !== o; ++a)
                    e.push(n.KeyframeTrack.parse(i[a]).scale(r));
                return new n.AnimationClip(t.name,t.duration,e)
            },
            toJSON: function(t) {
                for (var e = [], i = t.tracks, r = {
                    name: t.name,
                    duration: t.duration,
                    tracks: e
                }, a = 0, o = i.length; a !== o; ++a)
                    e.push(n.KeyframeTrack.toJSON(i[a]));
                return r
            },
            CreateFromMorphTargetSequence: function(t, e, i, r) {
                for (var a = e.length, o = [], s = 0; s < a; s++) {
                    var l = []
                      , h = [];
                    l.push((s + a - 1) % a, s, (s + 1) % a),
                    h.push(0, 1, 0);
                    var c = n.AnimationUtils.getKeyframeOrder(l);
                    l = n.AnimationUtils.sortedArray(l, 1, c),
                    h = n.AnimationUtils.sortedArray(h, 1, c),
                    r || 0 !== l[0] || (l.push(a),
                    h.push(h[0])),
                    o.push(new n.NumberKeyframeTrack(".morphTargetInfluences[" + e[s].name + "]",l,h).scale(1 / i))
                }
                return new n.AnimationClip(t,(-1),o)
            },
            findByName: function(t, e) {
                var i = t;
                if (!Array.isArray(t)) {
                    var n = t;
                    i = n.geometry && n.geometry.animations || n.animations
                }
                for (var r = 0; r < i.length; r++)
                    if (i[r].name === e)
                        return i[r];
                return null
            },
            CreateClipsFromMorphTargetSequences: function(t, e, i) {
                for (var r = {}, a = /^([\w-]*?)([\d]+)$/, o = 0, s = t.length; o < s; o++) {
                    var l = t[o]
                      , h = l.name.match(a);
                    if (h && h.length > 1) {
                        var c = h[1]
                          , u = r[c];
                        u || (r[c] = u = []),
                        u.push(l)
                    }
                }
                var p = [];
                for (var c in r)
                    p.push(n.AnimationClip.CreateFromMorphTargetSequence(c, r[c], e, i));
                return p
            },
            parseAnimation: function(t, e, i) {
                if (!t)
                    return null;
                for (var r = function(t, e, i, r, a) {
                    if (0 !== i.length) {
                        var o = []
                          , s = [];
                        n.AnimationUtils.flattenJSON(i, o, s, r),
                        0 !== o.length && a.push(new t(e,o,s))
                    }
                }, a = [], o = t.name || "default", s = t.length || -1, l = t.fps || 30, h = t.hierarchy || [], c = 0; c < h.length; c++) {
                    var u = h[c].keys;
                    if (u && 0 !== u.length)
                        if (u[0].morphTargets) {
                            for (var p = {}, f = 0; f < u.length; f++)
                                if (u[f].morphTargets)
                                    for (var d = 0; d < u[f].morphTargets.length; d++)
                                        p[u[f].morphTargets[d]] = -1;
                            for (var m in p) {
                                for (var g = [], v = [], d = 0; d !== u[f].morphTargets.length; ++d) {
                                    var y = u[f];
                                    g.push(y.time),
                                    v.push(y.morphTarget === m ? 1 : 0)
                                }
                                a.push(new n.NumberKeyframeTrack(".morphTargetInfluence[" + m + "]",g,v))
                            }
                            s = p.length * (l || 1)
                        } else {
                            var _ = ".bones[" + e[c].name + "]";
                            r(n.VectorKeyframeTrack, _ + ".position", u, "pos", a),
                            r(n.QuaternionKeyframeTrack, _ + ".quaternion", u, "rot", a),
                            r(n.VectorKeyframeTrack, _ + ".scale", u, "scl", a)
                        }
                }
                if (0 === a.length)
                    return null;
                var x = new n.AnimationClip(o,s,a);
                return x
            }
        }),
        n.AnimationMixer = function(t) {
            this._root = t,
            this._initMemoryManager(),
            this._accuIndex = 0,
            this.time = 0,
            this.timeScale = 1
        }
        ,
        Object.assign(n.AnimationMixer.prototype, n.EventDispatcher.prototype, {
            clipAction: function(t, e) {
                var i = e || this._root
                  , r = i.uuid
                  , a = "string" == typeof t ? n.AnimationClip.findByName(i, t) : t
                  , o = null !== a ? a.uuid : t
                  , s = this._actionsByClip[o]
                  , l = null;
                if (void 0 !== s) {
                    var h = s.actionByRoot[r];
                    if (void 0 !== h)
                        return h;
                    l = s.knownActions[0],
                    null === a && (a = l._clip)
                }
                if (null === a)
                    return null;
                var c = new n.AnimationMixer._Action(this,a,e);
                return this._bindAction(c, l),
                this._addInactiveAction(c, o, r),
                c
            },
            existingAction: function(t, e) {
                var i = e || this._root
                  , r = i.uuid
                  , a = "string" == typeof t ? n.AnimationClip.findByName(i, t) : t
                  , o = a ? a.uuid : t
                  , s = this._actionsByClip[o];
                return void 0 !== s ? s.actionByRoot[r] || null : null
            },
            stopAllAction: function() {
                var t = this._actions
                  , e = this._nActiveActions
                  , i = this._bindings
                  , n = this._nActiveBindings;
                this._nActiveActions = 0,
                this._nActiveBindings = 0;
                for (var r = 0; r !== e; ++r)
                    t[r].reset();
                for (var r = 0; r !== n; ++r)
                    i[r].useCount = 0;
                return this
            },
            update: function(t) {
                t *= this.timeScale;
                for (var e = this._actions, i = this._nActiveActions, n = this.time += t, r = Math.sign(t), a = this._accuIndex ^= 1, o = 0; o !== i; ++o) {
                    var s = e[o];
                    s.enabled && s._update(n, t, r, a)
                }
                for (var l = this._bindings, h = this._nActiveBindings, o = 0; o !== h; ++o)
                    l[o].apply(a);
                return this
            },
            getRoot: function() {
                return this._root
            },
            uncacheClip: function(t) {
                var e = this._actions
                  , i = t.uuid
                  , n = this._actionsByClip
                  , r = n[i];
                if (void 0 !== r) {
                    for (var a = r.knownActions, o = 0, s = a.length; o !== s; ++o) {
                        var l = a[o];
                        this._deactivateAction(l);
                        var h = l._cacheIndex
                          , c = e[e.length - 1];
                        l._cacheIndex = null,
                        l._byClipCacheIndex = null,
                        c._cacheIndex = h,
                        e[h] = c,
                        e.pop(),
                        this._removeInactiveBindingsForAction(l)
                    }
                    delete n[i]
                }
            },
            uncacheRoot: function(t) {
                var e = t.uuid
                  , i = this._actionsByClip;
                for (var n in i) {
                    var r = i[n].actionByRoot
                      , a = r[e];
                    void 0 !== a && (this._deactivateAction(a),
                    this._removeInactiveAction(a))
                }
                var o = this._bindingsByRootAndName
                  , s = o[e];
                if (void 0 !== s)
                    for (var l in s) {
                        var h = s[l];
                        h.restoreOriginalState(),
                        this._removeInactiveBinding(h)
                    }
            },
            uncacheAction: function(t, e) {
                var i = this.existingAction(t, e);
                null !== i && (this._deactivateAction(i),
                this._removeInactiveAction(i))
            }
        }),
        n.AnimationMixer._Action = n.AnimationAction._new,
        Object.assign(n.AnimationMixer.prototype, {
            _bindAction: function(t, e) {
                var i = t._localRoot || this._root
                  , r = t._clip.tracks
                  , a = r.length
                  , o = t._propertyBindings
                  , s = t._interpolants
                  , l = i.uuid
                  , h = this._bindingsByRootAndName
                  , c = h[l];
                void 0 === c && (c = {},
                h[l] = c);
                for (var u = 0; u !== a; ++u) {
                    var p = r[u]
                      , f = p.name
                      , d = c[f];
                    if (void 0 !== d)
                        o[u] = d;
                    else {
                        if (d = o[u],
                        void 0 !== d) {
                            null === d._cacheIndex && (++d.referenceCount,
                            this._addInactiveBinding(d, l, f));
                            continue
                        }
                        var m = e && e._propertyBindings[u].binding.parsedPath;
                        d = new n.PropertyMixer(n.PropertyBinding.create(i, f, m),p.ValueTypeName,p.getValueSize()),
                        ++d.referenceCount,
                        this._addInactiveBinding(d, l, f),
                        o[u] = d
                    }
                    s[u].resultBuffer = d.buffer
                }
            },
            _activateAction: function(t) {
                if (!this._isActiveAction(t)) {
                    if (null === t._cacheIndex) {
                        var e = (t._localRoot || this._root).uuid
                          , i = t._clip.uuid
                          , n = this._actionsByClip[i];
                        this._bindAction(t, n && n.knownActions[0]),
                        this._addInactiveAction(t, i, e)
                    }
                    for (var r = t._propertyBindings, a = 0, o = r.length; a !== o; ++a) {
                        var s = r[a];
                        0 === s.useCount++ && (this._lendBinding(s),
                        s.saveOriginalState())
                    }
                    this._lendAction(t)
                }
            },
            _deactivateAction: function(t) {
                if (this._isActiveAction(t)) {
                    for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                        var r = e[i];
                        0 === --r.useCount && (r.restoreOriginalState(),
                        this._takeBackBinding(r))
                    }
                    this._takeBackAction(t)
                }
            },
            _initMemoryManager: function() {
                this._actions = [],
                this._nActiveActions = 0,
                this._actionsByClip = {},
                this._bindings = [],
                this._nActiveBindings = 0,
                this._bindingsByRootAndName = {},
                this._controlInterpolants = [],
                this._nActiveControlInterpolants = 0;
                var t = this;
                this.stats = {
                    actions: {
                        get total() {
                            return t._actions.length
                        },
                        get inUse() {
                            return t._nActiveActions
                        }
                    },
                    bindings: {
                        get total() {
                            return t._bindings.length
                        },
                        get inUse() {
                            return t._nActiveBindings
                        }
                    },
                    controlInterpolants: {
                        get total() {
                            return t._controlInterpolants.length
                        },
                        get inUse() {
                            return t._nActiveControlInterpolants
                        }
                    }
                }
            },
            _isActiveAction: function(t) {
                var e = t._cacheIndex;
                return null !== e && e < this._nActiveActions
            },
            _addInactiveAction: function(t, e, i) {
                var n = this._actions
                  , r = this._actionsByClip
                  , a = r[e];
                if (void 0 === a)
                    a = {
                        knownActions: [t],
                        actionByRoot: {}
                    },
                    t._byClipCacheIndex = 0,
                    r[e] = a;
                else {
                    var o = a.knownActions;
                    t._byClipCacheIndex = o.length,
                    o.push(t)
                }
                t._cacheIndex = n.length,
                n.push(t),
                a.actionByRoot[i] = t
            },
            _removeInactiveAction: function(t) {
                var e = this._actions
                  , i = e[e.length - 1]
                  , n = t._cacheIndex;
                i._cacheIndex = n,
                e[n] = i,
                e.pop(),
                t._cacheIndex = null;
                var r = t._clip.uuid
                  , a = this._actionsByClip
                  , o = a[r]
                  , s = o.knownActions
                  , l = s[s.length - 1]
                  , h = t._byClipCacheIndex;
                l._byClipCacheIndex = h,
                s[h] = l,
                s.pop(),
                t._byClipCacheIndex = null;
                var c = o.actionByRoot
                  , u = (e._localRoot || this._root).uuid;
                delete c[u],
                0 === s.length && delete a[r],
                this._removeInactiveBindingsForAction(t)
            },
            _removeInactiveBindingsForAction: function(t) {
                for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                    var r = e[i];
                    0 === --r.referenceCount && this._removeInactiveBinding(r)
                }
            },
            _lendAction: function(t) {
                var e = this._actions
                  , i = t._cacheIndex
                  , n = this._nActiveActions++
                  , r = e[n];
                t._cacheIndex = n,
                e[n] = t,
                r._cacheIndex = i,
                e[i] = r
            },
            _takeBackAction: function(t) {
                var e = this._actions
                  , i = t._cacheIndex
                  , n = --this._nActiveActions
                  , r = e[n];
                t._cacheIndex = n,
                e[n] = t,
                r._cacheIndex = i,
                e[i] = r
            },
            _addInactiveBinding: function(t, e, i) {
                var n = this._bindingsByRootAndName
                  , r = n[e]
                  , a = this._bindings;
                void 0 === r && (r = {},
                n[e] = r),
                r[i] = t,
                t._cacheIndex = a.length,
                a.push(t)
            },
            _removeInactiveBinding: function(t) {
                var e = this._bindings
                  , i = t.binding
                  , n = i.rootNode.uuid
                  , r = i.path
                  , a = this._bindingsByRootAndName
                  , o = a[n]
                  , s = e[e.length - 1]
                  , l = t._cacheIndex;
                s._cacheIndex = l,
                e[l] = s,
                e.pop(),
                delete o[r];
                t: {
                    for (var h in o)
                        break t;
                    delete a[n]
                }
            },
            _lendBinding: function(t) {
                var e = this._bindings
                  , i = t._cacheIndex
                  , n = this._nActiveBindings++
                  , r = e[n];
                t._cacheIndex = n,
                e[n] = t,
                r._cacheIndex = i,
                e[i] = r
            },
            _takeBackBinding: function(t) {
                var e = this._bindings
                  , i = t._cacheIndex
                  , n = --this._nActiveBindings
                  , r = e[n];
                t._cacheIndex = n,
                e[n] = t,
                r._cacheIndex = i,
                e[i] = r
            },
            _lendControlInterpolant: function() {
                var t = this._controlInterpolants
                  , e = this._nActiveControlInterpolants++
                  , i = t[e];
                return void 0 === i && (i = new n.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
                i.__cacheIndex = e,
                t[e] = i),
                i
            },
            _takeBackControlInterpolant: function(t) {
                var e = this._controlInterpolants
                  , i = t.__cacheIndex
                  , n = --this._nActiveControlInterpolants
                  , r = e[n];
                t.__cacheIndex = n,
                e[n] = t,
                r.__cacheIndex = i,
                e[i] = r
            },
            _controlInterpolantsResultBuffer: new Float32Array(1)
        }),
        n.AnimationObjectGroup = function(t) {
            this.uuid = n.Math.generateUUID(),
            this._objects = Array.prototype.slice.call(arguments),
            this.nCachedObjects_ = 0;
            var e = {};
            this._indicesByUUID = e;
            for (var i = 0, r = arguments.length; i !== r; ++i)
                e[arguments[i].uuid] = i;
            this._paths = [],
            this._parsedPaths = [],
            this._bindings = [],
            this._bindingsIndicesByPath = {};
            var a = this;
            this.stats = {
                objects: {
                    get total() {
                        return a._objects.length
                    },
                    get inUse() {
                        return this.total - a.nCachedObjects_
                    }
                },
                get bindingsPerObject() {
                    return a._bindings.length
                }
            }
        }
        ,
        n.AnimationObjectGroup.prototype = {
            constructor: n.AnimationObjectGroup,
            add: function(t) {
                for (var e = this._objects, i = e.length, r = this.nCachedObjects_, a = this._indicesByUUID, o = this._paths, s = this._parsedPaths, l = this._bindings, h = l.length, c = 0, u = arguments.length; c !== u; ++c) {
                    var p = arguments[c]
                      , f = p.uuid
                      , d = a[f];
                    if (void 0 === d) {
                        d = i++,
                        a[f] = d,
                        e.push(p);
                        for (var m = 0, g = h; m !== g; ++m)
                            l[m].push(new n.PropertyBinding(p,o[m],s[m]))
                    } else if (d < r) {
                        var v = e[d]
                          , y = --r
                          , _ = e[y];
                        a[_.uuid] = d,
                        e[d] = _,
                        a[f] = y,
                        e[y] = p;
                        for (var m = 0, g = h; m !== g; ++m) {
                            var x = l[m]
                              , b = x[y]
                              , w = x[d];
                            x[d] = b,
                            void 0 === w && (w = new n.PropertyBinding(p,o[m],s[m])),
                            x[y] = w
                        }
                    } else
                        e[d] !== v
                }
                this.nCachedObjects_ = r
            },
            remove: function(t) {
                for (var e = this._objects, i = (e.length,
                this.nCachedObjects_), n = this._indicesByUUID, r = this._bindings, a = r.length, o = 0, s = arguments.length; o !== s; ++o) {
                    var l = arguments[o]
                      , h = l.uuid
                      , c = n[h];
                    if (void 0 !== c && c >= i) {
                        var u = i++
                          , p = e[u];
                        n[p.uuid] = c,
                        e[c] = p,
                        n[h] = u,
                        e[u] = l;
                        for (var f = 0, d = a; f !== d; ++f) {
                            var m = r[f]
                              , g = m[u]
                              , v = m[c];
                            m[c] = g,
                            m[u] = v
                        }
                    }
                }
                this.nCachedObjects_ = i
            },
            uncache: function(t) {
                for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, a = this._bindings, o = a.length, s = 0, l = arguments.length; s !== l; ++s) {
                    var h = arguments[s]
                      , c = h.uuid
                      , u = r[c];
                    if (void 0 !== u)
                        if (delete r[c],
                        u < n) {
                            var p = --n
                              , f = e[p]
                              , d = --i
                              , m = e[d];
                            r[f.uuid] = u,
                            e[u] = f,
                            r[m.uuid] = p,
                            e[p] = m,
                            e.pop();
                            for (var g = 0, v = o; g !== v; ++g) {
                                var y = a[g]
                                  , _ = y[p]
                                  , x = y[d];
                                y[u] = _,
                                y[p] = x,
                                y.pop()
                            }
                        } else {
                            var d = --i
                              , m = e[d];
                            r[m.uuid] = u,
                            e[u] = m,
                            e.pop();
                            for (var g = 0, v = o; g !== v; ++g) {
                                var y = a[g];
                                y[u] = y[d],
                                y.pop()
                            }
                        }
                }
                this.nCachedObjects_ = n
            },
            subscribe_: function(t, e) {
                var i = this._bindingsIndicesByPath
                  , r = i[t]
                  , a = this._bindings;
                if (void 0 !== r)
                    return a[r];
                var o = this._paths
                  , s = this._parsedPaths
                  , l = this._objects
                  , h = l.length
                  , c = this.nCachedObjects_
                  , u = new Array(h);
                r = a.length,
                i[t] = r,
                o.push(t),
                s.push(e),
                a.push(u);
                for (var p = c, f = l.length; p !== f; ++p) {
                    var d = l[p];
                    u[p] = new n.PropertyBinding(d,t,e)
                }
                return u
            },
            unsubscribe_: function(t) {
                var e = this._bindingsIndicesByPath
                  , i = e[t];
                if (void 0 !== i) {
                    var n = this._paths
                      , r = this._parsedPaths
                      , a = this._bindings
                      , o = a.length - 1
                      , s = a[o]
                      , l = t[o];
                    e[l] = i,
                    a[i] = s,
                    a.pop(),
                    r[i] = r[o],
                    r.pop(),
                    n[i] = n[o],
                    n.pop()
                }
            }
        },
        n.AnimationUtils = {
            arraySlice: function(t, e, i) {
                return n.AnimationUtils.isTypedArray(t) ? new t.constructor(t.subarray(e, i)) : t.slice(e, i)
            },
            convertArray: function(t, e, i) {
                return !t || !i && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
            },
            isTypedArray: function(t) {
                return ArrayBuffer.isView(t) && !(t instanceof DataView)
            },
            getKeyframeOrder: function(t) {
                function e(e, i) {
                    return t[e] - t[i]
                }
                for (var i = t.length, n = new Array(i), r = 0; r !== i; ++r)
                    n[r] = r;
                return n.sort(e),
                n
            },
            sortedArray: function(t, e, i) {
                for (var n = t.length, r = new t.constructor(n), a = 0, o = 0; o !== n; ++a)
                    for (var s = i[a] * e, l = 0; l !== e; ++l)
                        r[o++] = t[s + l];
                return r
            },
            flattenJSON: function(t, e, i, n) {
                for (var r = 1, a = t[0]; void 0 !== a && void 0 === a[n]; )
                    a = t[r++];
                if (void 0 !== a) {
                    var o = a[n];
                    if (void 0 !== o)
                        if (Array.isArray(o)) {
                            do
                                o = a[n],
                                void 0 !== o && (e.push(a.time),
                                i.push.apply(i, o)),
                                a = t[r++];
                            while (void 0 !== a)
                        } else if (void 0 !== o.toArray) {
                            do
                                o = a[n],
                                void 0 !== o && (e.push(a.time),
                                o.toArray(i, i.length)),
                                a = t[r++];
                            while (void 0 !== a)
                        } else
                            do
                                o = a[n],
                                void 0 !== o && (e.push(a.time),
                                i.push(o)),
                                a = t[r++];
                            while (void 0 !== a)
                }
            }
        },
        n.KeyframeTrack = function(t, e, i, r) {
            if (void 0 === t)
                throw new Error("track name is undefined");
            if (void 0 === e || 0 === e.length)
                throw new Error("no keyframes in track named " + t);
            this.name = t,
            this.times = n.AnimationUtils.convertArray(e, this.TimeBufferType),
            this.values = n.AnimationUtils.convertArray(i, this.ValueBufferType),
            this.setInterpolation(r || this.DefaultInterpolation),
            this.validate(),
            this.optimize()
        }
        ,
        n.KeyframeTrack.prototype = {
            constructor: n.KeyframeTrack,
            TimeBufferType: Float32Array,
            ValueBufferType: Float32Array,
            DefaultInterpolation: n.InterpolateLinear,
            InterpolantFactoryMethodDiscrete: function(t) {
                return new n.DiscreteInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            InterpolantFactoryMethodLinear: function(t) {
                return new n.LinearInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            InterpolantFactoryMethodSmooth: function(t) {
                return new n.CubicInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            setInterpolation: function(t) {
                var e;
                switch (t) {
                case n.InterpolateDiscrete:
                    e = this.InterpolantFactoryMethodDiscrete;
                    break;
                case n.InterpolateLinear:
                    e = this.InterpolantFactoryMethodLinear;
                    break;
                case n.InterpolateSmooth:
                    e = this.InterpolantFactoryMethodSmooth
                }
                if (void 0 !== e)
                    this.createInterpolant = e;
                else {
                    var i = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                    if (void 0 === this.createInterpolant) {
                        if (t === this.DefaultInterpolation)
                            throw new Error(i);
                        this.setInterpolation(this.DefaultInterpolation)
                    }
                }
            },
            getInterpolation: function() {
                switch (this.createInterpolant) {
                case this.InterpolantFactoryMethodDiscrete:
                    return n.InterpolateDiscrete;
                case this.InterpolantFactoryMethodLinear:
                    return n.InterpolateLinear;
                case this.InterpolantFactoryMethodSmooth:
                    return n.InterpolateSmooth
                }
            },
            getValueSize: function() {
                return this.values.length / this.times.length
            },
            shift: function(t) {
                if (0 !== t)
                    for (var e = this.times, i = 0, n = e.length; i !== n; ++i)
                        e[i] += t;
                return this
            },
            scale: function(t) {
                if (1 !== t)
                    for (var e = this.times, i = 0, n = e.length; i !== n; ++i)
                        e[i] *= t;
                return this
            },
            trim: function(t, e) {
                for (var i = this.times, r = i.length, a = 0, o = r - 1; a !== r && i[a] < t; )
                    ++a;
                for (; o !== -1 && i[o] > e; )
                    --o;
                if (++o,
                0 !== a || o !== r) {
                    a >= o && (o = Math.max(o, 1),
                    a = o - 1);
                    var s = this.getValueSize();
                    this.times = n.AnimationUtils.arraySlice(i, a, o),
                    this.values = n.AnimationUtils.arraySlice(this.values, a * s, o * s)
                }
                return this
            },
            validate: function() {
                var t = !0
                  , e = this.getValueSize();
                e - Math.floor(e) !== 0 && (t = !1);
                var i = this.times
                  , r = this.values
                  , a = i.length;
                0 === a && (t = !1);
                for (var o = null, s = 0; s !== a; s++) {
                    var l = i[s];
                    if ("number" == typeof l && isNaN(l)) {
                        t = !1;
                        break
                    }
                    if (null !== o && o > l) {
                        t = !1;
                        break
                    }
                    o = l
                }
                if (void 0 !== r && n.AnimationUtils.isTypedArray(r))
                    for (var s = 0, h = r.length; s !== h; ++s) {
                        var c = r[s];
                        if (isNaN(c)) {
                            t = !1;
                            break
                        }
                    }
                return t
            },
            optimize: function() {
                for (var t = this.times, e = this.values, i = this.getValueSize(), r = 1, a = 1, o = t.length - 1; a <= o; ++a) {
                    var s = !1
                      , l = t[a]
                      , h = t[a + 1];
                    if (l !== h && (1 !== a || l !== l[0]))
                        for (var c = a * i, u = c - i, p = c + i, f = 0; f !== i; ++f) {
                            var d = e[c + f];
                            if (d !== e[u + f] || d !== e[p + f]) {
                                s = !0;
                                break
                            }
                        }
                    if (s) {
                        if (a !== r) {
                            t[r] = t[a];
                            for (var m = a * i, g = r * i, f = 0; f !== i; ++f)
                                e[g + f] = e[m + f]
                        }
                        ++r
                    }
                }
                return r !== t.length && (this.times = n.AnimationUtils.arraySlice(t, 0, r),
                this.values = n.AnimationUtils.arraySlice(e, 0, r * i)),
                this
            }
        },
        Object.assign(n.KeyframeTrack, {
            parse: function(t) {
                if (void 0 === t.type)
                    throw new Error("track type undefined, can not parse");
                var e = n.KeyframeTrack._getTrackTypeForValueTypeName(t.type);
                if (void 0 === t.times) {
                    var i = []
                      , r = [];
                    n.AnimationUtils.flattenJSON(t.keys, i, r, "value"),
                    t.times = i,
                    t.values = r
                }
                return void 0 !== e.parse ? e.parse(t) : new e(t.name,t.times,t.values,t.interpolation)
            },
            toJSON: function(t) {
                var e, i = t.constructor;
                if (void 0 !== i.toJSON)
                    e = i.toJSON(t);
                else {
                    e = {
                        name: t.name,
                        times: n.AnimationUtils.convertArray(t.times, Array),
                        values: n.AnimationUtils.convertArray(t.values, Array)
                    };
                    var r = t.getInterpolation();
                    r !== t.DefaultInterpolation && (e.interpolation = r)
                }
                return e.type = t.ValueTypeName,
                e
            },
            _getTrackTypeForValueTypeName: function(t) {
                switch (t.toLowerCase()) {
                case "scalar":
                case "double":
                case "float":
                case "number":
                case "integer":
                    return n.NumberKeyframeTrack;
                case "vector":
                case "vector2":
                case "vector3":
                case "vector4":
                    return n.VectorKeyframeTrack;
                case "color":
                    return n.ColorKeyframeTrack;
                case "quaternion":
                    return n.QuaternionKeyframeTrack;
                case "bool":
                case "boolean":
                    return n.BooleanKeyframeTrack;
                case "string":
                    return n.StringKeyframeTrack
                }
                throw new Error("Unsupported typeName: " + t)
            }
        }),
        n.PropertyBinding = function(t, e, i) {
            this.path = e,
            this.parsedPath = i || n.PropertyBinding.parseTrackName(e),
            this.node = n.PropertyBinding.findNode(t, this.parsedPath.nodeName) || t,
            this.rootNode = t
        }
        ,
        n.PropertyBinding.prototype = {
            constructor: n.PropertyBinding,
            getValue: function(t, e) {
                this.bind(),
                this.getValue(t, e)
            },
            setValue: function(t, e) {
                this.bind(),
                this.setValue(t, e)
            },
            bind: function() {
                var t = this.node
                  , e = this.parsedPath
                  , i = e.objectName
                  , r = e.propertyName
                  , a = e.propertyIndex;
                if (t || (t = n.PropertyBinding.findNode(this.rootNode, e.nodeName) || this.rootNode,
                this.node = t),
                this.getValue = this._getValue_unavailable,
                this.setValue = this._setValue_unavailable,
                t) {
                    if (i) {
                        var o = e.objectIndex;
                        switch (i) {
                        case "materials":
                            if (!t.material)
                                return;
                            if (!t.material.materials)
                                return;
                            t = t.material.materials;
                            break;
                        case "bones":
                            if (!t.skeleton)
                                return;
                            t = t.skeleton.bones;
                            for (var s = 0; s < t.length; s++)
                                if (t[s].name === o) {
                                    o = s;
                                    break
                                }
                            break;
                        default:
                            if (void 0 === t[i])
                                return;
                            t = t[i]
                        }
                        if (void 0 !== o) {
                            if (void 0 === t[o])
                                return;
                            t = t[o]
                        }
                    }
                    var l = t[r];
                    if (void 0 !== l) {
                        var h = this.Versioning.None;
                        void 0 !== t.needsUpdate ? (h = this.Versioning.NeedsUpdate,
                        this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (h = this.Versioning.MatrixWorldNeedsUpdate,
                        this.targetObject = t);
                        var c = this.BindingType.Direct;
                        if (void 0 !== a) {
                            if ("morphTargetInfluences" === r) {
                                if (!t.geometry)
                                    return;
                                if (!t.geometry.morphTargets)
                                    return;
                                for (var s = 0; s < this.node.geometry.morphTargets.length; s++)
                                    if (t.geometry.morphTargets[s].name === a) {
                                        a = s;
                                        break
                                    }
                            }
                            c = this.BindingType.ArrayElement,
                            this.resolvedProperty = l,
                            this.propertyIndex = a
                        } else
                            void 0 !== l.fromArray && void 0 !== l.toArray ? (c = this.BindingType.HasFromToArray,
                            this.resolvedProperty = l) : void 0 !== l.length ? (c = this.BindingType.EntireArray,
                            this.resolvedProperty = l) : this.propertyName = r;
                        this.getValue = this.GetterByBindingType[c],
                        this.setValue = this.SetterByBindingTypeAndVersioning[c][h]
                    } else {
                        e.nodeName
                    }
                }
            },
            unbind: function() {
                this.node = null,
                this.getValue = this._getValue_unbound,
                this.setValue = this._setValue_unbound
            }
        },
        Object.assign(n.PropertyBinding.prototype, {
            _getValue_unavailable: function() {},
            _setValue_unavailable: function() {},
            _getValue_unbound: n.PropertyBinding.prototype.getValue,
            _setValue_unbound: n.PropertyBinding.prototype.setValue,
            BindingType: {
                Direct: 0,
                EntireArray: 1,
                ArrayElement: 2,
                HasFromToArray: 3
            },
            Versioning: {
                None: 0,
                NeedsUpdate: 1,
                MatrixWorldNeedsUpdate: 2
            },
            GetterByBindingType: [function(t, e) {
                t[e] = this.node[this.propertyName]
            }
            , function(t, e) {
                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                    t[e++] = i[n]
            }
            , function(t, e) {
                t[e] = this.resolvedProperty[this.propertyIndex]
            }
            , function(t, e) {
                this.resolvedProperty.toArray(t, e)
            }
            ],
            SetterByBindingTypeAndVersioning: [[function(t, e) {
                this.node[this.propertyName] = t[e]
            }
            , function(t, e) {
                this.node[this.propertyName] = t[e],
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                this.node[this.propertyName] = t[e],
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ], [function(t, e) {
                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                    i[n] = t[e++]
            }
            , function(t, e) {
                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                    i[n] = t[e++];
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                    i[n] = t[e++];
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ], [function(t, e) {
                this.resolvedProperty[this.propertyIndex] = t[e]
            }
            , function(t, e) {
                this.resolvedProperty[this.propertyIndex] = t[e],
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                this.resolvedProperty[this.propertyIndex] = t[e],
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ], [function(t, e) {
                this.resolvedProperty.fromArray(t, e)
            }
            , function(t, e) {
                this.resolvedProperty.fromArray(t, e),
                this.targetObject.needsUpdate = !0
            }
            , function(t, e) {
                this.resolvedProperty.fromArray(t, e),
                this.targetObject.matrixWorldNeedsUpdate = !0
            }
            ]]
        }),
        n.PropertyBinding.Composite = function(t, e, i) {
            var r = i || n.PropertyBinding.parseTrackName(e);
            this._targetGroup = t,
            this._bindings = t.subscribe_(e, r)
        }
        ,
        n.PropertyBinding.Composite.prototype = {
            constructor: n.PropertyBinding.Composite,
            getValue: function(t, e) {
                this.bind();
                var i = this._targetGroup.nCachedObjects_
                  , n = this._bindings[i];
                void 0 !== n && n.getValue(t, e)
            },
            setValue: function(t, e) {
                for (var i = this._bindings, n = this._targetGroup.nCachedObjects_, r = i.length; n !== r; ++n)
                    i[n].setValue(t, e)
            },
            bind: function() {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e)
                    t[e].bind()
            },
            unbind: function() {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e)
                    t[e].unbind()
            }
        },
        n.PropertyBinding.create = function(t, e, i) {
            return t instanceof n.AnimationObjectGroup ? new n.PropertyBinding.Composite(t,e,i) : new n.PropertyBinding(t,e,i)
        }
        ,
        n.PropertyBinding.parseTrackName = function(t) {
            var e = /^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/
              , i = e.exec(t);
            if (!i)
                throw new Error("cannot parse trackName at all: " + t);
            i.index === e.lastIndex && e.lastIndex++;
            var n = {
                nodeName: i[3],
                objectName: i[5],
                objectIndex: i[7],
                propertyName: i[9],
                propertyIndex: i[11]
            };
            if (null === n.propertyName || 0 === n.propertyName.length)
                throw new Error("can not parse propertyName from trackName: " + t);
            return n
        }
        ,
        n.PropertyBinding.findNode = function(t, e) {
            if (!e || "" === e || "root" === e || "." === e || e === -1 || e === t.name || e === t.uuid)
                return t;
            if (t.skeleton) {
                var i = function(t) {
                    for (var i = 0; i < t.bones.length; i++) {
                        var n = t.bones[i];
                        if (n.name === e)
                            return n
                    }
                    return null
                }
                  , n = i(t.skeleton);
                if (n)
                    return n
            }
            if (t.children) {
                var r = function(t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        if (n.name === e || n.uuid === e)
                            return n;
                        var a = r(n.children);
                        if (a)
                            return a
                    }
                    return null
                }
                  , a = r(t.children);
                if (a)
                    return a
            }
            return null
        }
        ,
        n.PropertyMixer = function(t, e, i) {
            this.binding = t,
            this.valueSize = i;
            var n, r = Float64Array;
            switch (e) {
            case "quaternion":
                n = this._slerp;
                break;
            case "string":
            case "bool":
                r = Array,
                n = this._select;
                break;
            default:
                n = this._lerp
            }
            this.buffer = new r(4 * i),
            this._mixBufferRegion = n,
            this.cumulativeWeight = 0,
            this.useCount = 0,
            this.referenceCount = 0
        }
        ,
        n.PropertyMixer.prototype = {
            constructor: n.PropertyMixer,
            accumulate: function(t, e) {
                var i = this.buffer
                  , n = this.valueSize
                  , r = t * n + n
                  , a = this.cumulativeWeight;
                if (0 === a) {
                    for (var o = 0; o !== n; ++o)
                        i[r + o] = i[o];
                    a = e
                } else {
                    a += e;
                    var s = e / a;
                    this._mixBufferRegion(i, r, 0, s, n)
                }
                this.cumulativeWeight = a
            },
            apply: function(t) {
                var e = this.valueSize
                  , i = this.buffer
                  , n = t * e + e
                  , r = this.cumulativeWeight
                  , a = this.binding;
                if (this.cumulativeWeight = 0,
                r < 1) {
                    var o = 3 * e;
                    this._mixBufferRegion(i, n, o, 1 - r, e)
                }
                for (var s = e, l = e + e; s !== l; ++s)
                    if (i[s] !== i[s + e]) {
                        a.setValue(i, n);
                        break
                    }
            },
            saveOriginalState: function() {
                var t = this.binding
                  , e = this.buffer
                  , i = this.valueSize
                  , n = 3 * i;
                t.getValue(e, n);
                for (var r = i, a = n; r !== a; ++r)
                    e[r] = e[n + r % i];
                this.cumulativeWeight = 0
            },
            restoreOriginalState: function() {
                var t = 3 * this.valueSize;
                this.binding.setValue(this.buffer, t)
            },
            _select: function(t, e, i, n, r) {
                if (n >= .5)
                    for (var a = 0; a !== r; ++a)
                        t[e + a] = t[i + a]
            },
            _slerp: function(t, e, i, r, a) {
                n.Quaternion.slerpFlat(t, e, t, e, t, i, r)
            },
            _lerp: function(t, e, i, n, r) {
                for (var a = 1 - n, o = 0; o !== r; ++o) {
                    var s = e + o;
                    t[s] = t[s] * a + t[i + o] * n
                }
            }
        },
        n.BooleanKeyframeTrack = function(t, e, i) {
            n.KeyframeTrack.call(this, t, e, i)
        }
        ,
        n.BooleanKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
            constructor: n.BooleanKeyframeTrack,
            ValueTypeName: "bool",
            ValueBufferType: Array,
            DefaultInterpolation: n.InterpolateDiscrete,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }),
        n.ColorKeyframeTrack = function(t, e, i, r) {
            n.KeyframeTrack.call(this, t, e, i, r)
        }
        ,
        n.ColorKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
            constructor: n.ColorKeyframeTrack,
            ValueTypeName: "color"
        }),
        n.NumberKeyframeTrack = function(t, e, i, r) {
            n.KeyframeTrack.call(this, t, e, i, r)
        }
        ,
        n.NumberKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
            constructor: n.NumberKeyframeTrack,
            ValueTypeName: "number"
        }),
        n.QuaternionKeyframeTrack = function(t, e, i, r) {
            n.KeyframeTrack.call(this, t, e, i, r)
        }
        ,
        n.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
            constructor: n.QuaternionKeyframeTrack,
            ValueTypeName: "quaternion",
            DefaultInterpolation: n.InterpolateLinear,
            InterpolantFactoryMethodLinear: function(t) {
                return new n.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),t)
            },
            InterpolantFactoryMethodSmooth: void 0
        }),
        n.StringKeyframeTrack = function(t, e, i, r) {
            n.KeyframeTrack.call(this, t, e, i, r)
        }
        ,
        n.StringKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
            constructor: n.StringKeyframeTrack,
            ValueTypeName: "string",
            ValueBufferType: Array,
            DefaultInterpolation: n.InterpolateDiscrete,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }),
        n.VectorKeyframeTrack = function(t, e, i, r) {
            n.KeyframeTrack.call(this, t, e, i, r)
        }
        ,
        n.VectorKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
            constructor: n.VectorKeyframeTrack,
            ValueTypeName: "vector"
        }),
        n.Audio = function(t) {
            n.Object3D.call(this),
            this.type = "Audio",
            this.context = t.context,
            this.source = this.context.createBufferSource(),
            this.source.onended = this.onEnded.bind(this),
            this.gain = this.context.createGain(),
            this.gain.connect(t.getInput()),
            this.autoplay = !1,
            this.startTime = 0,
            this.playbackRate = 1,
            this.isPlaying = !1,
            this.hasPlaybackControl = !0,
            this.sourceType = "empty",
            this.filters = []
        }
        ,
        n.Audio.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Audio,
            getOutput: function() {
                return this.gain
            },
            setNodeSource: function(t) {
                return this.hasPlaybackControl = !1,
                this.sourceType = "audioNode",
                this.source = t,
                this.connect(),
                this
            },
            setBuffer: function(t) {
                return this.source.buffer = t,
                this.sourceType = "buffer",
                this.autoplay && this.play(),
                this
            },
            play: function() {
                if (this.isPlaying !== !0 && this.hasPlaybackControl !== !1) {
                    var t = this.context.createBufferSource();
                    return t.buffer = this.source.buffer,
                    t.loop = this.source.loop,
                    t.onended = this.source.onended,
                    t.start(0, this.startTime),
                    t.playbackRate.value = this.playbackRate,
                    this.isPlaying = !0,
                    this.source = t,
                    this.connect()
                }
            },
            pause: function() {
                if (this.hasPlaybackControl !== !1)
                    return this.source.stop(),
                    this.startTime = this.context.currentTime,
                    this.isPlaying = !1,
                    this
            },
            stop: function() {
                if (this.hasPlaybackControl !== !1)
                    return this.source.stop(),
                    this.startTime = 0,
                    this.isPlaying = !1,
                    this
            },
            connect: function() {
                if (this.filters.length > 0) {
                    this.source.connect(this.filters[0]);
                    for (var t = 1, e = this.filters.length; t < e; t++)
                        this.filters[t - 1].connect(this.filters[t]);
                    this.filters[this.filters.length - 1].connect(this.getOutput())
                } else
                    this.source.connect(this.getOutput());
                return this
            },
            disconnect: function() {
                if (this.filters.length > 0) {
                    this.source.disconnect(this.filters[0]);
                    for (var t = 1, e = this.filters.length; t < e; t++)
                        this.filters[t - 1].disconnect(this.filters[t]);
                    this.filters[this.filters.length - 1].disconnect(this.getOutput())
                } else
                    this.source.disconnect(this.getOutput());
                return this
            },
            getFilters: function() {
                return this.filters
            },
            setFilters: function(t) {
                return t || (t = []),
                this.isPlaying === !0 ? (this.disconnect(),
                this.filters = t,
                this.connect()) : this.filters = t,
                this
            },
            getFilter: function() {
                return this.getFilters()[0]
            },
            setFilter: function(t) {
                return this.setFilters(t ? [t] : [])
            },
            setPlaybackRate: function(t) {
                if (this.hasPlaybackControl !== !1)
                    return this.playbackRate = t,
                    this.isPlaying === !0 && (this.source.playbackRate.value = this.playbackRate),
                    this
            },
            getPlaybackRate: function() {
                return this.playbackRate
            },
            onEnded: function() {
                this.isPlaying = !1
            },
            getLoop: function() {
                return this.hasPlaybackControl !== !1 && this.source.loop
            },
            setLoop: function(t) {
                this.hasPlaybackControl !== !1 && (this.source.loop = t)
            },
            getVolume: function() {
                return this.gain.gain.value
            },
            setVolume: function(t) {
                return this.gain.gain.value = t,
                this
            }
        }),
        n.AudioAnalyser = function(t, e) {
            this.analyser = t.context.createAnalyser(),
            this.analyser.fftSize = void 0 !== e ? e : 2048,
            this.data = new Uint8Array(this.analyser.frequencyBinCount),
            t.getOutput().connect(this.analyser)
        }
        ,
        Object.assign(n.AudioAnalyser.prototype, {
            getFrequencyData: function() {
                return this.analyser.getByteFrequencyData(this.data),
                this.data
            },
            getAverageFrequency: function() {
                for (var t = 0, e = this.getFrequencyData(), i = 0; i < e.length; i++)
                    t += e[i];
                return t / e.length
            }
        }),
        Object.defineProperty(n, "AudioContext", {
            get: function() {
                var t;
                return function() {
                    return void 0 === t && (t = new (window.AudioContext || window.webkitAudioContext)),
                    t
                }
            }()
        }),
        n.PositionalAudio = function(t) {
            n.Audio.call(this, t),
            this.panner = this.context.createPanner(),
            this.panner.connect(this.gain)
        }
        ,
        n.PositionalAudio.prototype = Object.assign(Object.create(n.Audio.prototype), {
            constructor: n.PositionalAudio,
            getOutput: function() {
                return this.panner
            },
            getRefDistance: function() {
                return this.panner.refDistance
            },
            setRefDistance: function(t) {
                this.panner.refDistance = t
            },
            getRolloffFactor: function() {
                return this.panner.rolloffFactor
            },
            setRolloffFactor: function(t) {
                this.panner.rolloffFactor = t
            },
            getDistanceModel: function() {
                return this.panner.distanceModel
            },
            setDistanceModel: function(t) {
                this.panner.distanceModel = t
            },
            getMaxDistance: function() {
                return this.panner.maxDistance
            },
            setMaxDistance: function(t) {
                this.panner.maxDistance = t
            },
            updateMatrixWorld: function() {
                var t = new n.Vector3;
                return function(e) {
                    n.Object3D.prototype.updateMatrixWorld.call(this, e),
                    t.setFromMatrixPosition(this.matrixWorld),
                    this.panner.setPosition(t.x, t.y, t.z)
                }
            }()
        }),
        n.AudioListener = function() {
            n.Object3D.call(this),
            this.type = "AudioListener",
            this.context = n.AudioContext,
            this.gain = this.context.createGain(),
            this.gain.connect(this.context.destination),
            this.filter = null
        }
        ,
        n.AudioListener.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.AudioListener,
            getInput: function() {
                return this.gain
            },
            removeFilter: function() {
                null !== this.filter && (this.gain.disconnect(this.filter),
                this.filter.disconnect(this.context.destination),
                this.gain.connect(this.context.destination),
                this.filter = null)
            },
            getFilter: function() {
                return this.filter
            },
            setFilter: function(t) {
                null !== this.filter ? (this.gain.disconnect(this.filter),
                this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                this.filter = t,
                this.gain.connect(this.filter),
                this.filter.connect(this.context.destination)
            },
            getMasterVolume: function() {
                return this.gain.gain.value
            },
            setMasterVolume: function(t) {
                this.gain.gain.value = t
            },
            updateMatrixWorld: function() {
                var t = new n.Vector3
                  , e = new n.Quaternion
                  , i = new n.Vector3
                  , r = new n.Vector3;
                return function(a) {
                    n.Object3D.prototype.updateMatrixWorld.call(this, a);
                    var o = this.context.listener
                      , s = this.up;
                    this.matrixWorld.decompose(t, e, i),
                    r.set(0, 0, -1).applyQuaternion(e),
                    o.setPosition(t.x, t.y, t.z),
                    o.setOrientation(r.x, r.y, r.z, s.x, s.y, s.z)
                }
            }()
        }),
        n.Camera = function() {
            n.Object3D.call(this),
            this.type = "Camera",
            this.matrixWorldInverse = new n.Matrix4,
            this.projectionMatrix = new n.Matrix4
        }
        ,
        n.Camera.prototype = Object.create(n.Object3D.prototype),
        n.Camera.prototype.constructor = n.Camera,
        n.Camera.prototype.getWorldDirection = function() {
            var t = new n.Quaternion;
            return function(e) {
                var i = e || new n.Vector3;
                return this.getWorldQuaternion(t),
                i.set(0, 0, -1).applyQuaternion(t)
            }
        }(),
        n.Camera.prototype.lookAt = function() {
            var t = new n.Matrix4;
            return function(e) {
                t.lookAt(this.position, e, this.up),
                this.quaternion.setFromRotationMatrix(t)
            }
        }(),
        n.Camera.prototype.clone = function() {
            return (new this.constructor).copy(this)
        }
        ,
        n.Camera.prototype.copy = function(t) {
            return n.Object3D.prototype.copy.call(this, t),
            this.matrixWorldInverse.copy(t.matrixWorldInverse),
            this.projectionMatrix.copy(t.projectionMatrix),
            this
        }
        ,
        n.CubeCamera = function(t, e, i) {
            n.Object3D.call(this),
            this.type = "CubeCamera";
            var r = 90
              , a = 1
              , o = new n.PerspectiveCamera(r,a,t,e);
            o.up.set(0, -1, 0),
            o.lookAt(new n.Vector3(1,0,0)),
            this.add(o);
            var s = new n.PerspectiveCamera(r,a,t,e);
            s.up.set(0, -1, 0),
            s.lookAt(new n.Vector3((-1),0,0)),
            this.add(s);
            var l = new n.PerspectiveCamera(r,a,t,e);
            l.up.set(0, 0, 1),
            l.lookAt(new n.Vector3(0,1,0)),
            this.add(l);
            var h = new n.PerspectiveCamera(r,a,t,e);
            h.up.set(0, 0, -1),
            h.lookAt(new n.Vector3(0,(-1),0)),
            this.add(h);
            var c = new n.PerspectiveCamera(r,a,t,e);
            c.up.set(0, -1, 0),
            c.lookAt(new n.Vector3(0,0,1)),
            this.add(c);
            var u = new n.PerspectiveCamera(r,a,t,e);
            u.up.set(0, -1, 0),
            u.lookAt(new n.Vector3(0,0,(-1))),
            this.add(u);
            var p = {
                format: n.RGBFormat,
                magFilter: n.LinearFilter,
                minFilter: n.LinearFilter
            };
            this.renderTarget = new n.WebGLRenderTargetCube(i,i,p),
            this.updateCubeMap = function(t, e) {
                null === this.parent && this.updateMatrixWorld();
                var i = this.renderTarget
                  , n = i.texture.generateMipmaps;
                i.texture.generateMipmaps = !1,
                i.activeCubeFace = 0,
                t.render(e, o, i),
                i.activeCubeFace = 1,
                t.render(e, s, i),
                i.activeCubeFace = 2,
                t.render(e, l, i),
                i.activeCubeFace = 3,
                t.render(e, h, i),
                i.activeCubeFace = 4,
                t.render(e, c, i),
                i.texture.generateMipmaps = n,
                i.activeCubeFace = 5,
                t.render(e, u, i),
                t.setRenderTarget(null)
            }
        }
        ,
        n.CubeCamera.prototype = Object.create(n.Object3D.prototype),
        n.CubeCamera.prototype.constructor = n.CubeCamera,
        n.OrthographicCamera = function(t, e, i, r, a, o) {
            n.Camera.call(this),
            this.type = "OrthographicCamera",
            this.zoom = 1,
            this.view = null,
            this.left = t,
            this.right = e,
            this.top = i,
            this.bottom = r,
            this.near = void 0 !== a ? a : .1,
            this.far = void 0 !== o ? o : 2e3,
            this.updateProjectionMatrix()
        }
        ,
        n.OrthographicCamera.prototype = Object.assign(Object.create(n.Camera.prototype), {
            constructor: n.OrthographicCamera,
            copy: function(t) {
                return n.Camera.prototype.copy.call(this, t),
                this.left = t.left,
                this.right = t.right,
                this.top = t.top,
                this.bottom = t.bottom,
                this.near = t.near,
                this.far = t.far,
                this.zoom = t.zoom,
                this.view = null === t.view ? null : Object.assign({}, t.view),
                this
            },
            setViewOffset: function(t, e, i, n, r, a) {
                this.view = {
                    fullWidth: t,
                    fullHeight: e,
                    offsetX: i,
                    offsetY: n,
                    width: r,
                    height: a
                },
                this.updateProjectionMatrix()
            },
            clearViewOffset: function() {
                this.view = null,
                this.updateProjectionMatrix()
            },
            updateProjectionMatrix: function() {
                var t = (this.right - this.left) / (2 * this.zoom)
                  , e = (this.top - this.bottom) / (2 * this.zoom)
                  , i = (this.right + this.left) / 2
                  , n = (this.top + this.bottom) / 2
                  , r = i - t
                  , a = i + t
                  , o = n + e
                  , s = n - e;
                if (null !== this.view) {
                    var l = this.zoom / (this.view.width / this.view.fullWidth)
                      , h = this.zoom / (this.view.height / this.view.fullHeight)
                      , c = (this.right - this.left) / this.view.width
                      , u = (this.top - this.bottom) / this.view.height;
                    r += c * (this.view.offsetX / l),
                    a = r + c * (this.view.width / l),
                    o -= u * (this.view.offsetY / h),
                    s = o - u * (this.view.height / h)
                }
                this.projectionMatrix.makeOrthographic(r, a, o, s, this.near, this.far)
            },
            toJSON: function(t) {
                var e = n.Object3D.prototype.toJSON.call(this, t);
                return e.object.zoom = this.zoom,
                e.object.left = this.left,
                e.object.right = this.right,
                e.object.top = this.top,
                e.object.bottom = this.bottom,
                e.object.near = this.near,
                e.object.far = this.far,
                null !== this.view && (e.object.view = Object.assign({}, this.view)),
                e
            }
        }),
        n.PerspectiveCamera = function(t, e, i, r) {
            n.Camera.call(this),
            this.type = "PerspectiveCamera",
            this.fov = void 0 !== t ? t : 50,
            this.zoom = 1,
            this.near = void 0 !== i ? i : .1,
            this.far = void 0 !== r ? r : 2e3,
            this.focus = 10,
            this.aspect = void 0 !== e ? e : 1,
            this.view = null,
            this.filmGauge = 35,
            this.filmOffset = 0,
            this.updateProjectionMatrix()
        }
        ,
        n.PerspectiveCamera.prototype = Object.assign(Object.create(n.Camera.prototype), {
            constructor: n.PerspectiveCamera,
            copy: function(t) {
                return n.Camera.prototype.copy.call(this, t),
                this.fov = t.fov,
                this.zoom = t.zoom,
                this.near = t.near,
                this.far = t.far,
                this.focus = t.focus,
                this.aspect = t.aspect,
                this.view = null === t.view ? null : Object.assign({}, t.view),
                this.filmGauge = t.filmGauge,
                this.filmOffset = t.filmOffset,
                this
            },
            setFocalLength: function(t) {
                var e = .5 * this.getFilmHeight() / t;
                this.fov = 2 * n.Math.RAD2DEG * Math.atan(e),
                this.updateProjectionMatrix()
            },
            getFocalLength: function() {
                var t = Math.tan(.5 * n.Math.DEG2RAD * this.fov);
                return .5 * this.getFilmHeight() / t
            },
            getEffectiveFOV: function() {
                return 2 * n.Math.RAD2DEG * Math.atan(Math.tan(.5 * n.Math.DEG2RAD * this.fov) / this.zoom)
            },
            getFilmWidth: function() {
                return this.filmGauge * Math.min(this.aspect, 1)
            },
            getFilmHeight: function() {
                return this.filmGauge / Math.max(this.aspect, 1)
            },
            setViewOffset: function(t, e, i, n, r, a) {
                this.aspect = t / e,
                this.view = {
                    fullWidth: t,
                    fullHeight: e,
                    offsetX: i,
                    offsetY: n,
                    width: r,
                    height: a
                },
                this.updateProjectionMatrix()
            },
            clearViewOffset: function() {
                this.view = null,
                this.updateProjectionMatrix()
            },
            updateProjectionMatrix: function() {
                var t = this.near
                  , e = t * Math.tan(.5 * n.Math.DEG2RAD * this.fov) / this.zoom
                  , i = 2 * e
                  , r = this.aspect * i
                  , a = -.5 * r
                  , o = this.view;
                if (null !== o) {
                    var s = o.fullWidth
                      , l = o.fullHeight;
                    a += o.offsetX * r / s,
                    e -= o.offsetY * i / l,
                    r *= o.width / s,
                    i *= o.height / l
                }
                var h = this.filmOffset;
                0 !== h && (a += t * h / this.getFilmWidth()),
                this.projectionMatrix.makeFrustum(a, a + r, e - i, e, t, this.far)
            },
            toJSON: function(t) {
                var e = n.Object3D.prototype.toJSON.call(this, t);
                return e.object.fov = this.fov,
                e.object.zoom = this.zoom,
                e.object.near = this.near,
                e.object.far = this.far,
                e.object.focus = this.focus,
                e.object.aspect = this.aspect,
                null !== this.view && (e.object.view = Object.assign({}, this.view)),
                e.object.filmGauge = this.filmGauge,
                e.object.filmOffset = this.filmOffset,
                e
            }
        }),
        n.StereoCamera = function() {
            this.type = "StereoCamera",
            this.aspect = 1,
            this.cameraL = new n.PerspectiveCamera,
            this.cameraL.layers.enable(1),
            this.cameraL.matrixAutoUpdate = !1,
            this.cameraR = new n.PerspectiveCamera,
            this.cameraR.layers.enable(2),
            this.cameraR.matrixAutoUpdate = !1
        }
        ,
        Object.assign(n.StereoCamera.prototype, {
            update: function() {
                var t, e, i, r, a, o = new n.Matrix4, s = new n.Matrix4;
                return function(l) {
                    var h = t !== l.focus || e !== l.fov || i !== l.aspect * this.aspect || r !== l.near || a !== l.far;
                    if (h) {
                        t = l.focus,
                        e = l.fov,
                        i = l.aspect * this.aspect,
                        r = l.near,
                        a = l.far;
                        var c, u, p = l.projectionMatrix.clone(), f = .032, d = f * r / t, m = r * Math.tan(n.Math.DEG2RAD * e * .5);
                        s.elements[12] = -f,
                        o.elements[12] = f,
                        c = -m * i + d,
                        u = m * i + d,
                        p.elements[0] = 2 * r / (u - c),
                        p.elements[8] = (u + c) / (u - c),
                        this.cameraL.projectionMatrix.copy(p),
                        c = -m * i - d,
                        u = m * i - d,
                        p.elements[0] = 2 * r / (u - c),
                        p.elements[8] = (u + c) / (u - c),
                        this.cameraR.projectionMatrix.copy(p)
                    }
                    this.cameraL.matrixWorld.copy(l.matrixWorld).multiply(s),
                    this.cameraR.matrixWorld.copy(l.matrixWorld).multiply(o)
                }
            }()
        }),
        n.Light = function(t, e) {
            n.Object3D.call(this),
            this.type = "Light",
            this.color = new n.Color(t),
            this.intensity = void 0 !== e ? e : 1,
            this.receiveShadow = void 0
        }
        ,
        n.Light.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Light,
            copy: function(t) {
                return n.Object3D.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.intensity = t.intensity,
                this
            },
            toJSON: function(t) {
                var e = n.Object3D.prototype.toJSON.call(this, t);
                return e.object.color = this.color.getHex(),
                e.object.intensity = this.intensity,
                void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
                void 0 !== this.distance && (e.object.distance = this.distance),
                void 0 !== this.angle && (e.object.angle = this.angle),
                void 0 !== this.decay && (e.object.decay = this.decay),
                void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
                e
            }
        }),
        n.LightShadow = function(t) {
            this.camera = t,
            this.bias = 0,
            this.radius = 1,
            this.mapSize = new n.Vector2(512,512),
            this.map = null,
            this.matrix = new n.Matrix4
        }
        ,
        Object.assign(n.LightShadow.prototype, {
            copy: function(t) {
                return this.camera = t.camera.clone(),
                this.bias = t.bias,
                this.radius = t.radius,
                this.mapSize.copy(t.mapSize),
                this
            },
            clone: function() {
                return (new this.constructor).copy(this)
            }
        }),
        n.AmbientLight = function(t, e) {
            n.Light.call(this, t, e),
            this.type = "AmbientLight",
            this.castShadow = void 0
        }
        ,
        n.AmbientLight.prototype = Object.assign(Object.create(n.Light.prototype), {
            constructor: n.AmbientLight
        }),
        n.DirectionalLight = function(t, e) {
            n.Light.call(this, t, e),
            this.type = "DirectionalLight",
            this.position.copy(n.Object3D.DefaultUp),
            this.updateMatrix(),
            this.target = new n.Object3D,
            this.shadow = new n.DirectionalLightShadow
        }
        ,
        n.DirectionalLight.prototype = Object.assign(Object.create(n.Light.prototype), {
            constructor: n.DirectionalLight,
            copy: function(t) {
                return n.Light.prototype.copy.call(this, t),
                this.target = t.target.clone(),
                this.shadow = t.shadow.clone(),
                this
            }
        }),
        n.DirectionalLightShadow = function(t) {
            n.LightShadow.call(this, new n.OrthographicCamera((-5),5,5,(-5),.5,500))
        }
        ,
        n.DirectionalLightShadow.prototype = Object.assign(Object.create(n.LightShadow.prototype), {
            constructor: n.DirectionalLightShadow
        }),
        n.HemisphereLight = function(t, e, i) {
            n.Light.call(this, t, i),
            this.type = "HemisphereLight",
            this.castShadow = void 0,
            this.position.copy(n.Object3D.DefaultUp),
            this.updateMatrix(),
            this.groundColor = new n.Color(e)
        }
        ,
        n.HemisphereLight.prototype = Object.assign(Object.create(n.Light.prototype), {
            constructor: n.HemisphereLight,
            copy: function(t) {
                return n.Light.prototype.copy.call(this, t),
                this.groundColor.copy(t.groundColor),
                this
            }
        }),
        n.PointLight = function(t, e, i, r) {
            n.Light.call(this, t, e),
            this.type = "PointLight",
            Object.defineProperty(this, "power", {
                get: function() {
                    return 4 * this.intensity * Math.PI
                },
                set: function(t) {
                    this.intensity = t / (4 * Math.PI)
                }
            }),
            this.distance = void 0 !== i ? i : 0,
            this.decay = void 0 !== r ? r : 1,
            this.shadow = new n.LightShadow(new n.PerspectiveCamera(90,1,.5,500))
        }
        ,
        n.PointLight.prototype = Object.assign(Object.create(n.Light.prototype), {
            constructor: n.PointLight,
            copy: function(t) {
                return n.Light.prototype.copy.call(this, t),
                this.distance = t.distance,
                this.decay = t.decay,
                this.shadow = t.shadow.clone(),
                this
            }
        }),
        n.SpotLight = function(t, e, i, r, a, o) {
            n.Light.call(this, t, e),
            this.type = "SpotLight",
            this.position.copy(n.Object3D.DefaultUp),
            this.updateMatrix(),
            this.target = new n.Object3D,
            Object.defineProperty(this, "power", {
                get: function() {
                    return this.intensity * Math.PI
                },
                set: function(t) {
                    this.intensity = t / Math.PI
                }
            }),
            this.distance = void 0 !== i ? i : 0,
            this.angle = void 0 !== r ? r : Math.PI / 3,
            this.penumbra = void 0 !== a ? a : 0,
            this.decay = void 0 !== o ? o : 1,
            this.shadow = new n.SpotLightShadow
        }
        ,
        n.SpotLight.prototype = Object.assign(Object.create(n.Light.prototype), {
            constructor: n.SpotLight,
            copy: function(t) {
                return n.Light.prototype.copy.call(this, t),
                this.distance = t.distance,
                this.angle = t.angle,
                this.penumbra = t.penumbra,
                this.decay = t.decay,
                this.target = t.target.clone(),
                this.shadow = t.shadow.clone(),
                this
            }
        }),
        n.SpotLightShadow = function() {
            n.LightShadow.call(this, new n.PerspectiveCamera(50,1,.5,500))
        }
        ,
        n.SpotLightShadow.prototype = Object.assign(Object.create(n.LightShadow.prototype), {
            constructor: n.SpotLightShadow,
            update: function(t) {
                var e = 2 * n.Math.RAD2DEG * t.angle
                  , i = this.mapSize.width / this.mapSize.height
                  , r = t.distance || 500
                  , a = this.camera;
                e === a.fov && i === a.aspect && r === a.far || (a.fov = e,
                a.aspect = i,
                a.far = r,
                a.updateProjectionMatrix())
            }
        }),
        n.AudioLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager
        }
        ,
        Object.assign(n.AudioLoader.prototype, {
            load: function(t, e, i, r) {
                var a = new n.XHRLoader(this.manager);
                a.setResponseType("arraybuffer"),
                a.load(t, function(t) {
                    var i = n.AudioContext;
                    i.decodeAudioData(t, function(t) {
                        e(t)
                    })
                }, i, r)
            }
        }),
        n.Cache = {
            enabled: !1,
            files: {},
            add: function(t, e) {
                this.enabled !== !1 && (this.files[t] = e)
            },
            get: function(t) {
                if (this.enabled !== !1)
                    return this.files[t]
            },
            remove: function(t) {
                delete this.files[t]
            },
            clear: function() {
                this.files = {}
            }
        },
        n.Loader = function() {
            this.onLoadStart = function() {}
            ,
            this.onLoadProgress = function() {}
            ,
            this.onLoadComplete = function() {}
        }
        ,
        n.Loader.prototype = {
            constructor: n.Loader,
            crossOrigin: void 0,
            extractUrlBase: function(t) {
                var e = t.split("/");
                return 1 === e.length ? "./" : (e.pop(),
                e.join("/") + "/")
            },
            initMaterials: function(t, e, i) {
                for (var n = [], r = 0; r < t.length; ++r)
                    n[r] = this.createMaterial(t[r], e, i);
                return n
            },
            createMaterial: function() {
                var t, e, i;
                return function(r, a, o) {
                    function s(t, i, r, s, h) {
                        var c, u = a + t, p = n.Loader.Handlers.get(u);
                        null !== p ? c = p.load(u) : (e.setCrossOrigin(o),
                        c = e.load(u)),
                        void 0 !== i && (c.repeat.fromArray(i),
                        1 !== i[0] && (c.wrapS = n.RepeatWrapping),
                        1 !== i[1] && (c.wrapT = n.RepeatWrapping)),
                        void 0 !== r && c.offset.fromArray(r),
                        void 0 !== s && ("repeat" === s[0] && (c.wrapS = n.RepeatWrapping),
                        "mirror" === s[0] && (c.wrapS = n.MirroredRepeatWrapping),
                        "repeat" === s[1] && (c.wrapT = n.RepeatWrapping),
                        "mirror" === s[1] && (c.wrapT = n.MirroredRepeatWrapping)),
                        void 0 !== h && (c.anisotropy = h);
                        var f = n.Math.generateUUID();
                        return l[f] = c,
                        f
                    }
                    void 0 === t && (t = new n.Color),
                    void 0 === e && (e = new n.TextureLoader),
                    void 0 === i && (i = new n.MaterialLoader);
                    var l = {}
                      , h = {
                        uuid: n.Math.generateUUID(),
                        type: "MeshLambertMaterial"
                    };
                    for (var c in r) {
                        var u = r[c];
                        switch (c) {
                        case "DbgColor":
                        case "DbgIndex":
                        case "opticalDensity":
                        case "illumination":
                            break;
                        case "DbgName":
                            h.name = u;
                            break;
                        case "blending":
                            h.blending = n[u];
                            break;
                        case "colorAmbient":
                        case "mapAmbient":
                            break;
                        case "colorDiffuse":
                            h.color = t.fromArray(u).getHex();
                            break;
                        case "colorSpecular":
                            h.specular = t.fromArray(u).getHex();
                            break;
                        case "colorEmissive":
                            h.emissive = t.fromArray(u).getHex();
                            break;
                        case "specularCoef":
                            h.shininess = u;
                            break;
                        case "shading":
                            "basic" === u.toLowerCase() && (h.type = "MeshBasicMaterial"),
                            "phong" === u.toLowerCase() && (h.type = "MeshPhongMaterial"),
                            "standard" === u.toLowerCase() && (h.type = "MeshStandardMaterial");
                            break;
                        case "mapDiffuse":
                            h.map = s(u, r.mapDiffuseRepeat, r.mapDiffuseOffset, r.mapDiffuseWrap, r.mapDiffuseAnisotropy);
                            break;
                        case "mapDiffuseRepeat":
                        case "mapDiffuseOffset":
                        case "mapDiffuseWrap":
                        case "mapDiffuseAnisotropy":
                            break;
                        case "mapEmissive":
                            h.emissiveMap = s(u, r.mapEmissiveRepeat, r.mapEmissiveOffset, r.mapEmissiveWrap, r.mapEmissiveAnisotropy);
                            break;
                        case "mapEmissiveRepeat":
                        case "mapEmissiveOffset":
                        case "mapEmissiveWrap":
                        case "mapEmissiveAnisotropy":
                            break;
                        case "mapLight":
                            h.lightMap = s(u, r.mapLightRepeat, r.mapLightOffset, r.mapLightWrap, r.mapLightAnisotropy);
                            break;
                        case "mapLightRepeat":
                        case "mapLightOffset":
                        case "mapLightWrap":
                        case "mapLightAnisotropy":
                            break;
                        case "mapAO":
                            h.aoMap = s(u, r.mapAORepeat, r.mapAOOffset, r.mapAOWrap, r.mapAOAnisotropy);
                            break;
                        case "mapAORepeat":
                        case "mapAOOffset":
                        case "mapAOWrap":
                        case "mapAOAnisotropy":
                            break;
                        case "mapBump":
                            h.bumpMap = s(u, r.mapBumpRepeat, r.mapBumpOffset, r.mapBumpWrap, r.mapBumpAnisotropy);
                            break;
                        case "mapBumpScale":
                            h.bumpScale = u;
                            break;
                        case "mapBumpRepeat":
                        case "mapBumpOffset":
                        case "mapBumpWrap":
                        case "mapBumpAnisotropy":
                            break;
                        case "mapNormal":
                            h.normalMap = s(u, r.mapNormalRepeat, r.mapNormalOffset, r.mapNormalWrap, r.mapNormalAnisotropy);
                            break;
                        case "mapNormalFactor":
                            h.normalScale = [u, u];
                            break;
                        case "mapNormalRepeat":
                        case "mapNormalOffset":
                        case "mapNormalWrap":
                        case "mapNormalAnisotropy":
                            break;
                        case "mapSpecular":
                            h.specularMap = s(u, r.mapSpecularRepeat, r.mapSpecularOffset, r.mapSpecularWrap, r.mapSpecularAnisotropy);
                            break;
                        case "mapSpecularRepeat":
                        case "mapSpecularOffset":
                        case "mapSpecularWrap":
                        case "mapSpecularAnisotropy":
                            break;
                        case "mapMetalness":
                            h.metalnessMap = s(u, r.mapMetalnessRepeat, r.mapMetalnessOffset, r.mapMetalnessWrap, r.mapMetalnessAnisotropy);
                            break;
                        case "mapMetalnessRepeat":
                        case "mapMetalnessOffset":
                        case "mapMetalnessWrap":
                        case "mapMetalnessAnisotropy":
                            break;
                        case "mapRoughness":
                            h.roughnessMap = s(u, r.mapRoughnessRepeat, r.mapRoughnessOffset, r.mapRoughnessWrap, r.mapRoughnessAnisotropy);
                            break;
                        case "mapRoughnessRepeat":
                        case "mapRoughnessOffset":
                        case "mapRoughnessWrap":
                        case "mapRoughnessAnisotropy":
                            break;
                        case "mapAlpha":
                            h.alphaMap = s(u, r.mapAlphaRepeat, r.mapAlphaOffset, r.mapAlphaWrap, r.mapAlphaAnisotropy);
                            break;
                        case "mapAlphaRepeat":
                        case "mapAlphaOffset":
                        case "mapAlphaWrap":
                        case "mapAlphaAnisotropy":
                            break;
                        case "flipSided":
                            h.side = n.BackSide;
                            break;
                        case "doubleSided":
                            h.side = n.DoubleSide;
                            break;
                        case "transparency":
                            h.opacity = u;
                            break;
                        case "depthTest":
                        case "depthWrite":
                        case "colorWrite":
                        case "opacity":
                        case "reflectivity":
                        case "transparent":
                        case "visible":
                        case "wireframe":
                            h[c] = u;
                            break;
                        case "vertexColors":
                            u === !0 && (h.vertexColors = n.VertexColors),
                            "face" === u && (h.vertexColors = n.FaceColors)
                        }
                    }
                    return "MeshBasicMaterial" === h.type && delete h.emissive,
                    "MeshPhongMaterial" !== h.type && delete h.specular,
                    h.opacity < 1 && (h.transparent = !0),
                    i.setTextures(l),
                    i.parse(h)
                }
            }()
        },
        n.Loader.Handlers = {
            handlers: [],
            add: function(t, e) {
                this.handlers.push(t, e)
            },
            get: function(t) {
                for (var e = this.handlers, i = 0, n = e.length; i < n; i += 2) {
                    var r = e[i]
                      , a = e[i + 1];
                    if (r.test(t))
                        return a
                }
                return null
            }
        },
        n.XHRLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager
        }
        ,
        Object.assign(n.XHRLoader.prototype, {
            load: function(t, e, i, r) {
                void 0 !== this.path && (t = this.path + t);
                var a = this
                  , o = n.Cache.get(t);
                if (void 0 !== o)
                    return a.manager.itemStart(t),
                    setTimeout(function() {
                        e && e(o),
                        a.manager.itemEnd(t)
                    }, 0),
                    o;
                var s = new XMLHttpRequest;
                return s.overrideMimeType("text/plain"),
                s.open("GET", t, !0),
                s.addEventListener("load", function(i) {
                    var o = i.target.response;
                    n.Cache.add(t, o),
                    200 === this.status ? (e && e(o),
                    a.manager.itemEnd(t)) : 0 === this.status ? (e && e(o),
                    a.manager.itemEnd(t)) : (r && r(i),
                    a.manager.itemError(t))
                }, !1),
                void 0 !== i && s.addEventListener("progress", function(t) {
                    i(t)
                }, !1),
                s.addEventListener("error", function(e) {
                    r && r(e),
                    a.manager.itemError(t)
                }, !1),
                void 0 !== this.responseType && (s.responseType = this.responseType),
                void 0 !== this.withCredentials && (s.withCredentials = this.withCredentials),
                s.send(null),
                a.manager.itemStart(t),
                s
            },
            setPath: function(t) {
                return this.path = t,
                this
            },
            setResponseType: function(t) {
                return this.responseType = t,
                this
            },
            setWithCredentials: function(t) {
                return this.withCredentials = t,
                this
            }
        }),
        n.FontLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager
        }
        ,
        Object.assign(n.FontLoader.prototype, {
            load: function(t, e, i, r) {
                var a = this
                  , o = new n.XHRLoader(this.manager);
                o.load(t, function(t) {
                    var i;
                    try {
                        i = JSON.parse(t)
                    } catch (n) {
                        i = JSON.parse(t.substring(65, t.length - 2))
                    }
                    var r = a.parse(i);
                    e && e(r)
                }, i, r)
            },
            parse: function(t) {
                return new n.Font(t)
            }
        }),
        n.ImageLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager
        }
        ,
        Object.assign(n.ImageLoader.prototype, {
            load: function(t, e, i, r) {
                var a = this
                  , o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                if (o.onload = function() {
                    URL.revokeObjectURL(o.src),
                    e && e(o),
                    a.manager.itemEnd(t)
                }
                ,
                0 === t.indexOf("data:"))
                    o.src = t;
                else {
                    var s = new n.XHRLoader;
                    s.setPath(this.path),
                    s.setResponseType("blob"),
                    s.load(t, function(t) {
                        o.src = URL.createObjectURL(t)
                    }, i, r)
                }
                return a.manager.itemStart(t),
                o
            },
            setCrossOrigin: function(t) {
                return this.crossOrigin = t,
                this
            },
            setPath: function(t) {
                return this.path = t,
                this
            }
        }),
        n.JSONLoader = function(t) {
            "boolean" == typeof t && (t = void 0),
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager,
            this.withCredentials = !1
        }
        ,
        Object.assign(n.JSONLoader.prototype, {
            load: function(t, e, i, r) {
                var a = this
                  , o = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : n.Loader.prototype.extractUrlBase(t)
                  , s = new n.XHRLoader(this.manager);
                s.setWithCredentials(this.withCredentials),
                s.load(t, function(t) {
                    var i = JSON.parse(t)
                      , n = i.metadata;
                    if (void 0 !== n) {
                        var r = n.type;
                        if (void 0 !== r) {
                            if ("object" === r.toLowerCase())
                                return;
                            if ("scene" === r.toLowerCase())
                                return
                        }
                    }
                    var s = a.parse(i, o);
                    e(s.geometry, s.materials)
                }, i, r)
            },
            setTexturePath: function(t) {
                this.texturePath = t
            },
            parse: function(t, e) {
                function i(e) {
                    function i(t, e) {
                        return t & 1 << e
                    }
                    var r, a, o, l, h, c, u, p, f, d, m, g, v, y, _, x, b, w, M, T, S, C, A, P, E, L, O, R = t.faces, D = t.vertices, I = t.normals, k = t.colors, N = 0;
                    if (void 0 !== t.uvs) {
                        for (r = 0; r < t.uvs.length; r++)
                            t.uvs[r].length && N++;
                        for (r = 0; r < N; r++)
                            s.faceVertexUvs[r] = []
                    }
                    for (l = 0,
                    h = D.length; l < h; )
                        w = new n.Vector3,
                        w.x = D[l++] * e,
                        w.y = D[l++] * e,
                        w.z = D[l++] * e,
                        s.vertices.push(w);
                    for (l = 0,
                    h = R.length; l < h; )
                        if (d = R[l++],
                        m = i(d, 0),
                        g = i(d, 1),
                        v = i(d, 3),
                        y = i(d, 4),
                        _ = i(d, 5),
                        x = i(d, 6),
                        b = i(d, 7),
                        m) {
                            if (T = new n.Face3,
                            T.a = R[l],
                            T.b = R[l + 1],
                            T.c = R[l + 3],
                            S = new n.Face3,
                            S.a = R[l + 1],
                            S.b = R[l + 2],
                            S.c = R[l + 3],
                            l += 4,
                            g && (f = R[l++],
                            T.materialIndex = f,
                            S.materialIndex = f),
                            o = s.faces.length,
                            v)
                                for (r = 0; r < N; r++)
                                    for (P = t.uvs[r],
                                    s.faceVertexUvs[r][o] = [],
                                    s.faceVertexUvs[r][o + 1] = [],
                                    a = 0; a < 4; a++)
                                        p = R[l++],
                                        L = P[2 * p],
                                        O = P[2 * p + 1],
                                        E = new n.Vector2(L,O),
                                        2 !== a && s.faceVertexUvs[r][o].push(E),
                                        0 !== a && s.faceVertexUvs[r][o + 1].push(E);
                            if (y && (u = 3 * R[l++],
                            T.normal.set(I[u++], I[u++], I[u]),
                            S.normal.copy(T.normal)),
                            _)
                                for (r = 0; r < 4; r++)
                                    u = 3 * R[l++],
                                    A = new n.Vector3(I[u++],I[u++],I[u]),
                                    2 !== r && T.vertexNormals.push(A),
                                    0 !== r && S.vertexNormals.push(A);
                            if (x && (c = R[l++],
                            C = k[c],
                            T.color.setHex(C),
                            S.color.setHex(C)),
                            b)
                                for (r = 0; r < 4; r++)
                                    c = R[l++],
                                    C = k[c],
                                    2 !== r && T.vertexColors.push(new n.Color(C)),
                                    0 !== r && S.vertexColors.push(new n.Color(C));
                            s.faces.push(T),
                            s.faces.push(S)
                        } else {
                            if (M = new n.Face3,
                            M.a = R[l++],
                            M.b = R[l++],
                            M.c = R[l++],
                            g && (f = R[l++],
                            M.materialIndex = f),
                            o = s.faces.length,
                            v)
                                for (r = 0; r < N; r++)
                                    for (P = t.uvs[r],
                                    s.faceVertexUvs[r][o] = [],
                                    a = 0; a < 3; a++)
                                        p = R[l++],
                                        L = P[2 * p],
                                        O = P[2 * p + 1],
                                        E = new n.Vector2(L,O),
                                        s.faceVertexUvs[r][o].push(E);
                            if (y && (u = 3 * R[l++],
                            M.normal.set(I[u++], I[u++], I[u])),
                            _)
                                for (r = 0; r < 3; r++)
                                    u = 3 * R[l++],
                                    A = new n.Vector3(I[u++],I[u++],I[u]),
                                    M.vertexNormals.push(A);
                            if (x && (c = R[l++],
                            M.color.setHex(k[c])),
                            b)
                                for (r = 0; r < 3; r++)
                                    c = R[l++],
                                    M.vertexColors.push(new n.Color(k[c]));
                            s.faces.push(M)
                        }
                }
                function r() {
                    var e = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                    if (t.skinWeights)
                        for (var i = 0, r = t.skinWeights.length; i < r; i += e) {
                            var a = t.skinWeights[i]
                              , o = e > 1 ? t.skinWeights[i + 1] : 0
                              , l = e > 2 ? t.skinWeights[i + 2] : 0
                              , h = e > 3 ? t.skinWeights[i + 3] : 0;
                            s.skinWeights.push(new n.Vector4(a,o,l,h))
                        }
                    if (t.skinIndices)
                        for (var i = 0, r = t.skinIndices.length; i < r; i += e) {
                            var c = t.skinIndices[i]
                              , u = e > 1 ? t.skinIndices[i + 1] : 0
                              , p = e > 2 ? t.skinIndices[i + 2] : 0
                              , f = e > 3 ? t.skinIndices[i + 3] : 0;
                            s.skinIndices.push(new n.Vector4(c,u,p,f))
                        }
                    s.bones = t.bones,
                    s.bones && s.bones.length > 0 && (s.skinWeights.length !== s.skinIndices.length || s.skinIndices.length !== s.vertices.length)
                }
                function a(e) {
                    if (void 0 !== t.morphTargets)
                        for (var i = 0, r = t.morphTargets.length; i < r; i++) {
                            s.morphTargets[i] = {},
                            s.morphTargets[i].name = t.morphTargets[i].name,
                            s.morphTargets[i].vertices = [];
                            for (var a = s.morphTargets[i].vertices, o = t.morphTargets[i].vertices, l = 0, h = o.length; l < h; l += 3) {
                                var c = new n.Vector3;
                                c.x = o[l] * e,
                                c.y = o[l + 1] * e,
                                c.z = o[l + 2] * e,
                                a.push(c)
                            }
                        }
                    if (void 0 !== t.morphColors && t.morphColors.length > 0)
                        for (var u = s.faces, p = t.morphColors[0].colors, i = 0, r = u.length; i < r; i++)
                            u[i].color.fromArray(p, 3 * i)
                }
                function o() {
                    var e = []
                      , i = [];
                    void 0 !== t.animation && i.push(t.animation),
                    void 0 !== t.animations && (t.animations.length ? i = i.concat(t.animations) : i.push(t.animations));
                    for (var r = 0; r < i.length; r++) {
                        var a = n.AnimationClip.parseAnimation(i[r], s.bones);
                        a && e.push(a)
                    }
                    if (s.morphTargets) {
                        var o = n.AnimationClip.CreateClipsFromMorphTargetSequences(s.morphTargets, 10);
                        e = e.concat(o)
                    }
                    e.length > 0 && (s.animations = e)
                }
                var s = new n.Geometry
                  , l = void 0 !== t.scale ? 1 / t.scale : 1;
                if (i(l),
                r(),
                a(l),
                o(),
                s.computeFaceNormals(),
                s.computeBoundingSphere(),
                void 0 === t.materials || 0 === t.materials.length)
                    return {
                        geometry: s
                    };
                var h = n.Loader.prototype.initMaterials(t.materials, e, this.crossOrigin);
                return {
                    geometry: s,
                    materials: h
                }
            }
        }),
        n.LoadingManager = function(t, e, i) {
            var n = this
              , r = !1
              , a = 0
              , o = 0;
            this.onStart = void 0,
            this.onLoad = t,
            this.onProgress = e,
            this.onError = i,
            this.itemStart = function(t) {
                o++,
                r === !1 && void 0 !== n.onStart && n.onStart(t, a, o),
                r = !0
            }
            ,
            this.itemEnd = function(t) {
                a++,
                void 0 !== n.onProgress && n.onProgress(t, a, o),
                a === o && (r = !1,
                void 0 !== n.onLoad && n.onLoad())
            }
            ,
            this.itemError = function(t) {
                void 0 !== n.onError && n.onError(t)
            }
        }
        ,
        n.DefaultLoadingManager = new n.LoadingManager,
        n.BufferGeometryLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager
        }
        ,
        Object.assign(n.BufferGeometryLoader.prototype, {
            load: function(t, e, i, r) {
                var a = this
                  , o = new n.XHRLoader(a.manager);
                o.load(t, function(t) {
                    e(a.parse(JSON.parse(t)))
                }, i, r)
            },
            parse: function(t) {
                var e = new n.BufferGeometry
                  , i = t.data.index
                  , r = {
                    Int8Array: Int8Array,
                    Uint8Array: Uint8Array,
                    Uint8ClampedArray: Uint8ClampedArray,
                    Int16Array: Int16Array,
                    Uint16Array: Uint16Array,
                    Int32Array: Int32Array,
                    Uint32Array: Uint32Array,
                    Float32Array: Float32Array,
                    Float64Array: Float64Array
                };
                if (void 0 !== i) {
                    var a = new r[i.type](i.array);
                    e.setIndex(new n.BufferAttribute(a,1))
                }
                var o = t.data.attributes;
                for (var s in o) {
                    var l = o[s]
                      , a = new r[l.type](l.array);
                    e.addAttribute(s, new n.BufferAttribute(a,l.itemSize,l.normalized))
                }
                var h = t.data.groups || t.data.drawcalls || t.data.offsets;
                if (void 0 !== h)
                    for (var c = 0, u = h.length; c !== u; ++c) {
                        var p = h[c];
                        e.addGroup(p.start, p.count, p.materialIndex)
                    }
                var f = t.data.boundingSphere;
                if (void 0 !== f) {
                    var d = new n.Vector3;
                    void 0 !== f.center && d.fromArray(f.center),
                    e.boundingSphere = new n.Sphere(d,f.radius)
                }
                return e
            }
        }),
        n.MaterialLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager,
            this.textures = {}
        }
        ,
        Object.assign(n.MaterialLoader.prototype, {
            load: function(t, e, i, r) {
                var a = this
                  , o = new n.XHRLoader(a.manager);
                o.load(t, function(t) {
                    e(a.parse(JSON.parse(t)))
                }, i, r)
            },
            setTextures: function(t) {
                this.textures = t
            },
            getTexture: function(t) {
                var e = this.textures;
                return void 0 === e[t],
                e[t]
            },
            parse: function(t) {
                var e = new n[t.type];
                if (void 0 !== t.uuid && (e.uuid = t.uuid),
                void 0 !== t.name && (e.name = t.name),
                void 0 !== t.color && e.color.setHex(t.color),
                void 0 !== t.roughness && (e.roughness = t.roughness),
                void 0 !== t.metalness && (e.metalness = t.metalness),
                void 0 !== t.emissive && e.emissive.setHex(t.emissive),
                void 0 !== t.specular && e.specular.setHex(t.specular),
                void 0 !== t.shininess && (e.shininess = t.shininess),
                void 0 !== t.uniforms && (e.uniforms = t.uniforms),
                void 0 !== t.vertexShader && (e.vertexShader = t.vertexShader),
                void 0 !== t.fragmentShader && (e.fragmentShader = t.fragmentShader),
                void 0 !== t.vertexColors && (e.vertexColors = t.vertexColors),
                void 0 !== t.shading && (e.shading = t.shading),
                void 0 !== t.blending && (e.blending = t.blending),
                void 0 !== t.side && (e.side = t.side),
                void 0 !== t.opacity && (e.opacity = t.opacity),
                void 0 !== t.transparent && (e.transparent = t.transparent),
                void 0 !== t.alphaTest && (e.alphaTest = t.alphaTest),
                void 0 !== t.depthTest && (e.depthTest = t.depthTest),
                void 0 !== t.depthWrite && (e.depthWrite = t.depthWrite),
                void 0 !== t.colorWrite && (e.colorWrite = t.colorWrite),
                void 0 !== t.wireframe && (e.wireframe = t.wireframe),
                void 0 !== t.wireframeLinewidth && (e.wireframeLinewidth = t.wireframeLinewidth),
                void 0 !== t.size && (e.size = t.size),
                void 0 !== t.sizeAttenuation && (e.sizeAttenuation = t.sizeAttenuation),
                void 0 !== t.map && (e.map = this.getTexture(t.map)),
                void 0 !== t.alphaMap && (e.alphaMap = this.getTexture(t.alphaMap),
                e.transparent = !0),
                void 0 !== t.bumpMap && (e.bumpMap = this.getTexture(t.bumpMap)),
                void 0 !== t.bumpScale && (e.bumpScale = t.bumpScale),
                void 0 !== t.normalMap && (e.normalMap = this.getTexture(t.normalMap)),
                void 0 !== t.normalScale) {
                    var i = t.normalScale;
                    Array.isArray(i) === !1 && (i = [i, i]),
                    e.normalScale = (new n.Vector2).fromArray(i)
                }
                if (void 0 !== t.displacementMap && (e.displacementMap = this.getTexture(t.displacementMap)),
                void 0 !== t.displacementScale && (e.displacementScale = t.displacementScale),
                void 0 !== t.displacementBias && (e.displacementBias = t.displacementBias),
                void 0 !== t.roughnessMap && (e.roughnessMap = this.getTexture(t.roughnessMap)),
                void 0 !== t.metalnessMap && (e.metalnessMap = this.getTexture(t.metalnessMap)),
                void 0 !== t.emissiveMap && (e.emissiveMap = this.getTexture(t.emissiveMap)),
                void 0 !== t.emissiveIntensity && (e.emissiveIntensity = t.emissiveIntensity),
                void 0 !== t.specularMap && (e.specularMap = this.getTexture(t.specularMap)),
                void 0 !== t.envMap && (e.envMap = this.getTexture(t.envMap),
                e.combine = n.MultiplyOperation),
                void 0 !== t.reflectivity && (e.reflectivity = t.reflectivity),
                void 0 !== t.lightMap && (e.lightMap = this.getTexture(t.lightMap)),
                void 0 !== t.lightMapIntensity && (e.lightMapIntensity = t.lightMapIntensity),
                void 0 !== t.aoMap && (e.aoMap = this.getTexture(t.aoMap)),
                void 0 !== t.aoMapIntensity && (e.aoMapIntensity = t.aoMapIntensity),
                void 0 !== t.materials)
                    for (var r = 0, a = t.materials.length; r < a; r++)
                        e.materials.push(this.parse(t.materials[r]));
                return e
            }
        }),
        n.ObjectLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager,
            this.texturePath = ""
        }
        ,
        Object.assign(n.ObjectLoader.prototype, {
            load: function(t, e, i, r) {
                "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
                var a = this
                  , o = new n.XHRLoader(a.manager);
                o.load(t, function(t) {
                    a.parse(JSON.parse(t), e)
                }, i, r)
            },
            setTexturePath: function(t) {
                this.texturePath = t
            },
            setCrossOrigin: function(t) {
                this.crossOrigin = t
            },
            parse: function(t, e) {
                var i = this.parseGeometries(t.geometries)
                  , n = this.parseImages(t.images, function() {
                    void 0 !== e && e(o)
                })
                  , r = this.parseTextures(t.textures, n)
                  , a = this.parseMaterials(t.materials, r)
                  , o = this.parseObject(t.object, i, a);
                return t.animations && (o.animations = this.parseAnimations(t.animations)),
                void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(o),
                o
            },
            parseGeometries: function(t) {
                var e = {};
                if (void 0 !== t)
                    for (var i = new n.JSONLoader, r = new n.BufferGeometryLoader, a = 0, o = t.length; a < o; a++) {
                        var s, l = t[a];
                        switch (l.type) {
                        case "PlaneGeometry":
                        case "PlaneBufferGeometry":
                            s = new n[l.type](l.width,l.height,l.widthSegments,l.heightSegments);
                            break;
                        case "BoxGeometry":
                        case "BoxBufferGeometry":
                        case "CubeGeometry":
                            s = new n[l.type](l.width,l.height,l.depth,l.widthSegments,l.heightSegments,l.depthSegments);
                            break;
                        case "CircleGeometry":
                        case "CircleBufferGeometry":
                            s = new n[l.type](l.radius,l.segments,l.thetaStart,l.thetaLength);
                            break;
                        case "CylinderGeometry":
                        case "CylinderBufferGeometry":
                            s = new n[l.type](l.radiusTop,l.radiusBottom,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);
                            break;
                        case "ConeGeometry":
                        case "ConeBufferGeometry":
                            s = new n[l.type](l.radius,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);
                            break;
                        case "SphereGeometry":
                        case "SphereBufferGeometry":
                            s = new n[l.type](l.radius,l.widthSegments,l.heightSegments,l.phiStart,l.phiLength,l.thetaStart,l.thetaLength);
                            break;
                        case "DodecahedronGeometry":
                        case "IcosahedronGeometry":
                        case "OctahedronGeometry":
                        case "TetrahedronGeometry":
                            s = new n[l.type](l.radius,l.detail);
                            break;
                        case "RingGeometry":
                        case "RingBufferGeometry":
                            s = new n[l.type](l.innerRadius,l.outerRadius,l.thetaSegments,l.phiSegments,l.thetaStart,l.thetaLength);
                            break;
                        case "TorusGeometry":
                        case "TorusBufferGeometry":
                            s = new n[l.type](l.radius,l.tube,l.radialSegments,l.tubularSegments,l.arc);
                            break;
                        case "TorusKnotGeometry":
                        case "TorusKnotBufferGeometry":
                            s = new n[l.type](l.radius,l.tube,l.tubularSegments,l.radialSegments,l.p,l.q);
                            break;
                        case "LatheGeometry":
                        case "LatheBufferGeometry":
                            s = new n[l.type](l.points,l.segments,l.phiStart,l.phiLength);
                            break;
                        case "BufferGeometry":
                            s = r.parse(l);
                            break;
                        case "Geometry":
                            s = i.parse(l.data, this.texturePath).geometry;
                            break;
                        default:
                            continue
                        }
                        s.uuid = l.uuid,
                        void 0 !== l.name && (s.name = l.name),
                        e[l.uuid] = s
                    }
                return e
            },
            parseMaterials: function(t, e) {
                var i = {};
                if (void 0 !== t) {
                    var r = new n.MaterialLoader;
                    r.setTextures(e);
                    for (var a = 0, o = t.length; a < o; a++) {
                        var s = r.parse(t[a]);
                        i[s.uuid] = s
                    }
                }
                return i
            },
            parseAnimations: function(t) {
                for (var e = [], i = 0; i < t.length; i++) {
                    var r = n.AnimationClip.parse(t[i]);
                    e.push(r)
                }
                return e
            },
            parseImages: function(t, e) {
                function i(t) {
                    return r.manager.itemStart(t),
                    s.load(t, function() {
                        r.manager.itemEnd(t)
                    })
                }
                var r = this
                  , a = {};
                if (void 0 !== t && t.length > 0) {
                    var o = new n.LoadingManager(e)
                      , s = new n.ImageLoader(o);
                    s.setCrossOrigin(this.crossOrigin);
                    for (var l = 0, h = t.length; l < h; l++) {
                        var c = t[l]
                          , u = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : r.texturePath + c.url;
                        a[c.uuid] = i(u)
                    }
                }
                return a
            },
            parseTextures: function(t, e) {
                function i(t) {
                    return "number" == typeof t ? t : n[t]
                }
                var r = {};
                if (void 0 !== t)
                    for (var a = 0, o = t.length; a < o; a++) {
                        var s = t[a];
                        void 0 === s.image,
                        void 0 === e[s.image];
                        var l = new n.Texture(e[s.image]);
                        l.needsUpdate = !0,
                        l.uuid = s.uuid,
                        void 0 !== s.name && (l.name = s.name),
                        void 0 !== s.mapping && (l.mapping = i(s.mapping)),
                        void 0 !== s.offset && l.offset.fromArray(s.offset),
                        void 0 !== s.repeat && l.repeat.fromArray(s.repeat),
                        void 0 !== s.wrap && (l.wrapS = i(s.wrap[0]),
                        l.wrapT = i(s.wrap[1])),
                        void 0 !== s.minFilter && (l.minFilter = i(s.minFilter)),
                        void 0 !== s.magFilter && (l.magFilter = i(s.magFilter)),
                        void 0 !== s.anisotropy && (l.anisotropy = s.anisotropy),
                        void 0 !== s.flipY && (l.flipY = s.flipY),
                        r[s.uuid] = l
                    }
                return r
            },
            parseObject: function() {
                var t = new n.Matrix4;
                return function(e, i, r) {
                    function a(t) {
                        return void 0 === i[t],
                        i[t]
                    }
                    function o(t) {
                        if (void 0 !== t)
                            return void 0 === r[t],
                            r[t]
                    }
                    var s;
                    switch (e.type) {
                    case "Scene":
                        s = new n.Scene;
                        break;
                    case "PerspectiveCamera":
                        s = new n.PerspectiveCamera(e.fov,e.aspect,e.near,e.far),
                        void 0 !== e.focus && (s.focus = e.focus),
                        void 0 !== e.zoom && (s.zoom = e.zoom),
                        void 0 !== e.filmGauge && (s.filmGauge = e.filmGauge),
                        void 0 !== e.filmOffset && (s.filmOffset = e.filmOffset),
                        void 0 !== e.view && (s.view = Object.assign({}, e.view));
                        break;
                    case "OrthographicCamera":
                        s = new n.OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far);
                        break;
                    case "AmbientLight":
                        s = new n.AmbientLight(e.color,e.intensity);
                        break;
                    case "DirectionalLight":
                        s = new n.DirectionalLight(e.color,e.intensity);
                        break;
                    case "PointLight":
                        s = new n.PointLight(e.color,e.intensity,e.distance,e.decay);
                        break;
                    case "SpotLight":
                        s = new n.SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);
                        break;
                    case "HemisphereLight":
                        s = new n.HemisphereLight(e.color,e.groundColor,e.intensity);
                        break;
                    case "Mesh":
                        var l = a(e.geometry)
                          , h = o(e.material);
                        s = l.bones && l.bones.length > 0 ? new n.SkinnedMesh(l,h) : new n.Mesh(l,h);
                        break;
                    case "LOD":
                        s = new n.LOD;
                        break;
                    case "Line":
                        s = new n.Line(a(e.geometry),o(e.material),e.mode);
                        break;
                    case "PointCloud":
                    case "Points":
                        s = new n.Points(a(e.geometry),o(e.material));
                        break;
                    case "Sprite":
                        s = new n.Sprite(o(e.material));
                        break;
                    case "Group":
                        s = new n.Group;
                        break;
                    default:
                        s = new n.Object3D
                    }
                    if (s.uuid = e.uuid,
                    void 0 !== e.name && (s.name = e.name),
                    void 0 !== e.matrix ? (t.fromArray(e.matrix),
                    t.decompose(s.position, s.quaternion, s.scale)) : (void 0 !== e.position && s.position.fromArray(e.position),
                    void 0 !== e.rotation && s.rotation.fromArray(e.rotation),
                    void 0 !== e.scale && s.scale.fromArray(e.scale)),
                    void 0 !== e.castShadow && (s.castShadow = e.castShadow),
                    void 0 !== e.receiveShadow && (s.receiveShadow = e.receiveShadow),
                    void 0 !== e.visible && (s.visible = e.visible),
                    void 0 !== e.userData && (s.userData = e.userData),
                    void 0 !== e.children)
                        for (var c in e.children)
                            s.add(this.parseObject(e.children[c], i, r));
                    if ("LOD" === e.type)
                        for (var u = e.levels, p = 0; p < u.length; p++) {
                            var f = u[p]
                              , c = s.getObjectByProperty("uuid", f.object);
                            void 0 !== c && s.addLevel(c, f.distance)
                        }
                    return s
                }
            }()
        }),
        n.TextureLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager
        }
        ,
        Object.assign(n.TextureLoader.prototype, {
            load: function(t, e, i, r) {
                var a = new n.Texture
                  , o = new n.ImageLoader(this.manager);
                return o.setCrossOrigin(this.crossOrigin),
                o.setPath(this.path),
                o.load(t, function(i) {
                    var r = t.search(/\.(jpg|jpeg)$/) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                    a.format = r ? n.RGBFormat : n.RGBAFormat,
                    a.image = i,
                    a.needsUpdate = !0,
                    void 0 !== e && e(a)
                }, i, r),
                a
            },
            setCrossOrigin: function(t) {
                return this.crossOrigin = t,
                this
            },
            setPath: function(t) {
                return this.path = t,
                this
            }
        }),
        n.CubeTextureLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager
        }
        ,
        Object.assign(n.CubeTextureLoader.prototype, {
            load: function(t, e, i, r) {
                function a(i) {
                    s.load(t[i], function(t) {
                        o.images[i] = t,
                        l++,
                        6 === l && (o.needsUpdate = !0,
                        e && e(o))
                    }, void 0, r)
                }
                var o = new n.CubeTexture
                  , s = new n.ImageLoader(this.manager);
                s.setCrossOrigin(this.crossOrigin),
                s.setPath(this.path);
                for (var l = 0, h = 0; h < t.length; ++h)
                    a(h);
                return o
            },
            setCrossOrigin: function(t) {
                return this.crossOrigin = t,
                this
            },
            setPath: function(t) {
                return this.path = t,
                this
            }
        }),
        n.DataTextureLoader = n.BinaryTextureLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager,
            this._parser = null
        }
        ,
        Object.assign(n.BinaryTextureLoader.prototype, {
            load: function(t, e, i, r) {
                var a = this
                  , o = new n.DataTexture
                  , s = new n.XHRLoader(this.manager);
                return s.setResponseType("arraybuffer"),
                s.load(t, function(t) {
                    var i = a._parser(t);
                    i && (void 0 !== i.image ? o.image = i.image : void 0 !== i.data && (o.image.width = i.width,
                    o.image.height = i.height,
                    o.image.data = i.data),
                    o.wrapS = void 0 !== i.wrapS ? i.wrapS : n.ClampToEdgeWrapping,
                    o.wrapT = void 0 !== i.wrapT ? i.wrapT : n.ClampToEdgeWrapping,
                    o.magFilter = void 0 !== i.magFilter ? i.magFilter : n.LinearFilter,
                    o.minFilter = void 0 !== i.minFilter ? i.minFilter : n.LinearMipMapLinearFilter,
                    o.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1,
                    void 0 !== i.format && (o.format = i.format),
                    void 0 !== i.type && (o.type = i.type),
                    void 0 !== i.mipmaps && (o.mipmaps = i.mipmaps),
                    1 === i.mipmapCount && (o.minFilter = n.LinearFilter),
                    o.needsUpdate = !0,
                    e && e(o, i))
                }, i, r),
                o
            }
        }),
        n.CompressedTextureLoader = function(t) {
            this.manager = void 0 !== t ? t : n.DefaultLoadingManager,
            this._parser = null
        }
        ,
        Object.assign(n.CompressedTextureLoader.prototype, {
            load: function(t, e, i, r) {
                function a(a) {
                    h.load(t[a], function(t) {
                        var i = o._parser(t, !0);
                        s[a] = {
                            width: i.width,
                            height: i.height,
                            format: i.format,
                            mipmaps: i.mipmaps
                        },
                        c += 1,
                        6 === c && (1 === i.mipmapCount && (l.minFilter = n.LinearFilter),
                        l.format = i.format,
                        l.needsUpdate = !0,
                        e && e(l))
                    }, i, r)
                }
                var o = this
                  , s = []
                  , l = new n.CompressedTexture;
                l.image = s;
                var h = new n.XHRLoader(this.manager);
                if (h.setPath(this.path),
                h.setResponseType("arraybuffer"),
                Array.isArray(t))
                    for (var c = 0, u = 0, p = t.length; u < p; ++u)
                        a(u);
                else
                    h.load(t, function(t) {
                        var i = o._parser(t, !0);
                        if (i.isCubemap)
                            for (var r = i.mipmaps.length / i.mipmapCount, a = 0; a < r; a++) {
                                s[a] = {
                                    mipmaps: []
                                };
                                for (var h = 0; h < i.mipmapCount; h++)
                                    s[a].mipmaps.push(i.mipmaps[a * i.mipmapCount + h]),
                                    s[a].format = i.format,
                                    s[a].width = i.width,
                                    s[a].height = i.height
                            }
                        else
                            l.image.width = i.width,
                            l.image.height = i.height,
                            l.mipmaps = i.mipmaps;
                        1 === i.mipmapCount && (l.minFilter = n.LinearFilter),
                        l.format = i.format,
                        l.needsUpdate = !0,
                        e && e(l)
                    }, i, r);
                return l
            },
            setPath: function(t) {
                return this.path = t,
                this
            }
        }),
        n.Material = function() {
            Object.defineProperty(this, "id", {
                value: n.MaterialIdCount++
            }),
            this.uuid = n.Math.generateUUID(),
            this.name = "",
            this.type = "Material",
            this.fog = !0,
            this.lights = !0,
            this.blending = n.NormalBlending,
            this.side = n.FrontSide,
            this.shading = n.SmoothShading,
            this.vertexColors = n.NoColors,
            this.opacity = 1,
            this.transparent = !1,
            this.blendSrc = n.SrcAlphaFactor,
            this.blendDst = n.OneMinusSrcAlphaFactor,
            this.blendEquation = n.AddEquation,
            this.blendSrcAlpha = null,
            this.blendDstAlpha = null,
            this.blendEquationAlpha = null,
            this.depthFunc = n.LessEqualDepth,
            this.depthTest = !0,
            this.depthWrite = !0,
            this.clippingPlanes = null,
            this.clipShadows = !1,
            this.colorWrite = !0,
            this.precision = null,
            this.polygonOffset = !1,
            this.polygonOffsetFactor = 0,
            this.polygonOffsetUnits = 0,
            this.alphaTest = 0,
            this.premultipliedAlpha = !1,
            this.overdraw = 0,
            this.visible = !0,
            this._needsUpdate = !0
        }
        ,
        n.Material.prototype = {
            constructor: n.Material,
            get needsUpdate() {
                return this._needsUpdate
            },
            set needsUpdate(t) {
                t === !0 && this.update(),
                this._needsUpdate = t
            },
            setValues: function(t) {
                if (void 0 !== t)
                    for (var e in t) {
                        var i = t[e];
                        if (void 0 !== i) {
                            var r = this[e];
                            void 0 !== r && (r instanceof n.Color ? r.set(i) : r instanceof n.Vector3 && i instanceof n.Vector3 ? r.copy(i) : "overdraw" === e ? this[e] = Number(i) : this[e] = i)
                        }
                    }
            },
            toJSON: function(t) {
                function e(t) {
                    var e = [];
                    for (var i in t) {
                        var n = t[i];
                        delete n.metadata,
                        e.push(n)
                    }
                    return e
                }
                var i = void 0 === t;
                i && (t = {
                    textures: {},
                    images: {}
                });
                var r = {
                    metadata: {
                        version: 4.4,
                        type: "Material",
                        generator: "Material.toJSON"
                    }
                };
                if (r.uuid = this.uuid,
                r.type = this.type,
                "" !== this.name && (r.name = this.name),
                this.color instanceof n.Color && (r.color = this.color.getHex()),
                void 0 !== this.roughness && (r.roughness = this.roughness),
                void 0 !== this.metalness && (r.metalness = this.metalness),
                this.emissive instanceof n.Color && (r.emissive = this.emissive.getHex()),
                this.specular instanceof n.Color && (r.specular = this.specular.getHex()),
                void 0 !== this.shininess && (r.shininess = this.shininess),
                this.map instanceof n.Texture && (r.map = this.map.toJSON(t).uuid),
                this.alphaMap instanceof n.Texture && (r.alphaMap = this.alphaMap.toJSON(t).uuid),
                this.lightMap instanceof n.Texture && (r.lightMap = this.lightMap.toJSON(t).uuid),
                this.bumpMap instanceof n.Texture && (r.bumpMap = this.bumpMap.toJSON(t).uuid,
                r.bumpScale = this.bumpScale),
                this.normalMap instanceof n.Texture && (r.normalMap = this.normalMap.toJSON(t).uuid,
                r.normalScale = this.normalScale.toArray()),
                this.displacementMap instanceof n.Texture && (r.displacementMap = this.displacementMap.toJSON(t).uuid,
                r.displacementScale = this.displacementScale,
                r.displacementBias = this.displacementBias),
                this.roughnessMap instanceof n.Texture && (r.roughnessMap = this.roughnessMap.toJSON(t).uuid),
                this.metalnessMap instanceof n.Texture && (r.metalnessMap = this.metalnessMap.toJSON(t).uuid),
                this.emissiveMap instanceof n.Texture && (r.emissiveMap = this.emissiveMap.toJSON(t).uuid),
                this.specularMap instanceof n.Texture && (r.specularMap = this.specularMap.toJSON(t).uuid),
                this.envMap instanceof n.Texture && (r.envMap = this.envMap.toJSON(t).uuid,
                r.reflectivity = this.reflectivity),
                void 0 !== this.size && (r.size = this.size),
                void 0 !== this.sizeAttenuation && (r.sizeAttenuation = this.sizeAttenuation),
                this.blending !== n.NormalBlending && (r.blending = this.blending),
                this.shading !== n.SmoothShading && (r.shading = this.shading),
                this.side !== n.FrontSide && (r.side = this.side),
                this.vertexColors !== n.NoColors && (r.vertexColors = this.vertexColors),
                this.opacity < 1 && (r.opacity = this.opacity),
                this.transparent === !0 && (r.transparent = this.transparent),
                this.alphaTest > 0 && (r.alphaTest = this.alphaTest),
                this.premultipliedAlpha === !0 && (r.premultipliedAlpha = this.premultipliedAlpha),
                this.wireframe === !0 && (r.wireframe = this.wireframe),
                this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth),
                i) {
                    var a = e(t.textures)
                      , o = e(t.images);
                    a.length > 0 && (r.textures = a),
                    o.length > 0 && (r.images = o)
                }
                return r
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                this.name = t.name,
                this.fog = t.fog,
                this.lights = t.lights,
                this.blending = t.blending,
                this.side = t.side,
                this.shading = t.shading,
                this.vertexColors = t.vertexColors,
                this.opacity = t.opacity,
                this.transparent = t.transparent,
                this.blendSrc = t.blendSrc,
                this.blendDst = t.blendDst,
                this.blendEquation = t.blendEquation,
                this.blendSrcAlpha = t.blendSrcAlpha,
                this.blendDstAlpha = t.blendDstAlpha,
                this.blendEquationAlpha = t.blendEquationAlpha,
                this.depthFunc = t.depthFunc,
                this.depthTest = t.depthTest,
                this.depthWrite = t.depthWrite,
                this.colorWrite = t.colorWrite,
                this.precision = t.precision,
                this.polygonOffset = t.polygonOffset,
                this.polygonOffsetFactor = t.polygonOffsetFactor,
                this.polygonOffsetUnits = t.polygonOffsetUnits,
                this.alphaTest = t.alphaTest,
                this.premultipliedAlpha = t.premultipliedAlpha,
                this.overdraw = t.overdraw,
                this.visible = t.visible,
                this.clipShadows = t.clipShadows;
                var e = t.clippingPlanes
                  , i = null;
                if (null !== e) {
                    var n = e.length;
                    i = new Array(n);
                    for (var r = 0; r !== n; ++r)
                        i[r] = e[r].clone()
                }
                return this.clippingPlanes = i,
                this
            },
            update: function() {
                this.dispatchEvent({
                    type: "update"
                })
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        },
        Object.assign(n.Material.prototype, n.EventDispatcher.prototype),
        n.MaterialIdCount = 0,
        n.LineBasicMaterial = function(t) {
            n.Material.call(this),
            this.type = "LineBasicMaterial",
            this.color = new n.Color(16777215),
            this.linewidth = 1,
            this.linecap = "round",
            this.linejoin = "round",
            this.lights = !1,
            this.setValues(t)
        }
        ,
        n.LineBasicMaterial.prototype = Object.create(n.Material.prototype),
        n.LineBasicMaterial.prototype.constructor = n.LineBasicMaterial,
        n.LineBasicMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.linewidth = t.linewidth,
            this.linecap = t.linecap,
            this.linejoin = t.linejoin,
            this
        }
        ,
        n.LineDashedMaterial = function(t) {
            n.Material.call(this),
            this.type = "LineDashedMaterial",
            this.color = new n.Color(16777215),
            this.linewidth = 1,
            this.scale = 1,
            this.dashSize = 3,
            this.gapSize = 1,
            this.lights = !1,
            this.setValues(t)
        }
        ,
        n.LineDashedMaterial.prototype = Object.create(n.Material.prototype),
        n.LineDashedMaterial.prototype.constructor = n.LineDashedMaterial,
        n.LineDashedMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.linewidth = t.linewidth,
            this.scale = t.scale,
            this.dashSize = t.dashSize,
            this.gapSize = t.gapSize,
            this
        }
        ,
        n.MeshBasicMaterial = function(t) {
            n.Material.call(this),
            this.type = "MeshBasicMaterial",
            this.color = new n.Color(16777215),
            this.map = null,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.specularMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.combine = n.MultiplyOperation,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.lights = !1,
            this.setValues(t)
        }
        ,
        n.MeshBasicMaterial.prototype = Object.create(n.Material.prototype),
        n.MeshBasicMaterial.prototype.constructor = n.MeshBasicMaterial,
        n.MeshBasicMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.specularMap = t.specularMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.combine = t.combine,
            this.reflectivity = t.reflectivity,
            this.refractionRatio = t.refractionRatio,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this
        }
        ,
        n.MeshDepthMaterial = function(t) {
            n.Material.call(this),
            this.type = "MeshDepthMaterial",
            this.depthPacking = n.BasicDepthPacking,
            this.skinning = !1,
            this.morphTargets = !1,
            this.map = null,
            this.alphaMap = null,
            this.displacementMap = null,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.fog = !1,
            this.lights = !1,
            this.setValues(t)
        }
        ,
        n.MeshDepthMaterial.prototype = Object.create(n.Material.prototype),
        n.MeshDepthMaterial.prototype.constructor = n.MeshDepthMaterial,
        n.MeshDepthMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.depthPacking = t.depthPacking,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.map = t.map,
            this.alphaMap = t.alphaMap,
            this.displacementMap = t.displacementMap,
            this.displacementScale = t.displacementScale,
            this.displacementBias = t.displacementBias,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this
        }
        ,
        n.MeshLambertMaterial = function(t) {
            n.Material.call(this),
            this.type = "MeshLambertMaterial",
            this.color = new n.Color(16777215),
            this.map = null,
            this.lightMap = null,
            this.lightMapIntensity = 1,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.emissive = new n.Color(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null,
            this.specularMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.combine = n.MultiplyOperation,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
        }
        ,
        n.MeshLambertMaterial.prototype = Object.create(n.Material.prototype),
        n.MeshLambertMaterial.prototype.constructor = n.MeshLambertMaterial,
        n.MeshLambertMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.lightMap = t.lightMap,
            this.lightMapIntensity = t.lightMapIntensity,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.emissive.copy(t.emissive),
            this.emissiveMap = t.emissiveMap,
            this.emissiveIntensity = t.emissiveIntensity,
            this.specularMap = t.specularMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.combine = t.combine,
            this.reflectivity = t.reflectivity,
            this.refractionRatio = t.refractionRatio,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this
        }
        ,
        n.MeshNormalMaterial = function(t) {
            n.Material.call(this, t),
            this.type = "MeshNormalMaterial",
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.fog = !1,
            this.lights = !1,
            this.morphTargets = !1,
            this.setValues(t)
        }
        ,
        n.MeshNormalMaterial.prototype = Object.create(n.Material.prototype),
        n.MeshNormalMaterial.prototype.constructor = n.MeshNormalMaterial,
        n.MeshNormalMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this
        }
        ,
        n.MeshPhongMaterial = function(t) {
            n.Material.call(this),
            this.type = "MeshPhongMaterial",
            this.color = new n.Color(16777215),
            this.specular = new n.Color(1118481),
            this.shininess = 30,
            this.map = null,
            this.lightMap = null,
            this.lightMapIntensity = 1,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.emissive = new n.Color(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null,
            this.bumpMap = null,
            this.bumpScale = 1,
            this.normalMap = null,
            this.normalScale = new n.Vector2(1,1),
            this.displacementMap = null,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.specularMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.combine = n.MultiplyOperation,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
        }
        ,
        n.MeshPhongMaterial.prototype = Object.create(n.Material.prototype),
        n.MeshPhongMaterial.prototype.constructor = n.MeshPhongMaterial,
        n.MeshPhongMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.specular.copy(t.specular),
            this.shininess = t.shininess,
            this.map = t.map,
            this.lightMap = t.lightMap,
            this.lightMapIntensity = t.lightMapIntensity,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.emissive.copy(t.emissive),
            this.emissiveMap = t.emissiveMap,
            this.emissiveIntensity = t.emissiveIntensity,
            this.bumpMap = t.bumpMap,
            this.bumpScale = t.bumpScale,
            this.normalMap = t.normalMap,
            this.normalScale.copy(t.normalScale),
            this.displacementMap = t.displacementMap,
            this.displacementScale = t.displacementScale,
            this.displacementBias = t.displacementBias,
            this.specularMap = t.specularMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.combine = t.combine,
            this.reflectivity = t.reflectivity,
            this.refractionRatio = t.refractionRatio,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this
        }
        ,
        n.MeshStandardMaterial = function(t) {
            n.Material.call(this),
            this.defines = {
                STANDARD: ""
            },
            this.type = "MeshStandardMaterial",
            this.color = new n.Color(16777215),
            this.roughness = .5,
            this.metalness = .5,
            this.map = null,
            this.lightMap = null,
            this.lightMapIntensity = 1,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.emissive = new n.Color(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null,
            this.bumpMap = null,
            this.bumpScale = 1,
            this.normalMap = null,
            this.normalScale = new n.Vector2(1,1),
            this.displacementMap = null,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.roughnessMap = null,
            this.metalnessMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.envMapIntensity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
        }
        ,
        n.MeshStandardMaterial.prototype = Object.create(n.Material.prototype),
        n.MeshStandardMaterial.prototype.constructor = n.MeshStandardMaterial,
        n.MeshStandardMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.defines = {
                STANDARD: ""
            },
            this.color.copy(t.color),
            this.roughness = t.roughness,
            this.metalness = t.metalness,
            this.map = t.map,
            this.lightMap = t.lightMap,
            this.lightMapIntensity = t.lightMapIntensity,
            this.aoMap = t.aoMap,
            this.aoMapIntensity = t.aoMapIntensity,
            this.emissive.copy(t.emissive),
            this.emissiveMap = t.emissiveMap,
            this.emissiveIntensity = t.emissiveIntensity,
            this.bumpMap = t.bumpMap,
            this.bumpScale = t.bumpScale,
            this.normalMap = t.normalMap,
            this.normalScale.copy(t.normalScale),
            this.displacementMap = t.displacementMap,
            this.displacementScale = t.displacementScale,
            this.displacementBias = t.displacementBias,
            this.roughnessMap = t.roughnessMap,
            this.metalnessMap = t.metalnessMap,
            this.alphaMap = t.alphaMap,
            this.envMap = t.envMap,
            this.envMapIntensity = t.envMapIntensity,
            this.refractionRatio = t.refractionRatio,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.wireframeLinecap = t.wireframeLinecap,
            this.wireframeLinejoin = t.wireframeLinejoin,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this
        }
        ,
        n.MeshPhysicalMaterial = function(t) {
            n.MeshStandardMaterial.call(this),
            this.defines = {
                PHYSICAL: ""
            },
            this.type = "MeshPhysicalMaterial",
            this.reflectivity = .5,
            this.clearCoat = 0,
            this.clearCoatRoughness = 0,
            this.setValues(t)
        }
        ,
        n.MeshPhysicalMaterial.prototype = Object.create(n.MeshStandardMaterial.prototype),
        n.MeshPhysicalMaterial.prototype.constructor = n.MeshPhysicalMaterial,
        n.MeshPhysicalMaterial.prototype.copy = function(t) {
            return n.MeshStandardMaterial.prototype.copy.call(this, t),
            this.defines = {
                PHYSICAL: ""
            },
            this.reflectivity = t.reflectivity,
            this.clearCoat = t.clearCoat,
            this.clearCoatRoughness = t.clearCoatRoughness,
            this
        }
        ,
        n.MultiMaterial = function(t) {
            this.uuid = n.Math.generateUUID(),
            this.type = "MultiMaterial",
            this.materials = t instanceof Array ? t : [],
            this.visible = !0
        }
        ,
        n.MultiMaterial.prototype = {
            constructor: n.MultiMaterial,
            toJSON: function(t) {
                for (var e = {
                    metadata: {
                        version: 4.2,
                        type: "material",
                        generator: "MaterialExporter"
                    },
                    uuid: this.uuid,
                    type: this.type,
                    materials: []
                }, i = this.materials, n = 0, r = i.length; n < r; n++) {
                    var a = i[n].toJSON(t);
                    delete a.metadata,
                    e.materials.push(a)
                }
                return e.visible = this.visible,
                e
            },
            clone: function() {
                for (var t = new this.constructor, e = 0; e < this.materials.length; e++)
                    t.materials.push(this.materials[e].clone());
                return t.visible = this.visible,
                t
            }
        },
        n.PointsMaterial = function(t) {
            n.Material.call(this),
            this.type = "PointsMaterial",
            this.color = new n.Color(16777215),
            this.map = null,
            this.size = 1,
            this.sizeAttenuation = !0,
            this.lights = !1,
            this.setValues(t)
        }
        ,
        n.PointsMaterial.prototype = Object.create(n.Material.prototype),
        n.PointsMaterial.prototype.constructor = n.PointsMaterial,
        n.PointsMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.size = t.size,
            this.sizeAttenuation = t.sizeAttenuation,
            this
        }
        ,
        n.ShaderMaterial = function(t) {
            n.Material.call(this),
            this.type = "ShaderMaterial",
            this.defines = {},
            this.uniforms = {},
            this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
            this.linewidth = 1,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.fog = !1,
            this.lights = !1,
            this.clipping = !1,
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.extensions = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1
            },
            this.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv2: [0, 0]
            },
            this.index0AttributeName = void 0,
            void 0 !== t && (void 0 !== t.attributes,
            this.setValues(t))
        }
        ,
        n.ShaderMaterial.prototype = Object.create(n.Material.prototype),
        n.ShaderMaterial.prototype.constructor = n.ShaderMaterial,
        n.ShaderMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.fragmentShader = t.fragmentShader,
            this.vertexShader = t.vertexShader,
            this.uniforms = n.UniformsUtils.clone(t.uniforms),
            this.defines = t.defines,
            this.wireframe = t.wireframe,
            this.wireframeLinewidth = t.wireframeLinewidth,
            this.lights = t.lights,
            this.clipping = t.clipping,
            this.skinning = t.skinning,
            this.morphTargets = t.morphTargets,
            this.morphNormals = t.morphNormals,
            this.extensions = t.extensions,
            this
        }
        ,
        n.ShaderMaterial.prototype.toJSON = function(t) {
            var e = n.Material.prototype.toJSON.call(this, t);
            return e.uniforms = this.uniforms,
            e.vertexShader = this.vertexShader,
            e.fragmentShader = this.fragmentShader,
            e
        }
        ,
        n.RawShaderMaterial = function(t) {
            n.ShaderMaterial.call(this, t),
            this.type = "RawShaderMaterial"
        }
        ,
        n.RawShaderMaterial.prototype = Object.create(n.ShaderMaterial.prototype),
        n.RawShaderMaterial.prototype.constructor = n.RawShaderMaterial,
        n.SpriteMaterial = function(t) {
            n.Material.call(this),
            this.type = "SpriteMaterial",
            this.color = new n.Color(16777215),
            this.map = null,
            this.rotation = 0,
            this.fog = !1,
            this.lights = !1,
            this.setValues(t)
        }
        ,
        n.SpriteMaterial.prototype = Object.create(n.Material.prototype),
        n.SpriteMaterial.prototype.constructor = n.SpriteMaterial,
        n.SpriteMaterial.prototype.copy = function(t) {
            return n.Material.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.map = t.map,
            this.rotation = t.rotation,
            this
        }
        ,
        n.ShadowMaterial = function() {
            n.ShaderMaterial.call(this, {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.lights, {
                    opacity: {
                        value: 1
                    }
                }]),
                vertexShader: n.ShaderChunk.shadow_vert,
                fragmentShader: n.ShaderChunk.shadow_frag
            }),
            this.lights = !0,
            this.transparent = !0,
            Object.defineProperties(this, {
                opacity: {
                    enumerable: !0,
                    get: function() {
                        return this.uniforms.opacity.value
                    },
                    set: function(t) {
                        this.uniforms.opacity.value = t
                    }
                }
            })
        }
        ,
        n.ShadowMaterial.prototype = Object.create(n.ShaderMaterial.prototype),
        n.ShadowMaterial.prototype.constructor = n.ShadowMaterial,
        n.Texture = function(t, e, i, r, a, o, s, l, h, c) {
            Object.defineProperty(this, "id", {
                value: n.TextureIdCount++
            }),
            this.uuid = n.Math.generateUUID(),
            this.name = "",
            this.sourceFile = "",
            this.image = void 0 !== t ? t : n.Texture.DEFAULT_IMAGE,
            this.mipmaps = [],
            this.mapping = void 0 !== e ? e : n.Texture.DEFAULT_MAPPING,
            this.wrapS = void 0 !== i ? i : n.ClampToEdgeWrapping,
            this.wrapT = void 0 !== r ? r : n.ClampToEdgeWrapping,
            this.magFilter = void 0 !== a ? a : n.LinearFilter,
            this.minFilter = void 0 !== o ? o : n.LinearMipMapLinearFilter,
            this.anisotropy = void 0 !== h ? h : 1,
            this.format = void 0 !== s ? s : n.RGBAFormat,
            this.type = void 0 !== l ? l : n.UnsignedByteType,
            this.offset = new n.Vector2(0,0),
            this.repeat = new n.Vector2(1,1),
            this.generateMipmaps = !0,
            this.premultiplyAlpha = !1,
            this.flipY = !0,
            this.unpackAlignment = 4,
            this.encoding = void 0 !== c ? c : n.LinearEncoding,
            this.version = 0,
            this.onUpdate = null
        }
        ,
        n.Texture.DEFAULT_IMAGE = void 0,
        n.Texture.DEFAULT_MAPPING = n.UVMapping,
        n.Texture.prototype = {
            constructor: n.Texture,
            set needsUpdate(t) {
                t === !0 && this.version++
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.image = t.image,
                this.mipmaps = t.mipmaps.slice(0),
                this.mapping = t.mapping,
                this.wrapS = t.wrapS,
                this.wrapT = t.wrapT,
                this.magFilter = t.magFilter,
                this.minFilter = t.minFilter,
                this.anisotropy = t.anisotropy,
                this.format = t.format,
                this.type = t.type,
                this.offset.copy(t.offset),
                this.repeat.copy(t.repeat),
                this.generateMipmaps = t.generateMipmaps,
                this.premultiplyAlpha = t.premultiplyAlpha,
                this.flipY = t.flipY,
                this.unpackAlignment = t.unpackAlignment,
                this.encoding = t.encoding,
                this
            },
            toJSON: function(t) {
                function e(t) {
                    var e;
                    return void 0 !== t.toDataURL ? e = t : (e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                    e.width = t.width,
                    e.height = t.height,
                    e.getContext("2d").drawImage(t, 0, 0, t.width, t.height)),
                    e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
                }
                if (void 0 !== t.textures[this.uuid])
                    return t.textures[this.uuid];
                var i = {
                    metadata: {
                        version: 4.4,
                        type: "Texture",
                        generator: "Texture.toJSON"
                    },
                    uuid: this.uuid,
                    name: this.name,
                    mapping: this.mapping,
                    repeat: [this.repeat.x, this.repeat.y],
                    offset: [this.offset.x, this.offset.y],
                    wrap: [this.wrapS, this.wrapT],
                    minFilter: this.minFilter,
                    magFilter: this.magFilter,
                    anisotropy: this.anisotropy,
                    flipY: this.flipY
                };
                if (void 0 !== this.image) {
                    var r = this.image;
                    void 0 === r.uuid && (r.uuid = n.Math.generateUUID()),
                    void 0 === t.images[r.uuid] && (t.images[r.uuid] = {
                        uuid: r.uuid,
                        url: e(r)
                    }),
                    i.image = r.uuid
                }
                return t.textures[this.uuid] = i,
                i
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            },
            transformUv: function(t) {
                if (this.mapping === n.UVMapping) {
                    if (t.multiply(this.repeat),
                    t.add(this.offset),
                    t.x < 0 || t.x > 1)
                        switch (this.wrapS) {
                        case n.RepeatWrapping:
                            t.x = t.x - Math.floor(t.x);
                            break;
                        case n.ClampToEdgeWrapping:
                            t.x = t.x < 0 ? 0 : 1;
                            break;
                        case n.MirroredRepeatWrapping:
                            1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                        }
                    if (t.y < 0 || t.y > 1)
                        switch (this.wrapT) {
                        case n.RepeatWrapping:
                            t.y = t.y - Math.floor(t.y);
                            break;
                        case n.ClampToEdgeWrapping:
                            t.y = t.y < 0 ? 0 : 1;
                            break;
                        case n.MirroredRepeatWrapping:
                            1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                        }
                    this.flipY && (t.y = 1 - t.y)
                }
            }
        },
        Object.assign(n.Texture.prototype, n.EventDispatcher.prototype),
        n.TextureIdCount = 0,
        n.DepthTexture = function(t, e, i, r, a, o, s, l, h) {
            n.Texture.call(this, null, r, a, o, s, l, n.DepthFormat, i, h),
            this.image = {
                width: t,
                height: e
            },
            this.type = void 0 !== i ? i : n.UnsignedShortType,
            this.magFilter = void 0 !== s ? s : n.NearestFilter,
            this.minFilter = void 0 !== l ? l : n.NearestFilter,
            this.flipY = !1,
            this.generateMipmaps = !1
        }
        ,
        n.DepthTexture.prototype = Object.create(n.Texture.prototype),
        n.DepthTexture.prototype.constructor = n.DepthTexture,
        n.CanvasTexture = function(t, e, i, r, a, o, s, l, h) {
            n.Texture.call(this, t, e, i, r, a, o, s, l, h),
            this.needsUpdate = !0
        }
        ,
        n.CanvasTexture.prototype = Object.create(n.Texture.prototype),
        n.CanvasTexture.prototype.constructor = n.CanvasTexture,
        n.CubeTexture = function(t, e, i, r, a, o, s, l, h, c) {
            t = void 0 !== t ? t : [],
            e = void 0 !== e ? e : n.CubeReflectionMapping,
            n.Texture.call(this, t, e, i, r, a, o, s, l, h, c),
            this.flipY = !1
        }
        ,
        n.CubeTexture.prototype = Object.create(n.Texture.prototype),
        n.CubeTexture.prototype.constructor = n.CubeTexture,
        Object.defineProperty(n.CubeTexture.prototype, "images", {
            get: function() {
                return this.image
            },
            set: function(t) {
                this.image = t
            }
        }),
        n.CompressedTexture = function(t, e, i, r, a, o, s, l, h, c, u, p) {
            n.Texture.call(this, null, o, s, l, h, c, r, a, u, p),
            this.image = {
                width: e,
                height: i
            },
            this.mipmaps = t,
            this.flipY = !1,
            this.generateMipmaps = !1
        }
        ,
        n.CompressedTexture.prototype = Object.create(n.Texture.prototype),
        n.CompressedTexture.prototype.constructor = n.CompressedTexture,
        n.DataTexture = function(t, e, i, r, a, o, s, l, h, c, u, p) {
            n.Texture.call(this, null, o, s, l, h, c, r, a, u, p),
            this.image = {
                data: t,
                width: e,
                height: i
            },
            this.magFilter = void 0 !== h ? h : n.NearestFilter,
            this.minFilter = void 0 !== c ? c : n.NearestFilter,
            this.flipY = !1,
            this.generateMipmaps = !1
        }
        ,
        n.DataTexture.prototype = Object.create(n.Texture.prototype),
        n.DataTexture.prototype.constructor = n.DataTexture,
        n.VideoTexture = function(t, e, i, r, a, o, s, l, h) {
            function c() {
                requestAnimationFrame(c),
                t.readyState >= t.HAVE_CURRENT_DATA && (u.needsUpdate = !0)
            }
            n.Texture.call(this, t, e, i, r, a, o, s, l, h),
            this.generateMipmaps = !1;
            var u = this;
            c()
        }
        ,
        n.VideoTexture.prototype = Object.create(n.Texture.prototype),
        n.VideoTexture.prototype.constructor = n.VideoTexture,
        n.Group = function() {
            n.Object3D.call(this),
            this.type = "Group"
        }
        ,
        n.Group.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Group
        }),
        n.Points = function(t, e) {
            n.Object3D.call(this),
            this.type = "Points",
            this.geometry = void 0 !== t ? t : new n.BufferGeometry,
            this.material = void 0 !== e ? e : new n.PointsMaterial({
                color: 16777215 * Math.random()
            })
        }
        ,
        n.Points.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Points,
            raycast: function() {
                var t = new n.Matrix4
                  , e = new n.Ray
                  , i = new n.Sphere;
                return function(r, a) {
                    function o(t, i) {
                        var n = e.distanceSqToPoint(t);
                        if (n < p) {
                            var o = e.closestPointToPoint(t);
                            o.applyMatrix4(h);
                            var l = r.ray.origin.distanceTo(o);
                            if (l < r.near || l > r.far)
                                return;
                            a.push({
                                distance: l,
                                distanceToRay: Math.sqrt(n),
                                point: o.clone(),
                                index: i,
                                face: null,
                                object: s
                            })
                        }
                    }
                    var s = this
                      , l = this.geometry
                      , h = this.matrixWorld
                      , c = r.params.Points.threshold;
                    if (null === l.boundingSphere && l.computeBoundingSphere(),
                    i.copy(l.boundingSphere),
                    i.applyMatrix4(h),
                    r.ray.intersectsSphere(i) !== !1) {
                        t.getInverse(h),
                        e.copy(r.ray).applyMatrix4(t);
                        var u = c / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                          , p = u * u
                          , f = new n.Vector3;
                        if (l instanceof n.BufferGeometry) {
                            var d = l.index
                              , m = l.attributes
                              , g = m.position.array;
                            if (null !== d)
                                for (var v = d.array, y = 0, _ = v.length; y < _; y++) {
                                    var x = v[y];
                                    f.fromArray(g, 3 * x),
                                    o(f, x)
                                }
                            else
                                for (var y = 0, b = g.length / 3; y < b; y++)
                                    f.fromArray(g, 3 * y),
                                    o(f, y)
                        } else
                            for (var w = l.vertices, y = 0, b = w.length; y < b; y++)
                                o(w[y], y)
                    }
                }
            }(),
            clone: function() {
                return new this.constructor(this.geometry,this.material).copy(this)
            }
        }),
        n.Line = function(t, e, i) {
            return 1 === i ? new n.LineSegments(t,e) : (n.Object3D.call(this),
            this.type = "Line",
            this.geometry = void 0 !== t ? t : new n.BufferGeometry,
            void (this.material = void 0 !== e ? e : new n.LineBasicMaterial({
                color: 16777215 * Math.random()
            })))
        }
        ,
        n.Line.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Line,
            raycast: function() {
                var t = new n.Matrix4
                  , e = new n.Ray
                  , i = new n.Sphere;
                return function(r, a) {
                    var o = r.linePrecision
                      , s = o * o
                      , l = this.geometry
                      , h = this.matrixWorld;
                    if (null === l.boundingSphere && l.computeBoundingSphere(),
                    i.copy(l.boundingSphere),
                    i.applyMatrix4(h),
                    r.ray.intersectsSphere(i) !== !1) {
                        t.getInverse(h),
                        e.copy(r.ray).applyMatrix4(t);
                        var c = new n.Vector3
                          , u = new n.Vector3
                          , p = new n.Vector3
                          , f = new n.Vector3
                          , d = this instanceof n.LineSegments ? 2 : 1;
                        if (l instanceof n.BufferGeometry) {
                            var m = l.index
                              , g = l.attributes
                              , v = g.position.array;
                            if (null !== m)
                                for (var y = m.array, _ = 0, x = y.length - 1; _ < x; _ += d) {
                                    var b = y[_]
                                      , w = y[_ + 1];
                                    c.fromArray(v, 3 * b),
                                    u.fromArray(v, 3 * w);
                                    var M = e.distanceSqToSegment(c, u, f, p);
                                    if (!(M > s)) {
                                        f.applyMatrix4(this.matrixWorld);
                                        var T = r.ray.origin.distanceTo(f);
                                        T < r.near || T > r.far || a.push({
                                            distance: T,
                                            point: p.clone().applyMatrix4(this.matrixWorld),
                                            index: _,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                            else
                                for (var _ = 0, x = v.length / 3 - 1; _ < x; _ += d) {
                                    c.fromArray(v, 3 * _),
                                    u.fromArray(v, 3 * _ + 3);
                                    var M = e.distanceSqToSegment(c, u, f, p);
                                    if (!(M > s)) {
                                        f.applyMatrix4(this.matrixWorld);
                                        var T = r.ray.origin.distanceTo(f);
                                        T < r.near || T > r.far || a.push({
                                            distance: T,
                                            point: p.clone().applyMatrix4(this.matrixWorld),
                                            index: _,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                        } else if (l instanceof n.Geometry)
                            for (var S = l.vertices, C = S.length, _ = 0; _ < C - 1; _ += d) {
                                var M = e.distanceSqToSegment(S[_], S[_ + 1], f, p);
                                if (!(M > s)) {
                                    f.applyMatrix4(this.matrixWorld);
                                    var T = r.ray.origin.distanceTo(f);
                                    T < r.near || T > r.far || a.push({
                                        distance: T,
                                        point: p.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                            }
                    }
                }
            }(),
            clone: function() {
                return new this.constructor(this.geometry,this.material).copy(this)
            }
        }),
        n.LineSegments = function(t, e) {
            n.Line.call(this, t, e),
            this.type = "LineSegments"
        }
        ,
        n.LineSegments.prototype = Object.assign(Object.create(n.Line.prototype), {
            constructor: n.LineSegments
        }),
        n.Mesh = function(t, e) {
            n.Object3D.call(this),
            this.type = "Mesh",
            this.geometry = void 0 !== t ? t : new n.BufferGeometry,
            this.material = void 0 !== e ? e : new n.MeshBasicMaterial({
                color: 16777215 * Math.random()
            }),
            this.drawMode = n.TrianglesDrawMode,
            this.updateMorphTargets()
        }
        ,
        n.Mesh.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Mesh,
            setDrawMode: function(t) {
                this.drawMode = t
            },
            copy: function(t) {
                return n.Object3D.prototype.copy.call(this, t),
                this.drawMode = t.drawMode,
                this
            },
            updateMorphTargets: function() {
                if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
                    this.morphTargetBase = -1,
                    this.morphTargetInfluences = [],
                    this.morphTargetDictionary = {};
                    for (var t = 0, e = this.geometry.morphTargets.length; t < e; t++)
                        this.morphTargetInfluences.push(0),
                        this.morphTargetDictionary[this.geometry.morphTargets[t].name] = t
                }
            },
            getMorphTargetIndexByName: function(t) {
                return void 0 !== this.morphTargetDictionary[t] ? this.morphTargetDictionary[t] : 0
            },
            raycast: function() {
                function t(t, e, i, r, a, o, s) {
                    return n.Triangle.barycoordFromPoint(t, e, i, r, g),
                    a.multiplyScalar(g.x),
                    o.multiplyScalar(g.y),
                    s.multiplyScalar(g.z),
                    a.add(o).add(s),
                    a.clone()
                }
                function e(t, e, i, r, a, o, s) {
                    var l, h = t.material;
                    if (l = h.side === n.BackSide ? i.intersectTriangle(o, a, r, !0, s) : i.intersectTriangle(r, a, o, h.side !== n.DoubleSide, s),
                    null === l)
                        return null;
                    y.copy(s),
                    y.applyMatrix4(t.matrixWorld);
                    var c = e.ray.origin.distanceTo(y);
                    return c < e.near || c > e.far ? null : {
                        distance: c,
                        point: y.clone(),
                        object: t
                    }
                }
                function i(i, r, a, o, c, u, p, g) {
                    s.fromArray(o, 3 * u),
                    l.fromArray(o, 3 * p),
                    h.fromArray(o, 3 * g);
                    var y = e(i, r, a, s, l, h, v);
                    return y && (c && (f.fromArray(c, 2 * u),
                    d.fromArray(c, 2 * p),
                    m.fromArray(c, 2 * g),
                    y.uv = t(v, s, l, h, f, d, m)),
                    y.face = new n.Face3(u,p,g,n.Triangle.normal(s, l, h)),
                    y.faceIndex = u),
                    y
                }
                var r = new n.Matrix4
                  , a = new n.Ray
                  , o = new n.Sphere
                  , s = new n.Vector3
                  , l = new n.Vector3
                  , h = new n.Vector3
                  , c = new n.Vector3
                  , u = new n.Vector3
                  , p = new n.Vector3
                  , f = new n.Vector2
                  , d = new n.Vector2
                  , m = new n.Vector2
                  , g = new n.Vector3
                  , v = new n.Vector3
                  , y = new n.Vector3;
                return function(g, y) {
                    var _ = this.geometry
                      , x = this.material
                      , b = this.matrixWorld;
                    if (void 0 !== x && (null === _.boundingSphere && _.computeBoundingSphere(),
                    o.copy(_.boundingSphere),
                    o.applyMatrix4(b),
                    g.ray.intersectsSphere(o) !== !1 && (r.getInverse(b),
                    a.copy(g.ray).applyMatrix4(r),
                    null === _.boundingBox || a.intersectsBox(_.boundingBox) !== !1))) {
                        var w, M;
                        if (_ instanceof n.BufferGeometry) {
                            var T, S, C, A = _.index, P = _.attributes, E = P.position.array;
                            if (void 0 !== P.uv && (w = P.uv.array),
                            null !== A)
                                for (var L = A.array, O = 0, R = L.length; O < R; O += 3)
                                    T = L[O],
                                    S = L[O + 1],
                                    C = L[O + 2],
                                    M = i(this, g, a, E, w, T, S, C),
                                    M && (M.faceIndex = Math.floor(O / 3),
                                    y.push(M));
                            else
                                for (var O = 0, R = E.length; O < R; O += 9)
                                    T = O / 3,
                                    S = T + 1,
                                    C = T + 2,
                                    M = i(this, g, a, E, w, T, S, C),
                                    M && (M.index = T,
                                    y.push(M))
                        } else if (_ instanceof n.Geometry) {
                            var D, I, k, N = x instanceof n.MultiMaterial, F = N === !0 ? x.materials : null, B = _.vertices, U = _.faces, z = _.faceVertexUvs[0];
                            z.length > 0 && (w = z);
                            for (var j = 0, V = U.length; j < V; j++) {
                                var G = U[j]
                                  , H = N === !0 ? F[G.materialIndex] : x;
                                if (void 0 !== H) {
                                    if (D = B[G.a],
                                    I = B[G.b],
                                    k = B[G.c],
                                    H.morphTargets === !0) {
                                        var W = _.morphTargets
                                          , X = this.morphTargetInfluences;
                                        s.set(0, 0, 0),
                                        l.set(0, 0, 0),
                                        h.set(0, 0, 0);
                                        for (var q = 0, Y = W.length; q < Y; q++) {
                                            var Z = X[q];
                                            if (0 !== Z) {
                                                var $ = W[q].vertices;
                                                s.addScaledVector(c.subVectors($[G.a], D), Z),
                                                l.addScaledVector(u.subVectors($[G.b], I), Z),
                                                h.addScaledVector(p.subVectors($[G.c], k), Z)
                                            }
                                        }
                                        s.add(D),
                                        l.add(I),
                                        h.add(k),
                                        D = s,
                                        I = l,
                                        k = h
                                    }
                                    if (M = e(this, g, a, D, I, k, v)) {
                                        if (w) {
                                            var K = w[j];
                                            f.copy(K[0]),
                                            d.copy(K[1]),
                                            m.copy(K[2]),
                                            M.uv = t(v, D, I, k, f, d, m)
                                        }
                                        M.face = G,
                                        M.faceIndex = j,
                                        y.push(M)
                                    }
                                }
                            }
                        }
                    }
                }
            }(),
            clone: function() {
                return new this.constructor(this.geometry,this.material).copy(this)
            }
        }),
        n.Bone = function(t) {
            n.Object3D.call(this),
            this.type = "Bone",
            this.skin = t
        }
        ,
        n.Bone.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Bone,
            copy: function(t) {
                return n.Object3D.prototype.copy.call(this, t),
                this.skin = t.skin,
                this
            }
        }),
        n.Skeleton = function(t, e, i) {
            if (this.useVertexTexture = void 0 === i || i,
            this.identityMatrix = new n.Matrix4,
            t = t || [],
            this.bones = t.slice(0),
            this.useVertexTexture) {
                var r = Math.sqrt(4 * this.bones.length);
                r = n.Math.nextPowerOfTwo(Math.ceil(r)),
                r = Math.max(r, 4),
                this.boneTextureWidth = r,
                this.boneTextureHeight = r,
                this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4),
                this.boneTexture = new n.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,n.RGBAFormat,n.FloatType)
            } else
                this.boneMatrices = new Float32Array(16 * this.bones.length);
            if (void 0 === e)
                this.calculateInverses();
            else if (this.bones.length === e.length)
                this.boneInverses = e.slice(0);
            else {
                this.boneInverses = [];
                for (var a = 0, o = this.bones.length; a < o; a++)
                    this.boneInverses.push(new n.Matrix4)
            }
        }
        ,
        Object.assign(n.Skeleton.prototype, {
            calculateInverses: function() {
                this.boneInverses = [];
                for (var t = 0, e = this.bones.length; t < e; t++) {
                    var i = new n.Matrix4;
                    this.bones[t] && i.getInverse(this.bones[t].matrixWorld),
                    this.boneInverses.push(i)
                }
            },
            pose: function() {
                for (var t, e = 0, i = this.bones.length; e < i; e++)
                    t = this.bones[e],
                    t && t.matrixWorld.getInverse(this.boneInverses[e]);
                for (var e = 0, i = this.bones.length; e < i; e++)
                    t = this.bones[e],
                    t && (t.parent instanceof n.Bone ? (t.matrix.getInverse(t.parent.matrixWorld),
                    t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                    t.matrix.decompose(t.position, t.quaternion, t.scale))
            },
            update: function() {
                var t = new n.Matrix4;
                return function() {
                    for (var e = 0, i = this.bones.length; e < i; e++) {
                        var n = this.bones[e] ? this.bones[e].matrixWorld : this.identityMatrix;
                        t.multiplyMatrices(n, this.boneInverses[e]),
                        t.toArray(this.boneMatrices, 16 * e)
                    }
                    this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
                }
            }(),
            clone: function() {
                return new n.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)
            }
        }),
        n.SkinnedMesh = function(t, e, i) {
            n.Mesh.call(this, t, e),
            this.type = "SkinnedMesh",
            this.bindMode = "attached",
            this.bindMatrix = new n.Matrix4,
            this.bindMatrixInverse = new n.Matrix4;
            var r = [];
            if (this.geometry && void 0 !== this.geometry.bones) {
                for (var a, o, s = 0, l = this.geometry.bones.length; s < l; ++s)
                    o = this.geometry.bones[s],
                    a = new n.Bone(this),
                    r.push(a),
                    a.name = o.name,
                    a.position.fromArray(o.pos),
                    a.quaternion.fromArray(o.rotq),
                    void 0 !== o.scl && a.scale.fromArray(o.scl);
                for (var s = 0, l = this.geometry.bones.length; s < l; ++s)
                    o = this.geometry.bones[s],
                    o.parent !== -1 && null !== o.parent && void 0 !== r[o.parent] ? r[o.parent].add(r[s]) : this.add(r[s])
            }
            this.normalizeSkinWeights(),
            this.updateMatrixWorld(!0),
            this.bind(new n.Skeleton(r,(void 0),i), this.matrixWorld)
        }
        ,
        n.SkinnedMesh.prototype = Object.assign(Object.create(n.Mesh.prototype), {
            constructor: n.SkinnedMesh,
            bind: function(t, e) {
                this.skeleton = t,
                void 0 === e && (this.updateMatrixWorld(!0),
                this.skeleton.calculateInverses(),
                e = this.matrixWorld),
                this.bindMatrix.copy(e),
                this.bindMatrixInverse.getInverse(e)
            },
            pose: function() {
                this.skeleton.pose()
            },
            normalizeSkinWeights: function() {
                if (this.geometry instanceof n.Geometry)
                    for (var t = 0; t < this.geometry.skinWeights.length; t++) {
                        var e = this.geometry.skinWeights[t]
                          , i = 1 / e.lengthManhattan();
                        i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0)
                    }
                else if (this.geometry instanceof n.BufferGeometry)
                    for (var r = new n.Vector4, a = this.geometry.attributes.skinWeight, t = 0; t < a.count; t++) {
                        r.x = a.getX(t),
                        r.y = a.getY(t),
                        r.z = a.getZ(t),
                        r.w = a.getW(t);
                        var i = 1 / r.lengthManhattan();
                        i !== 1 / 0 ? r.multiplyScalar(i) : r.set(1, 0, 0, 0),
                        a.setXYZW(t, r.x, r.y, r.z, r.w)
                    }
            },
            updateMatrixWorld: function(t) {
                n.Mesh.prototype.updateMatrixWorld.call(this, !0),
                "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode && this.bindMatrixInverse.getInverse(this.bindMatrix)
            },
            clone: function() {
                return new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture).copy(this)
            }
        }),
        n.LOD = function() {
            n.Object3D.call(this),
            this.type = "LOD",
            Object.defineProperties(this, {
                levels: {
                    enumerable: !0,
                    value: []
                }
            })
        }
        ,
        n.LOD.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.LOD,
            copy: function(t) {
                n.Object3D.prototype.copy.call(this, t, !1);
                for (var e = t.levels, i = 0, r = e.length; i < r; i++) {
                    var a = e[i];
                    this.addLevel(a.object.clone(), a.distance)
                }
                return this
            },
            addLevel: function(t, e) {
                void 0 === e && (e = 0),
                e = Math.abs(e);
                for (var i = this.levels, n = 0; n < i.length && !(e < i[n].distance); n++)
                    ;
                i.splice(n, 0, {
                    distance: e,
                    object: t
                }),
                this.add(t)
            },
            getObjectForDistance: function(t) {
                for (var e = this.levels, i = 1, n = e.length; i < n && !(t < e[i].distance); i++)
                    ;
                return e[i - 1].object
            },
            raycast: function() {
                var t = new n.Vector3;
                return function(e, i) {
                    t.setFromMatrixPosition(this.matrixWorld);
                    var n = e.ray.origin.distanceTo(t);
                    this.getObjectForDistance(n).raycast(e, i)
                }
            }(),
            update: function() {
                var t = new n.Vector3
                  , e = new n.Vector3;
                return function(i) {
                    var n = this.levels;
                    if (n.length > 1) {
                        t.setFromMatrixPosition(i.matrixWorld),
                        e.setFromMatrixPosition(this.matrixWorld);
                        var r = t.distanceTo(e);
                        n[0].object.visible = !0;
                        for (var a = 1, o = n.length; a < o && r >= n[a].distance; a++)
                            n[a - 1].object.visible = !1,
                            n[a].object.visible = !0;
                        for (; a < o; a++)
                            n[a].object.visible = !1
                    }
                }
            }(),
            toJSON: function(t) {
                var e = n.Object3D.prototype.toJSON.call(this, t);
                e.object.levels = [];
                for (var i = this.levels, r = 0, a = i.length; r < a; r++) {
                    var o = i[r];
                    e.object.levels.push({
                        object: o.object.uuid,
                        distance: o.distance
                    })
                }
                return e
            }
        }),
        n.Sprite = function(t) {
            n.Object3D.call(this),
            this.type = "Sprite",
            this.material = void 0 !== t ? t : new n.SpriteMaterial
        }
        ,
        n.Sprite.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.Sprite,
            raycast: function() {
                var t = new n.Vector3;
                return function(e, i) {
                    t.setFromMatrixPosition(this.matrixWorld);
                    var n = e.ray.distanceSqToPoint(t)
                      , r = this.scale.x * this.scale.y / 4;
                    n > r || i.push({
                        distance: Math.sqrt(n),
                        point: this.position,
                        face: null,
                        object: this
                    })
                }
            }(),
            clone: function() {
                return new this.constructor(this.material).copy(this)
            }
        }),
        n.LensFlare = function(t, e, i, r, a) {
            n.Object3D.call(this),
            this.lensFlares = [],
            this.positionScreen = new n.Vector3,
            this.customUpdateCallback = void 0,
            void 0 !== t && this.add(t, e, i, r, a)
        }
        ,
        n.LensFlare.prototype = Object.assign(Object.create(n.Object3D.prototype), {
            constructor: n.LensFlare,
            copy: function(t) {
                n.Object3D.prototype.copy.call(this, t),
                this.positionScreen.copy(t.positionScreen),
                this.customUpdateCallback = t.customUpdateCallback;
                for (var e = 0, i = t.lensFlares.length; e < i; e++)
                    this.lensFlares.push(t.lensFlares[e]);
                return this
            },
            add: function(t, e, i, r, a, o) {
                void 0 === e && (e = -1),
                void 0 === i && (i = 0),
                void 0 === o && (o = 1),
                void 0 === a && (a = new n.Color(16777215)),
                void 0 === r && (r = n.NormalBlending),
                i = Math.min(i, Math.max(0, i)),
                this.lensFlares.push({
                    texture: t,
                    size: e,
                    distance: i,
                    x: 0,
                    y: 0,
                    z: 0,
                    scale: 1,
                    rotation: 0,
                    opacity: o,
                    color: a,
                    blending: r
                })
            },
            updateLensFlares: function() {
                var t, e, i = this.lensFlares.length, n = 2 * -this.positionScreen.x, r = 2 * -this.positionScreen.y;
                for (t = 0; t < i; t++)
                    e = this.lensFlares[t],
                    e.x = this.positionScreen.x + n * e.distance,
                    e.y = this.positionScreen.y + r * e.distance,
                    e.wantedRotation = e.x * Math.PI * .25,
                    e.rotation += .25 * (e.wantedRotation - e.rotation)
            }
        }),
        n.Scene = function() {
            n.Object3D.call(this),
            this.type = "Scene",
            this.background = null,
            this.fog = null,
            this.overrideMaterial = null,
            this.autoUpdate = !0
        }
        ,
        n.Scene.prototype = Object.create(n.Object3D.prototype),
        n.Scene.prototype.constructor = n.Scene,
        n.Scene.prototype.copy = function(t, e) {
            return n.Object3D.prototype.copy.call(this, t, e),
            null !== t.background && (this.background = t.background.clone()),
            null !== t.fog && (this.fog = t.fog.clone()),
            null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
            this.autoUpdate = t.autoUpdate,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this
        }
        ,
        n.Fog = function(t, e, i) {
            this.name = "",
            this.color = new n.Color(t),
            this.near = void 0 !== e ? e : 1,
            this.far = void 0 !== i ? i : 1e3
        }
        ,
        n.Fog.prototype.clone = function() {
            return new n.Fog(this.color.getHex(),this.near,this.far)
        }
        ,
        n.FogExp2 = function(t, e) {
            this.name = "",
            this.color = new n.Color(t),
            this.density = void 0 !== e ? e : 25e-5
        }
        ,
        n.FogExp2.prototype.clone = function() {
            return new n.FogExp2(this.color.getHex(),this.density)
        }
        ,
        n.ShaderChunk = {},
        n.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
        n.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
        n.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
        n.ShaderChunk.aomap_fragment = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
        n.ShaderChunk.aomap_pars_fragment = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        n.ShaderChunk.begin_vertex = "\nvec3 transformed = vec3( position );\n",
        n.ShaderChunk.beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n",
        n.ShaderChunk.bsdfs = "bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
        n.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
        n.ShaderChunk.clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n#endif\n",
        n.ShaderChunk.clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
        n.ShaderChunk.clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
        n.ShaderChunk.clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
        n.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        n.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
        n.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        n.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        n.ShaderChunk.common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",
        n.ShaderChunk.cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
        n.ShaderChunk.defaultnormal_vertex = "#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",
        n.ShaderChunk.displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
        n.ShaderChunk.displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
        n.ShaderChunk.emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
        n.ShaderChunk.emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
        n.ShaderChunk.encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",
        n.ShaderChunk.encodings_fragment = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
        n.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
        n.ShaderChunk.envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
        n.ShaderChunk.envmap_pars_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
        n.ShaderChunk.envmap_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
        n.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
        n.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
        n.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
        n.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        n.ShaderChunk.lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
        n.ShaderChunk.lights_pars = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#include <normal_flip>\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#include <normal_flip>\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
        n.ShaderChunk.lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
        n.ShaderChunk.lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
        n.ShaderChunk.lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
        n.ShaderChunk.lights_physical_pars_fragment = "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
        n.ShaderChunk.lights_template = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\t\t\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
        n.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",
        n.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
        n.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
        n.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",
        n.ShaderChunk.map_fragment = "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
        n.ShaderChunk.map_pars_fragment = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
        n.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
        n.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",
        n.ShaderChunk.metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n",
        n.ShaderChunk.metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        n.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
        n.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        n.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
        n.ShaderChunk.normal_flip = "#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n",
        n.ShaderChunk.normal_fragment = "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
        n.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
        n.ShaderChunk.packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
        n.ShaderChunk.premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
        n.ShaderChunk.project_vertex = "#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",
        n.ShaderChunk.roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n",
        n.ShaderChunk.roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        n.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
        n.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
        n.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
        n.ShaderChunk.shadowmask_pars_fragment = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
        n.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        n.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
        n.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",
        n.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
        n.ShaderChunk.specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        n.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        n.ShaderChunk.tonemapping_fragment = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
        n.ShaderChunk.tonemapping_pars_fragment = "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
        n.ShaderChunk.uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        n.ShaderChunk.uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
        n.ShaderChunk.uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
        n.ShaderChunk.uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
        n.ShaderChunk.uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",
        n.ShaderChunk.uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
        n.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",
        n.UniformsUtils = {
            merge: function(t) {
                for (var e = {}, i = 0; i < t.length; i++) {
                    var n = this.clone(t[i]);
                    for (var r in n)
                        e[r] = n[r]
                }
                return e
            },
            clone: function(t) {
                var e = {};
                for (var i in t) {
                    e[i] = {};
                    for (var r in t[i]) {
                        var a = t[i][r];
                        a instanceof n.Color || a instanceof n.Vector2 || a instanceof n.Vector3 || a instanceof n.Vector4 || a instanceof n.Matrix3 || a instanceof n.Matrix4 || a instanceof n.Texture ? e[i][r] = a.clone() : Array.isArray(a) ? e[i][r] = a.slice() : e[i][r] = a
                    }
                }
                return e
            }
        },
        n.UniformsLib = {
            common: {
                diffuse: {
                    value: new n.Color(15658734)
                },
                opacity: {
                    value: 1
                },
                map: {
                    value: null
                },
                offsetRepeat: {
                    value: new n.Vector4(0,0,1,1)
                },
                specularMap: {
                    value: null
                },
                alphaMap: {
                    value: null
                },
                envMap: {
                    value: null
                },
                flipEnvMap: {
                    value: -1
                },
                reflectivity: {
                    value: 1
                },
                refractionRatio: {
                    value: .98
                }
            },
            aomap: {
                aoMap: {
                    value: null
                },
                aoMapIntensity: {
                    value: 1
                }
            },
            lightmap: {
                lightMap: {
                    value: null
                },
                lightMapIntensity: {
                    value: 1
                }
            },
            emissivemap: {
                emissiveMap: {
                    value: null
                }
            },
            bumpmap: {
                bumpMap: {
                    value: null
                },
                bumpScale: {
                    value: 1
                }
            },
            normalmap: {
                normalMap: {
                    value: null
                },
                normalScale: {
                    value: new n.Vector2(1,1)
                }
            },
            displacementmap: {
                displacementMap: {
                    value: null
                },
                displacementScale: {
                    value: 1
                },
                displacementBias: {
                    value: 0
                }
            },
            roughnessmap: {
                roughnessMap: {
                    value: null
                }
            },
            metalnessmap: {
                metalnessMap: {
                    value: null
                }
            },
            fog: {
                fogDensity: {
                    value: 25e-5
                },
                fogNear: {
                    value: 1
                },
                fogFar: {
                    value: 2e3
                },
                fogColor: {
                    value: new n.Color(16777215)
                }
            },
            lights: {
                ambientLightColor: {
                    value: []
                },
                directionalLights: {
                    value: [],
                    properties: {
                        direction: {},
                        color: {},
                        shadow: {},
                        shadowBias: {},
                        shadowRadius: {},
                        shadowMapSize: {}
                    }
                },
                directionalShadowMap: {
                    value: []
                },
                directionalShadowMatrix: {
                    value: []
                },
                spotLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        direction: {},
                        distance: {},
                        coneCos: {},
                        penumbraCos: {},
                        decay: {},
                        shadow: {},
                        shadowBias: {},
                        shadowRadius: {},
                        shadowMapSize: {}
                    }
                },
                spotShadowMap: {
                    value: []
                },
                spotShadowMatrix: {
                    value: []
                },
                pointLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        decay: {},
                        distance: {},
                        shadow: {},
                        shadowBias: {},
                        shadowRadius: {},
                        shadowMapSize: {}
                    }
                },
                pointShadowMap: {
                    value: []
                },
                pointShadowMatrix: {
                    value: []
                },
                hemisphereLights: {
                    value: [],
                    properties: {
                        direction: {},
                        skyColor: {},
                        groundColor: {}
                    }
                }
            },
            points: {
                diffuse: {
                    value: new n.Color(15658734)
                },
                opacity: {
                    value: 1
                },
                size: {
                    value: 1
                },
                scale: {
                    value: 1
                },
                map: {
                    value: null
                },
                offsetRepeat: {
                    value: new n.Vector4(0,0,1,1)
                }
            }
        },
        n.ShaderChunk.cube_frag = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
        n.ShaderChunk.cube_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
        n.ShaderChunk.depth_frag = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
        n.ShaderChunk.depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
        n.ShaderChunk.distanceRGBA_frag = "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",
        n.ShaderChunk.distanceRGBA_vert = "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n",
        n.ShaderChunk.equirect_frag = "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
        n.ShaderChunk.equirect_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
        n.ShaderChunk.linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        n.ShaderChunk.linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
        n.ShaderChunk.meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        n.ShaderChunk.meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n}\n",
        n.ShaderChunk.meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        n.ShaderChunk.meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n}\n",
        n.ShaderChunk.meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        n.ShaderChunk.meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n}\n",
        n.ShaderChunk.meshphysical_frag = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        n.ShaderChunk.meshphysical_vert = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",
        n.ShaderChunk.normal_frag = "uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n\t#include <logdepthbuf_fragment>\n}\n",
        n.ShaderChunk.normal_vert = "varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvNormal = normalize( normalMatrix * normal );\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
        n.ShaderChunk.points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        n.ShaderChunk.points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",
        n.ShaderChunk.shadow_frag = "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n",
        n.ShaderChunk.shadow_vert = "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",
        n.ShaderLib = {
            basic: {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.fog]),
                vertexShader: n.ShaderChunk.meshbasic_vert,
                fragmentShader: n.ShaderChunk.meshbasic_frag
            },
            lambert: {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.lightmap, n.UniformsLib.emissivemap, n.UniformsLib.fog, n.UniformsLib.lights, {
                    emissive: {
                        value: new n.Color(0)
                    }
                }]),
                vertexShader: n.ShaderChunk.meshlambert_vert,
                fragmentShader: n.ShaderChunk.meshlambert_frag
            },
            phong: {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.lightmap, n.UniformsLib.emissivemap, n.UniformsLib.bumpmap, n.UniformsLib.normalmap, n.UniformsLib.displacementmap, n.UniformsLib.fog, n.UniformsLib.lights, {
                    emissive: {
                        value: new n.Color(0)
                    },
                    specular: {
                        value: new n.Color(1118481)
                    },
                    shininess: {
                        value: 30
                    }
                }]),
                vertexShader: n.ShaderChunk.meshphong_vert,
                fragmentShader: n.ShaderChunk.meshphong_frag
            },
            standard: {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.lightmap, n.UniformsLib.emissivemap, n.UniformsLib.bumpmap, n.UniformsLib.normalmap, n.UniformsLib.displacementmap, n.UniformsLib.roughnessmap, n.UniformsLib.metalnessmap, n.UniformsLib.fog, n.UniformsLib.lights, {
                    emissive: {
                        value: new n.Color(0)
                    },
                    roughness: {
                        value: .5
                    },
                    metalness: {
                        value: 0
                    },
                    envMapIntensity: {
                        value: 1
                    }
                }]),
                vertexShader: n.ShaderChunk.meshphysical_vert,
                fragmentShader: n.ShaderChunk.meshphysical_frag
            },
            points: {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.points, n.UniformsLib.fog]),
                vertexShader: n.ShaderChunk.points_vert,
                fragmentShader: n.ShaderChunk.points_frag
            },
            dashed: {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.fog, {
                    scale: {
                        value: 1
                    },
                    dashSize: {
                        value: 1
                    },
                    totalSize: {
                        value: 2
                    }
                }]),
                vertexShader: n.ShaderChunk.linedashed_vert,
                fragmentShader: n.ShaderChunk.linedashed_frag
            },
            depth: {
                uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.displacementmap]),
                vertexShader: n.ShaderChunk.depth_vert,
                fragmentShader: n.ShaderChunk.depth_frag
            },
            normal: {
                uniforms: {
                    opacity: {
                        value: 1
                    }
                },
                vertexShader: n.ShaderChunk.normal_vert,
                fragmentShader: n.ShaderChunk.normal_frag
            },
            cube: {
                uniforms: {
                    tCube: {
                        value: null
                    },
                    tFlip: {
                        value: -1
                    },
                    opacity: {
                        value: 1
                    }
                },
                vertexShader: n.ShaderChunk.cube_vert,
                fragmentShader: n.ShaderChunk.cube_frag
            },
            equirect: {
                uniforms: {
                    tEquirect: {
                        value: null
                    },
                    tFlip: {
                        value: -1
                    }
                },
                vertexShader: n.ShaderChunk.equirect_vert,
                fragmentShader: n.ShaderChunk.equirect_frag
            },
            distanceRGBA: {
                uniforms: {
                    lightPos: {
                        value: new n.Vector3
                    }
                },
                vertexShader: n.ShaderChunk.distanceRGBA_vert,
                fragmentShader: n.ShaderChunk.distanceRGBA_frag
            }
        },
        n.ShaderLib.physical = {
            uniforms: n.UniformsUtils.merge([n.ShaderLib.standard.uniforms, {
                clearCoat: {
                    value: 0
                },
                clearCoatRoughness: {
                    value: 0
                }
            }]),
            vertexShader: n.ShaderChunk.meshphysical_vert,
            fragmentShader: n.ShaderChunk.meshphysical_frag
        },
        n.WebGLRenderer = function(t) {
            function e() {
                return null === et ? dt : 1
            }
            function i(t, e, i, n) {
                G === !0 && (t *= n,
                e *= n,
                i *= n),
                Rt.clearColor(t, e, i, n)
            }
            function r() {
                Rt.init(),
                Rt.scissor(ot.copy(mt).multiplyScalar(dt)),
                Rt.viewport(lt.copy(vt).multiplyScalar(dt)),
                i(ct.r, ct.g, ct.b, ut)
            }
            function a() {
                tt = null,
                at = null,
                rt = "",
                nt = -1,
                Rt.reset()
            }
            function o(t) {
                t.preventDefault(),
                a(),
                r(),
                Dt.clear()
            }
            function s(t) {
                var e = t.target;
                e.removeEventListener("dispose", s),
                l(e)
            }
            function l(t) {
                h(t),
                Dt["delete"](t)
            }
            function h(t) {
                var e = Dt.get(t).program;
                t.program = void 0,
                void 0 !== e && Nt.releaseProgram(e)
            }
            function c(t, e, i, r) {
                var a;
                if (!(i instanceof n.InstancedBufferGeometry && (a = Lt.get("ANGLE_instanced_arrays"),
                null === a))) {
                    void 0 === r && (r = 0),
                    Rt.initAttributes();
                    var o = i.attributes
                      , s = e.getAttributes()
                      , l = t.defaultAttributeValues;
                    for (var h in s) {
                        var c = s[h];
                        if (c >= 0) {
                            var u = o[h];
                            if (void 0 !== u) {
                                var p = At.FLOAT
                                  , f = u.array
                                  , d = u.normalized;
                                f instanceof Float32Array ? p = At.FLOAT : f instanceof Float64Array || (f instanceof Uint16Array ? p = At.UNSIGNED_SHORT : f instanceof Int16Array ? p = At.SHORT : f instanceof Uint32Array ? p = At.UNSIGNED_INT : f instanceof Int32Array ? p = At.INT : f instanceof Int8Array ? p = At.BYTE : f instanceof Uint8Array && (p = At.UNSIGNED_BYTE));
                                var m = u.itemSize
                                  , g = kt.getAttributeBuffer(u);
                                if (u instanceof n.InterleavedBufferAttribute) {
                                    var v = u.data
                                      , y = v.stride
                                      , _ = u.offset;
                                    v instanceof n.InstancedInterleavedBuffer ? (Rt.enableAttributeAndDivisor(c, v.meshPerAttribute, a),
                                    void 0 === i.maxInstancedCount && (i.maxInstancedCount = v.meshPerAttribute * v.count)) : Rt.enableAttribute(c),
                                    At.bindBuffer(At.ARRAY_BUFFER, g),
                                    At.vertexAttribPointer(c, m, p, d, y * v.array.BYTES_PER_ELEMENT, (r * y + _) * v.array.BYTES_PER_ELEMENT)
                                } else
                                    u instanceof n.InstancedBufferAttribute ? (Rt.enableAttributeAndDivisor(c, u.meshPerAttribute, a),
                                    void 0 === i.maxInstancedCount && (i.maxInstancedCount = u.meshPerAttribute * u.count)) : Rt.enableAttribute(c),
                                    At.bindBuffer(At.ARRAY_BUFFER, g),
                                    At.vertexAttribPointer(c, m, p, d, 0, r * m * u.array.BYTES_PER_ELEMENT)
                            } else if (void 0 !== l) {
                                var x = l[h];
                                if (void 0 !== x)
                                    switch (x.length) {
                                    case 2:
                                        At.vertexAttrib2fv(c, x);
                                        break;
                                    case 3:
                                        At.vertexAttrib3fv(c, x);
                                        break;
                                    case 4:
                                        At.vertexAttrib4fv(c, x);
                                        break;
                                    default:
                                        At.vertexAttrib1fv(c, x)
                                    }
                            }
                        }
                    }
                    Rt.disableUnusedAttributes()
                }
            }
            function u(t, e) {
                return Math.abs(e[0]) - Math.abs(t[0])
            }
            function p(t, e) {
                return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.material.program && e.material.program && t.material.program !== e.material.program ? t.material.program.id - e.material.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
            }
            function f(t, e) {
                return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
            }
            function d(t, e, i, n, r) {
                var a, o;
                i.transparent ? (a = Y,
                o = ++Z) : (a = X,
                o = ++q);
                var s = a[o];
                void 0 !== s ? (s.id = t.id,
                s.object = t,
                s.geometry = e,
                s.material = i,
                s.z = Tt.z,
                s.group = r) : (s = {
                    id: t.id,
                    object: t,
                    geometry: e,
                    material: i,
                    z: Tt.z,
                    group: r
                },
                a.push(s))
            }
            function m(t) {
                var e = t.geometry;
                return null === e.boundingSphere && e.computeBoundingSphere(),
                wt.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),
                v(wt)
            }
            function g(t) {
                return wt.center.set(0, 0, 0),
                wt.radius = .7071067811865476,
                wt.applyMatrix4(t.matrixWorld),
                v(wt)
            }
            function v(t) {
                if (!yt.intersectsSphere(t))
                    return !1;
                var e = _t.numPlanes;
                if (0 === e)
                    return !0;
                var i = J.clippingPlanes
                  , n = t.center
                  , r = -t.radius
                  , a = 0;
                do
                    if (i[a].distanceToPoint(n) < r)
                        return !1;
                while (++a !== e);return !0
            }
            function y(t, e) {
                if (t.visible !== !1) {
                    if (t.layers.test(e.layers))
                        if (t instanceof n.Light)
                            W.push(t);
                        else if (t instanceof n.Sprite)
                            t.frustumCulled !== !1 && g(t) !== !0 || K.push(t);
                        else if (t instanceof n.LensFlare)
                            Q.push(t);
                        else if (t instanceof n.ImmediateRenderObject)
                            J.sortObjects === !0 && (Tt.setFromMatrixPosition(t.matrixWorld),
                            Tt.applyProjection(Mt)),
                            d(t, null, t.material, Tt.z, null);
                        else if ((t instanceof n.Mesh || t instanceof n.Line || t instanceof n.Points) && (t instanceof n.SkinnedMesh && t.skeleton.update(),
                        t.frustumCulled === !1 || m(t) === !0)) {
                            var i = t.material;
                            if (i.visible === !0) {
                                J.sortObjects === !0 && (Tt.setFromMatrixPosition(t.matrixWorld),
                                Tt.applyProjection(Mt));
                                var r = kt.update(t);
                                if (i instanceof n.MultiMaterial)
                                    for (var a = r.groups, o = i.materials, s = 0, l = a.length; s < l; s++) {
                                        var h = a[s]
                                          , c = o[h.materialIndex];
                                        c.visible === !0 && d(t, r, c, Tt.z, h)
                                    }
                                else
                                    d(t, r, i, Tt.z, null)
                            }
                        }
                    for (var u = t.children, s = 0, l = u.length; s < l; s++)
                        y(u[s], e)
                }
            }
            function _(t, e, i, r) {
                for (var a = 0, o = t.length; a < o; a++) {
                    var s = t[a]
                      , l = s.object
                      , h = s.geometry
                      , c = void 0 === r ? s.material : r
                      , u = s.group;
                    if (l.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, l.matrixWorld),
                    l.normalMatrix.getNormalMatrix(l.modelViewMatrix),
                    l instanceof n.ImmediateRenderObject) {
                        b(c);
                        var p = w(e, i, c, l);
                        rt = "",
                        l.render(function(t) {
                            J.renderBufferImmediate(t, p, c)
                        })
                    } else
                        J.renderBufferDirect(e, i, h, c, l, u)
                }
            }
            function x(t, e, i) {
                var r = Dt.get(t)
                  , a = Nt.getParameters(t, St, e, _t.numPlanes, i)
                  , o = Nt.getProgramCode(t, a)
                  , l = r.program
                  , c = !0;
                if (void 0 === l)
                    t.addEventListener("dispose", s);
                else if (l.code !== o)
                    h(t);
                else {
                    if (void 0 !== a.shaderID)
                        return;
                    c = !1
                }
                if (c) {
                    if (a.shaderID) {
                        var u = n.ShaderLib[a.shaderID];
                        r.__webglShader = {
                            name: t.type,
                            uniforms: n.UniformsUtils.clone(u.uniforms),
                            vertexShader: u.vertexShader,
                            fragmentShader: u.fragmentShader
                        }
                    } else
                        r.__webglShader = {
                            name: t.type,
                            uniforms: t.uniforms,
                            vertexShader: t.vertexShader,
                            fragmentShader: t.fragmentShader
                        };
                    t.__webglShader = r.__webglShader,
                    l = Nt.acquireProgram(t, a, o),
                    r.program = l,
                    t.program = l
                }
                var p = l.getAttributes();
                if (t.morphTargets) {
                    t.numSupportedMorphTargets = 0;
                    for (var f = 0; f < J.maxMorphTargets; f++)
                        p["morphTarget" + f] >= 0 && t.numSupportedMorphTargets++
                }
                if (t.morphNormals) {
                    t.numSupportedMorphNormals = 0;
                    for (var f = 0; f < J.maxMorphNormals; f++)
                        p["morphNormal" + f] >= 0 && t.numSupportedMorphNormals++
                }
                var d = r.__webglShader.uniforms;
                (t instanceof n.ShaderMaterial || t instanceof n.RawShaderMaterial) && t.clipping !== !0 || (r.numClippingPlanes = _t.numPlanes,
                d.clippingPlanes = _t.uniform),
                t.lights && (r.lightsHash = St.hash,
                d.ambientLightColor.value = St.ambient,
                d.directionalLights.value = St.directional,
                d.spotLights.value = St.spot,
                d.pointLights.value = St.point,
                d.hemisphereLights.value = St.hemi,
                d.directionalShadowMap.value = St.directionalShadowMap,
                d.directionalShadowMatrix.value = St.directionalShadowMatrix,
                d.spotShadowMap.value = St.spotShadowMap,
                d.spotShadowMatrix.value = St.spotShadowMatrix,
                d.pointShadowMap.value = St.pointShadowMap,
                d.pointShadowMatrix.value = St.pointShadowMatrix);
                var m = r.program.getUniforms()
                  , g = n.WebGLUniforms.seqWithValue(m.seq, d);
                r.uniformsList = g,
                r.dynamicUniforms = n.WebGLUniforms.splitDynamic(g, d)
            }
            function b(t) {
                t.side !== n.DoubleSide ? Rt.enable(At.CULL_FACE) : Rt.disable(At.CULL_FACE),
                Rt.setFlipSided(t.side === n.BackSide),
                t.transparent === !0 ? Rt.setBlending(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha) : Rt.setBlending(n.NoBlending),
                Rt.setDepthFunc(t.depthFunc),
                Rt.setDepthTest(t.depthTest),
                Rt.setDepthWrite(t.depthWrite),
                Rt.setColorWrite(t.colorWrite),
                Rt.setPolygonOffset(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
            }
            function w(t, e, i, r) {
                ht = 0;
                var a = Dt.get(i);
                if (xt) {
                    if (bt || t !== at) {
                        var o = t === at && i.id === nt;
                        _t.setState(i.clippingPlanes, i.clipShadows, t, a, o)
                    }
                    void 0 !== a.numClippingPlanes && a.numClippingPlanes !== _t.numPlanes && (i.needsUpdate = !0)
                }
                void 0 === a.program && (i.needsUpdate = !0),
                void 0 !== a.lightsHash && a.lightsHash !== St.hash && (i.needsUpdate = !0),
                i.needsUpdate && (x(i, e, r),
                i.needsUpdate = !1);
                var s = !1
                  , l = !1
                  , h = !1
                  , c = a.program
                  , u = c.getUniforms()
                  , p = a.__webglShader.uniforms;
                if (c.id !== tt && (At.useProgram(c.program),
                tt = c.id,
                s = !0,
                l = !0,
                h = !0),
                i.id !== nt && (nt = i.id,
                l = !0),
                s || t !== at) {
                    if (u.set(At, t, "projectionMatrix"),
                    Ot.logarithmicDepthBuffer && u.setValue(At, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                    t !== at && (at = t,
                    l = !0,
                    h = !0),
                    i instanceof n.ShaderMaterial || i instanceof n.MeshPhongMaterial || i instanceof n.MeshStandardMaterial || i.envMap) {
                        var f = u.map.cameraPosition;
                        void 0 !== f && f.setValue(At, Tt.setFromMatrixPosition(t.matrixWorld))
                    }
                    (i instanceof n.MeshPhongMaterial || i instanceof n.MeshLambertMaterial || i instanceof n.MeshBasicMaterial || i instanceof n.MeshStandardMaterial || i instanceof n.ShaderMaterial || i.skinning) && u.setValue(At, "viewMatrix", t.matrixWorldInverse),
                    u.set(At, J, "toneMappingExposure"),
                    u.set(At, J, "toneMappingWhitePoint")
                }
                if (i.skinning) {
                    u.setOptional(At, r, "bindMatrix"),
                    u.setOptional(At, r, "bindMatrixInverse");
                    var d = r.skeleton;
                    d && (Ot.floatVertexTextures && d.useVertexTexture ? (u.set(At, d, "boneTexture"),
                    u.set(At, d, "boneTextureWidth"),
                    u.set(At, d, "boneTextureHeight")) : u.setOptional(At, d, "boneMatrices"))
                }
                l && (i.lights && R(p, h),
                e && i.fog && A(p, e),
                (i instanceof n.MeshBasicMaterial || i instanceof n.MeshLambertMaterial || i instanceof n.MeshPhongMaterial || i instanceof n.MeshStandardMaterial || i instanceof n.MeshDepthMaterial) && M(p, i),
                i instanceof n.LineBasicMaterial ? T(p, i) : i instanceof n.LineDashedMaterial ? (T(p, i),
                S(p, i)) : i instanceof n.PointsMaterial ? C(p, i) : i instanceof n.MeshLambertMaterial ? P(p, i) : i instanceof n.MeshPhongMaterial ? E(p, i) : i instanceof n.MeshPhysicalMaterial ? O(p, i) : i instanceof n.MeshStandardMaterial ? L(p, i) : i instanceof n.MeshDepthMaterial ? i.displacementMap && (p.displacementMap.value = i.displacementMap,
                p.displacementScale.value = i.displacementScale,
                p.displacementBias.value = i.displacementBias) : i instanceof n.MeshNormalMaterial && (p.opacity.value = i.opacity),
                n.WebGLUniforms.upload(At, a.uniformsList, p, J)),
                u.set(At, r, "modelViewMatrix"),
                u.set(At, r, "normalMatrix"),
                u.setValue(At, "modelMatrix", r.matrixWorld);
                var m = a.dynamicUniforms;
                return null !== m && (n.WebGLUniforms.evalDynamic(m, p, r, t),
                n.WebGLUniforms.upload(At, m, p, J)),
                c
            }
            function M(t, e) {
                t.opacity.value = e.opacity,
                t.diffuse.value = e.color,
                e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
                t.map.value = e.map,
                t.specularMap.value = e.specularMap,
                t.alphaMap.value = e.alphaMap,
                e.aoMap && (t.aoMap.value = e.aoMap,
                t.aoMapIntensity.value = e.aoMapIntensity);
                var i;
                if (e.map ? i = e.map : e.specularMap ? i = e.specularMap : e.displacementMap ? i = e.displacementMap : e.normalMap ? i = e.normalMap : e.bumpMap ? i = e.bumpMap : e.roughnessMap ? i = e.roughnessMap : e.metalnessMap ? i = e.metalnessMap : e.alphaMap ? i = e.alphaMap : e.emissiveMap && (i = e.emissiveMap),
                void 0 !== i) {
                    i instanceof n.WebGLRenderTarget && (i = i.texture);
                    var r = i.offset
                      , a = i.repeat;
                    t.offsetRepeat.value.set(r.x, r.y, a.x, a.y)
                }
                t.envMap.value = e.envMap,
                t.flipEnvMap.value = e.envMap instanceof n.CubeTexture ? -1 : 1,
                t.reflectivity.value = e.reflectivity,
                t.refractionRatio.value = e.refractionRatio
            }
            function T(t, e) {
                t.diffuse.value = e.color,
                t.opacity.value = e.opacity
            }
            function S(t, e) {
                t.dashSize.value = e.dashSize,
                t.totalSize.value = e.dashSize + e.gapSize,
                t.scale.value = e.scale
            }
            function C(t, e) {
                if (t.diffuse.value = e.color,
                t.opacity.value = e.opacity,
                t.size.value = e.size * dt,
                t.scale.value = .5 * F.clientHeight,
                t.map.value = e.map,
                null !== e.map) {
                    var i = e.map.offset
                      , n = e.map.repeat;
                    t.offsetRepeat.value.set(i.x, i.y, n.x, n.y)
                }
            }
            function A(t, e) {
                t.fogColor.value = e.color,
                e instanceof n.Fog ? (t.fogNear.value = e.near,
                t.fogFar.value = e.far) : e instanceof n.FogExp2 && (t.fogDensity.value = e.density)
            }
            function P(t, e) {
                e.lightMap && (t.lightMap.value = e.lightMap,
                t.lightMapIntensity.value = e.lightMapIntensity),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
            }
            function E(t, e) {
                t.specular.value = e.specular,
                t.shininess.value = Math.max(e.shininess, 1e-4),
                e.lightMap && (t.lightMap.value = e.lightMap,
                t.lightMapIntensity.value = e.lightMapIntensity),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                t.bumpScale.value = e.bumpScale),
                e.normalMap && (t.normalMap.value = e.normalMap,
                t.normalScale.value.copy(e.normalScale)),
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias)
            }
            function L(t, e) {
                t.roughness.value = e.roughness,
                t.metalness.value = e.metalness,
                e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
                e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
                e.lightMap && (t.lightMap.value = e.lightMap,
                t.lightMapIntensity.value = e.lightMapIntensity),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                t.bumpScale.value = e.bumpScale),
                e.normalMap && (t.normalMap.value = e.normalMap,
                t.normalScale.value.copy(e.normalScale)),
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias),
                e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
            }
            function O(t, e) {
                t.clearCoat.value = e.clearCoat,
                t.clearCoatRoughness.value = e.clearCoatRoughness,
                L(t, e)
            }
            function R(t, e) {
                t.ambientLightColor.needsUpdate = e,
                t.directionalLights.needsUpdate = e,
                t.pointLights.needsUpdate = e,
                t.spotLights.needsUpdate = e,
                t.hemisphereLights.needsUpdate = e
            }
            function D(t) {
                for (var e = 0, i = 0, n = t.length; i < n; i++) {
                    var r = t[i];
                    r.castShadow && (St.shadows[e++] = r)
                }
                St.shadows.length = e
            }
            function I(t, e) {
                var i, r, a, o, s, l, h, c = 0, u = 0, p = 0, f = e.matrixWorldInverse, d = 0, m = 0, g = 0, v = 0;
                for (i = 0,
                r = t.length; i < r; i++)
                    if (a = t[i],
                    o = a.color,
                    s = a.intensity,
                    l = a.distance,
                    h = a.shadow && a.shadow.map ? a.shadow.map.texture : null,
                    a instanceof n.AmbientLight)
                        c += o.r * s,
                        u += o.g * s,
                        p += o.b * s;
                    else if (a instanceof n.DirectionalLight) {
                        var y = Ft.get(a);
                        y.color.copy(a.color).multiplyScalar(a.intensity),
                        y.direction.setFromMatrixPosition(a.matrixWorld),
                        Tt.setFromMatrixPosition(a.target.matrixWorld),
                        y.direction.sub(Tt),
                        y.direction.transformDirection(f),
                        y.shadow = a.castShadow,
                        a.castShadow && (y.shadowBias = a.shadow.bias,
                        y.shadowRadius = a.shadow.radius,
                        y.shadowMapSize = a.shadow.mapSize),
                        St.directionalShadowMap[d] = h,
                        St.directionalShadowMatrix[d] = a.shadow.matrix,
                        St.directional[d++] = y
                    } else if (a instanceof n.SpotLight) {
                        var y = Ft.get(a);
                        y.position.setFromMatrixPosition(a.matrixWorld),
                        y.position.applyMatrix4(f),
                        y.color.copy(o).multiplyScalar(s),
                        y.distance = l,
                        y.direction.setFromMatrixPosition(a.matrixWorld),
                        Tt.setFromMatrixPosition(a.target.matrixWorld),
                        y.direction.sub(Tt),
                        y.direction.transformDirection(f),
                        y.coneCos = Math.cos(a.angle),
                        y.penumbraCos = Math.cos(a.angle * (1 - a.penumbra)),
                        y.decay = 0 === a.distance ? 0 : a.decay,
                        y.shadow = a.castShadow,
                        a.castShadow && (y.shadowBias = a.shadow.bias,
                        y.shadowRadius = a.shadow.radius,
                        y.shadowMapSize = a.shadow.mapSize),
                        St.spotShadowMap[g] = h,
                        St.spotShadowMatrix[g] = a.shadow.matrix,
                        St.spot[g++] = y
                    } else if (a instanceof n.PointLight) {
                        var y = Ft.get(a);
                        y.position.setFromMatrixPosition(a.matrixWorld),
                        y.position.applyMatrix4(f),
                        y.color.copy(a.color).multiplyScalar(a.intensity),
                        y.distance = a.distance,
                        y.decay = 0 === a.distance ? 0 : a.decay,
                        y.shadow = a.castShadow,
                        a.castShadow && (y.shadowBias = a.shadow.bias,
                        y.shadowRadius = a.shadow.radius,
                        y.shadowMapSize = a.shadow.mapSize),
                        St.pointShadowMap[m] = h,
                        void 0 === St.pointShadowMatrix[m] && (St.pointShadowMatrix[m] = new n.Matrix4),
                        Tt.setFromMatrixPosition(a.matrixWorld).negate(),
                        St.pointShadowMatrix[m].identity().setPosition(Tt),
                        St.point[m++] = y
                    } else if (a instanceof n.HemisphereLight) {
                        var y = Ft.get(a);
                        y.direction.setFromMatrixPosition(a.matrixWorld),
                        y.direction.transformDirection(f),
                        y.direction.normalize(),
                        y.skyColor.copy(a.color).multiplyScalar(s),
                        y.groundColor.copy(a.groundColor).multiplyScalar(s),
                        St.hemi[v++] = y
                    }
                St.ambient[0] = c,
                St.ambient[1] = u,
                St.ambient[2] = p,
                St.directional.length = d,
                St.spot.length = g,
                St.point.length = m,
                St.hemi.length = v,
                St.hash = d + "," + m + "," + g + "," + v + "," + St.shadows.length
            }
            function k() {
                var t = ht;
                return t >= Ot.maxTextures,
                ht += 1,
                t
            }
            function N(t) {
                var e;
                if (t === n.RepeatWrapping)
                    return At.REPEAT;
                if (t === n.ClampToEdgeWrapping)
                    return At.CLAMP_TO_EDGE;
                if (t === n.MirroredRepeatWrapping)
                    return At.MIRRORED_REPEAT;
                if (t === n.NearestFilter)
                    return At.NEAREST;
                if (t === n.NearestMipMapNearestFilter)
                    return At.NEAREST_MIPMAP_NEAREST;
                if (t === n.NearestMipMapLinearFilter)
                    return At.NEAREST_MIPMAP_LINEAR;
                if (t === n.LinearFilter)
                    return At.LINEAR;
                if (t === n.LinearMipMapNearestFilter)
                    return At.LINEAR_MIPMAP_NEAREST;
                if (t === n.LinearMipMapLinearFilter)
                    return At.LINEAR_MIPMAP_LINEAR;
                if (t === n.UnsignedByteType)
                    return At.UNSIGNED_BYTE;
                if (t === n.UnsignedShort4444Type)
                    return At.UNSIGNED_SHORT_4_4_4_4;
                if (t === n.UnsignedShort5551Type)
                    return At.UNSIGNED_SHORT_5_5_5_1;
                if (t === n.UnsignedShort565Type)
                    return At.UNSIGNED_SHORT_5_6_5;
                if (t === n.ByteType)
                    return At.BYTE;
                if (t === n.ShortType)
                    return At.SHORT;
                if (t === n.UnsignedShortType)
                    return At.UNSIGNED_SHORT;
                if (t === n.IntType)
                    return At.INT;
                if (t === n.UnsignedIntType)
                    return At.UNSIGNED_INT;
                if (t === n.FloatType)
                    return At.FLOAT;
                if (e = Lt.get("OES_texture_half_float"),
                null !== e && t === n.HalfFloatType)
                    return e.HALF_FLOAT_OES;
                if (t === n.AlphaFormat)
                    return At.ALPHA;
                if (t === n.RGBFormat)
                    return At.RGB;
                if (t === n.RGBAFormat)
                    return At.RGBA;
                if (t === n.LuminanceFormat)
                    return At.LUMINANCE;
                if (t === n.LuminanceAlphaFormat)
                    return At.LUMINANCE_ALPHA;
                if (t === n.DepthFormat)
                    return At.DEPTH_COMPONENT;
                if (t === n.AddEquation)
                    return At.FUNC_ADD;
                if (t === n.SubtractEquation)
                    return At.FUNC_SUBTRACT;
                if (t === n.ReverseSubtractEquation)
                    return At.FUNC_REVERSE_SUBTRACT;
                if (t === n.ZeroFactor)
                    return At.ZERO;
                if (t === n.OneFactor)
                    return At.ONE;
                if (t === n.SrcColorFactor)
                    return At.SRC_COLOR;
                if (t === n.OneMinusSrcColorFactor)
                    return At.ONE_MINUS_SRC_COLOR;
                if (t === n.SrcAlphaFactor)
                    return At.SRC_ALPHA;
                if (t === n.OneMinusSrcAlphaFactor)
                    return At.ONE_MINUS_SRC_ALPHA;
                if (t === n.DstAlphaFactor)
                    return At.DST_ALPHA;
                if (t === n.OneMinusDstAlphaFactor)
                    return At.ONE_MINUS_DST_ALPHA;
                if (t === n.DstColorFactor)
                    return At.DST_COLOR;
                if (t === n.OneMinusDstColorFactor)
                    return At.ONE_MINUS_DST_COLOR;
                if (t === n.SrcAlphaSaturateFactor)
                    return At.SRC_ALPHA_SATURATE;
                if (e = Lt.get("WEBGL_compressed_texture_s3tc"),
                null !== e) {
                    if (t === n.RGB_S3TC_DXT1_Format)
                        return e.COMPRESSED_RGB_S3TC_DXT1_EXT;
                    if (t === n.RGBA_S3TC_DXT1_Format)
                        return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                    if (t === n.RGBA_S3TC_DXT3_Format)
                        return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                    if (t === n.RGBA_S3TC_DXT5_Format)
                        return e.COMPRESSED_RGBA_S3TC_DXT5_EXT
                }
                if (e = Lt.get("WEBGL_compressed_texture_pvrtc"),
                null !== e) {
                    if (t === n.RGB_PVRTC_4BPPV1_Format)
                        return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                    if (t === n.RGB_PVRTC_2BPPV1_Format)
                        return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                    if (t === n.RGBA_PVRTC_4BPPV1_Format)
                        return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                    if (t === n.RGBA_PVRTC_2BPPV1_Format)
                        return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                }
                if (e = Lt.get("WEBGL_compressed_texture_etc1"),
                null !== e && t === n.RGB_ETC1_Format)
                    return e.COMPRESSED_RGB_ETC1_WEBGL;
                if (e = Lt.get("EXT_blend_minmax"),
                null !== e) {
                    if (t === n.MinEquation)
                        return e.MIN_EXT;
                    if (t === n.MaxEquation)
                        return e.MAX_EXT
                }
                return 0
            }
            t = t || {};
            var F = void 0 !== t.canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
              , B = void 0 !== t.context ? t.context : null
              , U = void 0 !== t.alpha && t.alpha
              , z = void 0 === t.depth || t.depth
              , j = void 0 === t.stencil || t.stencil
              , V = void 0 !== t.antialias && t.antialias
              , G = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
              , H = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
              , W = []
              , X = []
              , q = -1
              , Y = []
              , Z = -1
              , $ = new Float32Array(8)
              , K = []
              , Q = [];
            this.domElement = F,
            this.context = null,
            this.autoClear = !0,
            this.autoClearColor = !0,
            this.autoClearDepth = !0,
            this.autoClearStencil = !0,
            this.sortObjects = !0,
            this.clippingPlanes = [],
            this.localClippingEnabled = !1,
            this.gammaFactor = 2,
            this.gammaInput = !1,
            this.gammaOutput = !1,
            this.physicallyCorrectLights = !1,
            this.toneMapping = n.LinearToneMapping,
            this.toneMappingExposure = 1,
            this.toneMappingWhitePoint = 1,
            this.maxMorphTargets = 8,
            this.maxMorphNormals = 4;
            var J = this
              , tt = null
              , et = null
              , it = null
              , nt = -1
              , rt = ""
              , at = null
              , ot = new n.Vector4
              , st = null
              , lt = new n.Vector4
              , ht = 0
              , ct = new n.Color(0)
              , ut = 0
              , pt = F.width
              , ft = F.height
              , dt = 1
              , mt = new n.Vector4(0,0,pt,ft)
              , gt = !1
              , vt = new n.Vector4(0,0,pt,ft)
              , yt = new n.Frustum
              , _t = new n.WebGLClipping
              , xt = !1
              , bt = !1
              , wt = new n.Sphere
              , Mt = new n.Matrix4
              , Tt = new n.Vector3
              , St = {
                hash: "",
                ambient: [0, 0, 0],
                directional: [],
                directionalShadowMap: [],
                directionalShadowMatrix: [],
                spot: [],
                spotShadowMap: [],
                spotShadowMatrix: [],
                point: [],
                pointShadowMap: [],
                pointShadowMatrix: [],
                hemi: [],
                shadows: []
            }
              , Ct = {
                calls: 0,
                vertices: 0,
                faces: 0,
                points: 0
            };
            this.info = {
                render: Ct,
                memory: {
                    geometries: 0,
                    textures: 0
                },
                programs: null
            };
            var At;
            try {
                var Pt = {
                    alpha: U,
                    depth: z,
                    stencil: j,
                    antialias: V,
                    premultipliedAlpha: G,
                    preserveDrawingBuffer: H
                };
                if (At = B || F.getContext("webgl", Pt) || F.getContext("experimental-webgl", Pt),
                null === At)
                    throw null !== F.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                void 0 === At.getShaderPrecisionFormat && (At.getShaderPrecisionFormat = function() {
                    return {
                        rangeMin: 1,
                        rangeMax: 1,
                        precision: 1
                    }
                }
                ),
                F.addEventListener("webglcontextlost", o, !1)
            } catch (Et) {}
            var Lt = new n.WebGLExtensions(At);
            Lt.get("WEBGL_depth_texture"),
            Lt.get("OES_texture_float"),
            Lt.get("OES_texture_float_linear"),
            Lt.get("OES_texture_half_float"),
            Lt.get("OES_texture_half_float_linear"),
            Lt.get("OES_standard_derivatives"),
            Lt.get("ANGLE_instanced_arrays"),
            Lt.get("OES_element_index_uint") && (n.BufferGeometry.MaxIndex = 4294967296);
            var Ot = new n.WebGLCapabilities(At,Lt,t)
              , Rt = new n.WebGLState(At,Lt,N)
              , Dt = new n.WebGLProperties
              , It = new n.WebGLTextures(At,Lt,Rt,Dt,Ot,N,this.info)
              , kt = new n.WebGLObjects(At,Dt,this.info)
              , Nt = new n.WebGLPrograms(this,Ot)
              , Ft = new n.WebGLLights;
            this.info.programs = Nt.programs;
            var Bt = new n.WebGLBufferRenderer(At,Lt,Ct)
              , Ut = new n.WebGLIndexedBufferRenderer(At,Lt,Ct)
              , zt = new n.OrthographicCamera((-1),1,1,(-1),0,1)
              , jt = new n.PerspectiveCamera
              , Vt = new n.Mesh(new n.PlaneBufferGeometry(2,2),new n.MeshBasicMaterial({
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            }))
              , Gt = n.ShaderLib.cube
              , Ht = new n.Mesh(new n.BoxBufferGeometry(5,5,5),new n.ShaderMaterial({
                uniforms: Gt.uniforms,
                vertexShader: Gt.vertexShader,
                fragmentShader: Gt.fragmentShader,
                side: n.BackSide,
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            }));
            r(),
            this.context = At,
            this.capabilities = Ot,
            this.extensions = Lt,
            this.properties = Dt,
            this.state = Rt;
            var Wt = new n.WebGLShadowMap(this,St,kt,Ot);
            this.shadowMap = Wt;
            var Xt = new n.SpritePlugin(this,K)
              , qt = new n.LensFlarePlugin(this,Q);
            this.getContext = function() {
                return At
            }
            ,
            this.getContextAttributes = function() {
                return At.getContextAttributes()
            }
            ,
            this.forceContextLoss = function() {
                Lt.get("WEBGL_lose_context").loseContext()
            }
            ,
            this.getMaxAnisotropy = function() {
                return Ot.getMaxAnisotropy()
            }
            ,
            this.getPrecision = function() {
                return Ot.precision
            }
            ,
            this.getPixelRatio = function() {
                return dt
            }
            ,
            this.setPixelRatio = function(t) {
                void 0 !== t && (dt = t,
                this.setSize(vt.z, vt.w, !1))
            }
            ,
            this.getSize = function() {
                return {
                    width: pt,
                    height: ft
                }
            }
            ,
            this.setSize = function(t, e, i) {
                pt = t,
                ft = e,
                F.width = t * dt,
                F.height = e * dt,
                i !== !1 && (F.style.width = t + "px",
                F.style.height = e + "px"),
                this.setViewport(0, 0, t, e)
            }
            ,
            this.setViewport = function(t, e, i, n) {
                Rt.viewport(vt.set(t, e, i, n))
            }
            ,
            this.setScissor = function(t, e, i, n) {
                Rt.scissor(mt.set(t, e, i, n))
            }
            ,
            this.setScissorTest = function(t) {
                Rt.setScissorTest(gt = t)
            }
            ,
            this.getClearColor = function() {
                return ct
            }
            ,
            this.setClearColor = function(t, e) {
                ct.set(t),
                ut = void 0 !== e ? e : 1,
                i(ct.r, ct.g, ct.b, ut)
            }
            ,
            this.getClearAlpha = function() {
                return ut
            }
            ,
            this.setClearAlpha = function(t) {
                ut = t,
                i(ct.r, ct.g, ct.b, ut)
            }
            ,
            this.clear = function(t, e, i) {
                var n = 0;
                (void 0 === t || t) && (n |= At.COLOR_BUFFER_BIT),
                (void 0 === e || e) && (n |= At.DEPTH_BUFFER_BIT),
                (void 0 === i || i) && (n |= At.STENCIL_BUFFER_BIT),
                At.clear(n)
            }
            ,
            this.clearColor = function() {
                this.clear(!0, !1, !1)
            }
            ,
            this.clearDepth = function() {
                this.clear(!1, !0, !1)
            }
            ,
            this.clearStencil = function() {
                this.clear(!1, !1, !0)
            }
            ,
            this.clearTarget = function(t, e, i, n) {
                this.setRenderTarget(t),
                this.clear(e, i, n)
            }
            ,
            this.resetGLState = a,
            this.dispose = function() {
                Y = [],
                Z = -1,
                X = [],
                q = -1,
                F.removeEventListener("webglcontextlost", o, !1)
            }
            ,
            this.renderBufferImmediate = function(t, e, i) {
                Rt.initAttributes();
                var r = Dt.get(t);
                t.hasPositions && !r.position && (r.position = At.createBuffer()),
                t.hasNormals && !r.normal && (r.normal = At.createBuffer()),
                t.hasUvs && !r.uv && (r.uv = At.createBuffer()),
                t.hasColors && !r.color && (r.color = At.createBuffer());
                var a = e.getAttributes();
                if (t.hasPositions && (At.bindBuffer(At.ARRAY_BUFFER, r.position),
                At.bufferData(At.ARRAY_BUFFER, t.positionArray, At.DYNAMIC_DRAW),
                Rt.enableAttribute(a.position),
                At.vertexAttribPointer(a.position, 3, At.FLOAT, !1, 0, 0)),
                t.hasNormals) {
                    if (At.bindBuffer(At.ARRAY_BUFFER, r.normal),
                    "MeshPhongMaterial" !== i.type && "MeshStandardMaterial" !== i.type && "MeshPhysicalMaterial" !== i.type && i.shading === n.FlatShading)
                        for (var o = 0, s = 3 * t.count; o < s; o += 9) {
                            var l = t.normalArray
                              , h = (l[o + 0] + l[o + 3] + l[o + 6]) / 3
                              , c = (l[o + 1] + l[o + 4] + l[o + 7]) / 3
                              , u = (l[o + 2] + l[o + 5] + l[o + 8]) / 3;
                            l[o + 0] = h,
                            l[o + 1] = c,
                            l[o + 2] = u,
                            l[o + 3] = h,
                            l[o + 4] = c,
                            l[o + 5] = u,
                            l[o + 6] = h,
                            l[o + 7] = c,
                            l[o + 8] = u
                        }
                    At.bufferData(At.ARRAY_BUFFER, t.normalArray, At.DYNAMIC_DRAW),
                    Rt.enableAttribute(a.normal),
                    At.vertexAttribPointer(a.normal, 3, At.FLOAT, !1, 0, 0)
                }
                t.hasUvs && i.map && (At.bindBuffer(At.ARRAY_BUFFER, r.uv),
                At.bufferData(At.ARRAY_BUFFER, t.uvArray, At.DYNAMIC_DRAW),
                Rt.enableAttribute(a.uv),
                At.vertexAttribPointer(a.uv, 2, At.FLOAT, !1, 0, 0)),
                t.hasColors && i.vertexColors !== n.NoColors && (At.bindBuffer(At.ARRAY_BUFFER, r.color),
                At.bufferData(At.ARRAY_BUFFER, t.colorArray, At.DYNAMIC_DRAW),
                Rt.enableAttribute(a.color),
                At.vertexAttribPointer(a.color, 3, At.FLOAT, !1, 0, 0)),
                Rt.disableUnusedAttributes(),
                At.drawArrays(At.TRIANGLES, 0, t.count),
                t.count = 0
            }
            ,
            this.renderBufferDirect = function(t, i, r, a, o, s) {
                b(a);
                var l = w(t, i, a, o)
                  , h = !1
                  , p = r.id + "_" + l.id + "_" + a.wireframe;
                p !== rt && (rt = p,
                h = !0);
                var f = o.morphTargetInfluences;
                if (void 0 !== f) {
                    for (var d = [], m = 0, g = f.length; m < g; m++) {
                        var v = f[m];
                        d.push([v, m])
                    }
                    d.sort(u),
                    d.length > 8 && (d.length = 8);
                    for (var y = r.morphAttributes, m = 0, g = d.length; m < g; m++) {
                        var v = d[m];
                        if ($[m] = v[0],
                        0 !== v[0]) {
                            var _ = v[1];
                            a.morphTargets === !0 && y.position && r.addAttribute("morphTarget" + m, y.position[_]),
                            a.morphNormals === !0 && y.normal && r.addAttribute("morphNormal" + m, y.normal[_])
                        } else
                            a.morphTargets === !0 && r.removeAttribute("morphTarget" + m),
                            a.morphNormals === !0 && r.removeAttribute("morphNormal" + m)
                    }
                    l.getUniforms().setValue(At, "morphTargetInfluences", $),
                    h = !0
                }
                var _ = r.index
                  , x = r.attributes.position;
                a.wireframe === !0 && (_ = kt.getWireframeAttribute(r));
                var M;
                null !== _ ? (M = Ut,
                M.setIndex(_)) : M = Bt,
                h && (c(a, l, r),
                null !== _ && At.bindBuffer(At.ELEMENT_ARRAY_BUFFER, kt.getAttributeBuffer(_)));
                var T = 0
                  , S = 1 / 0;
                null !== _ ? S = _.count : void 0 !== x && (S = x.count);
                var C = r.drawRange.start
                  , A = r.drawRange.count
                  , P = null !== s ? s.start : 0
                  , E = null !== s ? s.count : 1 / 0
                  , L = Math.max(T, C, P)
                  , O = Math.min(T + S, C + A, P + E) - 1
                  , R = Math.max(0, O - L + 1);
                if (o instanceof n.Mesh)
                    if (a.wireframe === !0)
                        Rt.setLineWidth(a.wireframeLinewidth * e()),
                        M.setMode(At.LINES);
                    else
                        switch (o.drawMode) {
                        case n.TrianglesDrawMode:
                            M.setMode(At.TRIANGLES);
                            break;
                        case n.TriangleStripDrawMode:
                            M.setMode(At.TRIANGLE_STRIP);
                            break;
                        case n.TriangleFanDrawMode:
                            M.setMode(At.TRIANGLE_FAN)
                        }
                else if (o instanceof n.Line) {
                    var D = a.linewidth;
                    void 0 === D && (D = 1),
                    Rt.setLineWidth(D * e()),
                    o instanceof n.LineSegments ? M.setMode(At.LINES) : M.setMode(At.LINE_STRIP)
                } else
                    o instanceof n.Points && M.setMode(At.POINTS);
                r instanceof n.InstancedBufferGeometry ? r.maxInstancedCount > 0 && M.renderInstances(r, L, R) : M.render(L, R)
            }
            ,
            this.render = function(t, e, r, a) {
                if (e instanceof n.Camera != !1) {
                    var o = t.fog;
                    rt = "",
                    nt = -1,
                    at = null,
                    t.autoUpdate === !0 && t.updateMatrixWorld(),
                    null === e.parent && e.updateMatrixWorld(),
                    e.matrixWorldInverse.getInverse(e.matrixWorld),
                    Mt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                    yt.setFromMatrix(Mt),
                    W.length = 0,
                    q = -1,
                    Z = -1,
                    K.length = 0,
                    Q.length = 0,
                    bt = this.localClippingEnabled,
                    xt = _t.init(this.clippingPlanes, bt, e),
                    y(t, e),
                    X.length = q + 1,
                    Y.length = Z + 1,
                    J.sortObjects === !0 && (X.sort(p),
                    Y.sort(f)),
                    xt && _t.beginShadows(),
                    D(W),
                    Wt.render(t, e),
                    I(W, e),
                    xt && _t.endShadows(),
                    Ct.calls = 0,
                    Ct.vertices = 0,
                    Ct.faces = 0,
                    Ct.points = 0,
                    void 0 === r && (r = null),
                    this.setRenderTarget(r);
                    var s = t.background;
                    if (null === s ? i(ct.r, ct.g, ct.b, ut) : s instanceof n.Color && i(s.r, s.g, s.b, 1),
                    (this.autoClear || a) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil),
                    s instanceof n.CubeTexture ? (jt.projectionMatrix.copy(e.projectionMatrix),
                    jt.matrixWorld.extractRotation(e.matrixWorld),
                    jt.matrixWorldInverse.getInverse(jt.matrixWorld),
                    Ht.material.uniforms.tCube.value = s,
                    Ht.modelViewMatrix.multiplyMatrices(jt.matrixWorldInverse, Ht.matrixWorld),
                    kt.update(Ht),
                    J.renderBufferDirect(jt, null, Ht.geometry, Ht.material, Ht, null)) : s instanceof n.Texture && (Vt.material.map = s,
                    kt.update(Vt),
                    J.renderBufferDirect(zt, null, Vt.geometry, Vt.material, Vt, null)),
                    t.overrideMaterial) {
                        var l = t.overrideMaterial;
                        _(X, e, o, l),
                        _(Y, e, o, l)
                    } else
                        Rt.setBlending(n.NoBlending),
                        _(X, e, o),
                        _(Y, e, o);
                    Xt.render(t, e),
                    qt.render(t, e, lt),
                    r && It.updateRenderTargetMipmap(r),
                    Rt.setDepthTest(!0),
                    Rt.setDepthWrite(!0),
                    Rt.setColorWrite(!0)
                }
            }
            ,
            this.setFaceCulling = function(t, e) {
                Rt.setCullFace(t),
                Rt.setFlipSided(e === n.FrontFaceDirectionCW)
            }
            ,
            this.allocTextureUnit = k,
            this.setTexture2D = function() {
                var t = !1;
                return function(e, i) {
                    e instanceof n.WebGLRenderTarget && (t || (t = !0),
                    e = e.texture),
                    It.setTexture2D(e, i)
                }
            }(),
            this.setTexture = function() {
                var t = !1;
                return function(e, i) {
                    t || (t = !0),
                    It.setTexture2D(e, i)
                }
            }(),
            this.setTextureCube = function() {
                var t = !1;
                return function(e, i) {
                    e instanceof n.WebGLRenderTargetCube && (t || (t = !0),
                    e = e.texture),
                    e instanceof n.CubeTexture || Array.isArray(e.image) && 6 === e.image.length ? It.setTextureCube(e, i) : It.setTextureCubeDynamic(e, i)
                }
            }(),
            this.getCurrentRenderTarget = function() {
                return et
            }
            ,
            this.setRenderTarget = function(t) {
                et = t,
                t && void 0 === Dt.get(t).__webglFramebuffer && It.setupRenderTarget(t);
                var e, i = t instanceof n.WebGLRenderTargetCube;
                if (t) {
                    var r = Dt.get(t);
                    e = i ? r.__webglFramebuffer[t.activeCubeFace] : r.__webglFramebuffer,
                    ot.copy(t.scissor),
                    st = t.scissorTest,
                    lt.copy(t.viewport)
                } else
                    e = null,
                    ot.copy(mt).multiplyScalar(dt),
                    st = gt,
                    lt.copy(vt).multiplyScalar(dt);
                if (it !== e && (At.bindFramebuffer(At.FRAMEBUFFER, e),
                it = e),
                Rt.scissor(ot),
                Rt.setScissorTest(st),
                Rt.viewport(lt),
                i) {
                    var a = Dt.get(t.texture);
                    At.framebufferTexture2D(At.FRAMEBUFFER, At.COLOR_ATTACHMENT0, At.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, a.__webglTexture, t.activeMipMapLevel)
                }
            }
            ,
            this.readRenderTargetPixels = function(t, e, i, r, a, o) {
                if (t instanceof n.WebGLRenderTarget != !1) {
                    var s = Dt.get(t).__webglFramebuffer;
                    if (s) {
                        var l = !1;
                        s !== it && (At.bindFramebuffer(At.FRAMEBUFFER, s),
                        l = !0);
                        try {
                            var h = t.texture;
                            if (h.format !== n.RGBAFormat && N(h.format) !== At.getParameter(At.IMPLEMENTATION_COLOR_READ_FORMAT))
                                return;
                            if (!(h.type === n.UnsignedByteType || N(h.type) === At.getParameter(At.IMPLEMENTATION_COLOR_READ_TYPE) || h.type === n.FloatType && Lt.get("WEBGL_color_buffer_float") || h.type === n.HalfFloatType && Lt.get("EXT_color_buffer_half_float")))
                                return;
                            At.checkFramebufferStatus(At.FRAMEBUFFER) === At.FRAMEBUFFER_COMPLETE && e >= 0 && e <= t.width - r && i >= 0 && i <= t.height - a && At.readPixels(e, i, r, a, N(h.format), N(h.type), o)
                        } finally {
                            l && At.bindFramebuffer(At.FRAMEBUFFER, it)
                        }
                    }
                }
            }
        }
        ,
        n.WebGLRenderTarget = function(t, e, i) {
            this.uuid = n.Math.generateUUID(),
            this.width = t,
            this.height = e,
            this.scissor = new n.Vector4(0,0,t,e),
            this.scissorTest = !1,
            this.viewport = new n.Vector4(0,0,t,e),
            i = i || {},
            void 0 === i.minFilter && (i.minFilter = n.LinearFilter),
            this.texture = new n.Texture((void 0),(void 0),i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),
            this.depthBuffer = void 0 === i.depthBuffer || i.depthBuffer,
            this.stencilBuffer = void 0 === i.stencilBuffer || i.stencilBuffer,
            this.depthTexture = null
        }
        ,
        Object.assign(n.WebGLRenderTarget.prototype, n.EventDispatcher.prototype, {
            setSize: function(t, e) {
                this.width === t && this.height === e || (this.width = t,
                this.height = e,
                this.dispose()),
                this.viewport.set(0, 0, t, e),
                this.scissor.set(0, 0, t, e)
            },
            clone: function() {
                return (new this.constructor).copy(this)
            },
            copy: function(t) {
                return this.width = t.width,
                this.height = t.height,
                this.viewport.copy(t.viewport),
                this.texture = t.texture.clone(),
                this.depthBuffer = t.depthBuffer,
                this.stencilBuffer = t.stencilBuffer,
                this.depthTexture = t.depthTexture,
                this
            },
            dispose: function() {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        }),
        n.WebGLRenderTargetCube = function(t, e, i) {
            n.WebGLRenderTarget.call(this, t, e, i),
            this.activeCubeFace = 0,
            this.activeMipMapLevel = 0
        }
        ,
        n.WebGLRenderTargetCube.prototype = Object.create(n.WebGLRenderTarget.prototype),
        n.WebGLRenderTargetCube.prototype.constructor = n.WebGLRenderTargetCube,
        n.WebGLBufferRenderer = function(t, e, i) {
            function r(t) {
                s = t
            }
            function a(e, n) {
                t.drawArrays(s, e, n),
                i.calls++,
                i.vertices += n,
                s === t.TRIANGLES && (i.faces += n / 3)
            }
            function o(r) {
                var a = e.get("ANGLE_instanced_arrays");
                if (null !== a) {
                    var o = r.attributes.position
                      , l = 0;
                    o instanceof n.InterleavedBufferAttribute ? (l = o.data.count,
                    a.drawArraysInstancedANGLE(s, 0, l, r.maxInstancedCount)) : (l = o.count,
                    a.drawArraysInstancedANGLE(s, 0, l, r.maxInstancedCount)),
                    i.calls++,
                    i.vertices += l * r.maxInstancedCount,
                    s === t.TRIANGLES && (i.faces += r.maxInstancedCount * l / 3)
                }
            }
            var s;
            this.setMode = r,
            this.render = a,
            this.renderInstances = o
        }
        ,
        n.WebGLClipping = function() {
            function t() {
                c.value !== r && (c.value = r,
                c.needsUpdate = a > 0),
                i.numPlanes = a
            }
            function e(t, e, n, r) {
                var a = null !== t ? t.length : 0
                  , o = null;
                if (0 !== a) {
                    if (o = c.value,
                    r !== !0 || null === o) {
                        var s = n + 4 * a
                          , u = e.matrixWorldInverse;
                        h.getNormalMatrix(u),
                        (null === o || o.length < s) && (o = new Float32Array(s));
                        for (var p = 0, f = n; p !== a; ++p,
                        f += 4)
                            l.copy(t[p]).applyMatrix4(u, h),
                            l.normal.toArray(o, f),
                            o[f + 3] = l.constant
                    }
                    c.value = o,
                    c.needsUpdate = !0
                }
                return i.numPlanes = a,
                o
            }
            var i = this
              , r = null
              , a = 0
              , o = !1
              , s = !1
              , l = new n.Plane
              , h = new n.Matrix3
              , c = {
                value: null,
                needsUpdate: !1
            };
            this.uniform = c,
            this.numPlanes = 0,
            this.init = function(t, i, n) {
                var s = 0 !== t.length || i || 0 !== a || o;
                return o = i,
                r = e(t, n, 0),
                a = t.length,
                s
            }
            ,
            this.beginShadows = function() {
                s = !0,
                e(null)
            }
            ,
            this.endShadows = function() {
                s = !1,
                t()
            }
            ,
            this.setState = function(i, n, l, h, u) {
                if (!o || null === i || 0 === i.length || s && !n)
                    s ? e(null) : t();
                else {
                    var p = s ? 0 : a
                      , f = 4 * p
                      , d = h.clippingState || null;
                    c.value = d,
                    d = e(i, l, f, u);
                    for (var m = 0; m !== f; ++m)
                        d[m] = r[m];
                    h.clippingState = d,
                    this.numPlanes += p
                }
            }
        }
        ,
        n.WebGLIndexedBufferRenderer = function(t, e, i) {
            function n(t) {
                s = t
            }
            function r(i) {
                i.array instanceof Uint32Array && e.get("OES_element_index_uint") ? (l = t.UNSIGNED_INT,
                h = 4) : (l = t.UNSIGNED_SHORT,
                h = 2)
            }
            function a(e, n) {
                t.drawElements(s, n, l, e * h),
                i.calls++,
                i.vertices += n,
                s === t.TRIANGLES && (i.faces += n / 3)
            }
            function o(n, r, a) {
                var o = e.get("ANGLE_instanced_arrays");
                null !== o && (o.drawElementsInstancedANGLE(s, a, l, r * h, n.maxInstancedCount),
                i.calls++,
                i.vertices += a * n.maxInstancedCount,
                s === t.TRIANGLES && (i.faces += n.maxInstancedCount * a / 3))
            }
            var s, l, h;
            this.setMode = n,
            this.setIndex = r,
            this.render = a,
            this.renderInstances = o
        }
        ,
        n.WebGLExtensions = function(t) {
            var e = {};
            this.get = function(i) {
                if (void 0 !== e[i])
                    return e[i];
                var n;
                switch (i) {
                case "WEBGL_depth_texture":
                    n = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    n = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    n = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    n = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                case "WEBGL_compressed_texture_etc1":
                    n = t.getExtension("WEBGL_compressed_texture_etc1");
                    break;
                default:
                    n = t.getExtension(i)
                }
                return e[i] = n,
                n
            }
        }
        ,
        n.WebGLCapabilities = function(t, e, i) {
            function n() {
                if (void 0 !== a)
                    return a;
                var i = e.get("EXT_texture_filter_anisotropic");
                return a = null !== i ? t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
            }
            function r(e) {
                if ("highp" === e) {
                    if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0)
                        return "highp";
                    e = "mediump"
                }
                return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
            }
            var a;
            this.getMaxAnisotropy = n,
            this.getMaxPrecision = r,
            this.precision = void 0 !== i.precision ? i.precision : "highp",
            this.logarithmicDepthBuffer = void 0 !== i.logarithmicDepthBuffer && i.logarithmicDepthBuffer,
            this.maxTextures = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
            this.maxVertexTextures = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
            this.maxTextureSize = t.getParameter(t.MAX_TEXTURE_SIZE),
            this.maxCubemapSize = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
            this.maxAttributes = t.getParameter(t.MAX_VERTEX_ATTRIBS),
            this.maxVertexUniforms = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
            this.maxVaryings = t.getParameter(t.MAX_VARYING_VECTORS),
            this.maxFragmentUniforms = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
            this.vertexTextures = this.maxVertexTextures > 0,
            this.floatFragmentTextures = !!e.get("OES_texture_float"),
            this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;
            var o = r(this.precision);
            o !== this.precision && (this.precision = o),
            this.logarithmicDepthBuffer && (this.logarithmicDepthBuffer = !!e.get("EXT_frag_depth"))
        }
        ,
        n.WebGLGeometries = function(t, e, i) {
            function r(t) {
                var e = t.geometry;
                if (void 0 !== c[e.id])
                    return c[e.id];
                e.addEventListener("dispose", a);
                var r;
                return e instanceof n.BufferGeometry ? r = e : e instanceof n.Geometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new n.BufferGeometry).setFromObject(t)),
                r = e._bufferGeometry),
                c[e.id] = r,
                i.memory.geometries++,
                r
            }
            function a(t) {
                var n = t.target
                  , r = c[n.id];
                null !== r.index && s(r.index),
                l(r.attributes),
                n.removeEventListener("dispose", a),
                delete c[n.id];
                var o = e.get(n);
                o.wireframe && s(o.wireframe),
                e["delete"](n);
                var h = e.get(r);
                h.wireframe && s(h.wireframe),
                e["delete"](r),
                i.memory.geometries--
            }
            function o(t) {
                return t instanceof n.InterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer
            }
            function s(e) {
                var i = o(e);
                void 0 !== i && (t.deleteBuffer(i),
                h(e))
            }
            function l(t) {
                for (var e in t)
                    s(t[e])
            }
            function h(t) {
                t instanceof n.InterleavedBufferAttribute ? e["delete"](t.data) : e["delete"](t)
            }
            var c = {};
            this.get = r
        }
        ,
        n.WebGLLights = function() {
            var t = {};
            this.get = function(e) {
                if (void 0 !== t[e.id])
                    return t[e.id];
                var i;
                switch (e.type) {
                case "DirectionalLight":
                    i = {
                        direction: new n.Vector3,
                        color: new n.Color,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new n.Vector2
                    };
                    break;
                case "SpotLight":
                    i = {
                        position: new n.Vector3,
                        direction: new n.Vector3,
                        color: new n.Color,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new n.Vector2
                    };
                    break;
                case "PointLight":
                    i = {
                        position: new n.Vector3,
                        color: new n.Color,
                        distance: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new n.Vector2
                    };
                    break;
                case "HemisphereLight":
                    i = {
                        direction: new n.Vector3,
                        skyColor: new n.Color,
                        groundColor: new n.Color
                    }
                }
                return t[e.id] = i,
                i
            }
        }
        ,
        n.WebGLObjects = function(t, e, i) {
            function r(e) {
                var i = u.get(e);
                e.geometry instanceof n.Geometry && i.updateFromObject(e);
                var r = i.index
                  , o = i.attributes;
                null !== r && a(r, t.ELEMENT_ARRAY_BUFFER);
                for (var s in o)
                    a(o[s], t.ARRAY_BUFFER);
                var l = i.morphAttributes;
                for (var s in l)
                    for (var h = l[s], c = 0, p = h.length; c < p; c++)
                        a(h[c], t.ARRAY_BUFFER);
                return i
            }
            function a(t, i) {
                var r = t instanceof n.InterleavedBufferAttribute ? t.data : t
                  , a = e.get(r);
                void 0 === a.__webglBuffer ? o(a, r, i) : a.version !== r.version && s(a, r, i)
            }
            function o(e, i, n) {
                e.__webglBuffer = t.createBuffer(),
                t.bindBuffer(n, e.__webglBuffer);
                var r = i.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW;
                t.bufferData(n, i.array, r),
                e.version = i.version
            }
            function s(e, i, n) {
                t.bindBuffer(n, e.__webglBuffer),
                i.dynamic === !1 || i.updateRange.count === -1 ? t.bufferSubData(n, 0, i.array) : 0 === i.updateRange.count || (t.bufferSubData(n, i.updateRange.offset * i.array.BYTES_PER_ELEMENT, i.array.subarray(i.updateRange.offset, i.updateRange.offset + i.updateRange.count)),
                i.updateRange.count = 0),
                e.version = i.version
            }
            function l(t) {
                return t instanceof n.InterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer
            }
            function h(i) {
                var r = e.get(i);
                if (void 0 !== r.wireframe)
                    return r.wireframe;
                var o = []
                  , s = i.index
                  , l = i.attributes
                  , h = l.position;
                if (null !== s)
                    for (var u = {}, p = s.array, f = 0, d = p.length; f < d; f += 3) {
                        var m = p[f + 0]
                          , g = p[f + 1]
                          , v = p[f + 2];
                        c(u, m, g) && o.push(m, g),
                        c(u, g, v) && o.push(g, v),
                        c(u, v, m) && o.push(v, m)
                    }
                else
                    for (var p = l.position.array, f = 0, d = p.length / 3 - 1; f < d; f += 3) {
                        var m = f + 0
                          , g = f + 1
                          , v = f + 2;
                        o.push(m, g, g, v, v, m)
                    }
                var y = h.count > 65535 ? Uint32Array : Uint16Array
                  , _ = new n.BufferAttribute(new y(o),1);
                return a(_, t.ELEMENT_ARRAY_BUFFER),
                r.wireframe = _,
                _
            }
            function c(t, e, i) {
                if (e > i) {
                    var n = e;
                    e = i,
                    i = n
                }
                var r = t[e];
                return void 0 === r ? (t[e] = [i],
                !0) : r.indexOf(i) === -1 && (r.push(i),
                !0)
            }
            var u = new n.WebGLGeometries(t,e,i);
            this.getAttributeBuffer = l,
            this.getWireframeAttribute = h,
            this.update = r
        }
        ,
        n.WebGLProgram = function() {
            function t(t) {
                switch (t) {
                case n.LinearEncoding:
                    return ["Linear", "( value )"];
                case n.sRGBEncoding:
                    return ["sRGB", "( value )"];
                case n.RGBEEncoding:
                    return ["RGBE", "( value )"];
                case n.RGBM7Encoding:
                    return ["RGBM", "( value, 7.0 )"];
                case n.RGBM16Encoding:
                    return ["RGBM", "( value, 16.0 )"];
                case n.RGBDEncoding:
                    return ["RGBD", "( value, 256.0 )"];
                case n.GammaEncoding:
                    return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                default:
                    throw new Error("unsupported encoding: " + t)
                }
            }
            function e(e, i) {
                var n = t(i);
                return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
            }
            function i(e, i) {
                var n = t(i);
                return "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
            }
            function r(t, e) {
                var i;
                switch (e) {
                case n.LinearToneMapping:
                    i = "Linear";
                    break;
                case n.ReinhardToneMapping:
                    i = "Reinhard";
                    break;
                case n.Uncharted2ToneMapping:
                    i = "Uncharted2";
                    break;
                case n.CineonToneMapping:
                    i = "OptimizedCineon";
                    break;
                default:
                    throw new Error("unsupported toneMapping: " + e)
                }
                return "vec3 " + t + "( vec3 color ) { return " + i + "ToneMapping( color ); }"
            }
            function a(t, e, i) {
                t = t || {};
                var n = [t.derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && i.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && i.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && i.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""];
                return n.filter(l).join("\n")
            }
            function o(t) {
                var e = [];
                for (var i in t) {
                    var n = t[i];
                    n !== !1 && e.push("#define " + i + " " + n)
                }
                return e.join("\n")
            }
            function s(t, e, i) {
                for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), a = 0; a < r; a++) {
                    var o = t.getActiveAttrib(e, a)
                      , s = o.name;
                    n[s] = t.getAttribLocation(e, s)
                }
                return n
            }
            function l(t) {
                return "" !== t
            }
            function h(t, e) {
                return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
            }
            function c(t) {
                function e(t, e) {
                    var i = n.ShaderChunk[e];
                    if (void 0 === i)
                        throw new Error("Can not resolve #include <" + e + ">");
                    return c(i)
                }
                var i = /#include +<([\w\d.]+)>/g;
                return t.replace(i, e)
            }
            function u(t) {
                function e(t, e, i, n) {
                    for (var r = "", a = parseInt(e); a < parseInt(i); a++)
                        r += n.replace(/\[ i \]/g, "[ " + a + " ]");
                    return r
                }
                var i = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
                return t.replace(i, e)
            }
            var p = 0;
            return function(t, f, d, m) {
                var g = t.context
                  , v = d.extensions
                  , y = d.defines
                  , _ = d.__webglShader.vertexShader
                  , x = d.__webglShader.fragmentShader
                  , b = "SHADOWMAP_TYPE_BASIC";
                m.shadowMapType === n.PCFShadowMap ? b = "SHADOWMAP_TYPE_PCF" : m.shadowMapType === n.PCFSoftShadowMap && (b = "SHADOWMAP_TYPE_PCF_SOFT");
                var w = "ENVMAP_TYPE_CUBE"
                  , M = "ENVMAP_MODE_REFLECTION"
                  , T = "ENVMAP_BLENDING_MULTIPLY";
                if (m.envMap) {
                    switch (d.envMap.mapping) {
                    case n.CubeReflectionMapping:
                    case n.CubeRefractionMapping:
                        w = "ENVMAP_TYPE_CUBE";
                        break;
                    case n.CubeUVReflectionMapping:
                    case n.CubeUVRefractionMapping:
                        w = "ENVMAP_TYPE_CUBE_UV";
                        break;
                    case n.EquirectangularReflectionMapping:
                    case n.EquirectangularRefractionMapping:
                        w = "ENVMAP_TYPE_EQUIREC";
                        break;
                    case n.SphericalReflectionMapping:
                        w = "ENVMAP_TYPE_SPHERE"
                    }
                    switch (d.envMap.mapping) {
                    case n.CubeRefractionMapping:
                    case n.EquirectangularRefractionMapping:
                        M = "ENVMAP_MODE_REFRACTION"
                    }
                    switch (d.combine) {
                    case n.MultiplyOperation:
                        T = "ENVMAP_BLENDING_MULTIPLY";
                        break;
                    case n.MixOperation:
                        T = "ENVMAP_BLENDING_MIX";
                        break;
                    case n.AddOperation:
                        T = "ENVMAP_BLENDING_ADD"
                    }
                }
                var S, C, A = t.gammaFactor > 0 ? t.gammaFactor : 1, P = a(v, m, t.extensions), E = o(y), L = g.createProgram();
                d instanceof n.RawShaderMaterial ? (S = [E].filter(l).join("\n"),
                C = [E].filter(l).join("\n")) : (S = ["precision " + m.precision + " float;", "precision " + m.precision + " int;", "#define SHADER_NAME " + d.__webglShader.name, E, m.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + A, "#define MAX_BONES " + m.maxBones, m.map ? "#define USE_MAP" : "", m.envMap ? "#define USE_ENVMAP" : "", m.envMap ? "#define " + M : "", m.lightMap ? "#define USE_LIGHTMAP" : "", m.aoMap ? "#define USE_AOMAP" : "", m.emissiveMap ? "#define USE_EMISSIVEMAP" : "", m.bumpMap ? "#define USE_BUMPMAP" : "", m.normalMap ? "#define USE_NORMALMAP" : "", m.displacementMap && m.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", m.specularMap ? "#define USE_SPECULARMAP" : "", m.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", m.metalnessMap ? "#define USE_METALNESSMAP" : "", m.alphaMap ? "#define USE_ALPHAMAP" : "", m.vertexColors ? "#define USE_COLOR" : "", m.flatShading ? "#define FLAT_SHADED" : "", m.skinning ? "#define USE_SKINNING" : "", m.useVertexTexture ? "#define BONE_TEXTURE" : "", m.morphTargets ? "#define USE_MORPHTARGETS" : "", m.morphNormals && m.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", m.doubleSided ? "#define DOUBLE_SIDED" : "", m.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + m.numClippingPlanes, m.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", m.shadowMapEnabled ? "#define " + b : "", m.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", m.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", m.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(l).join("\n"),
                C = [P, "precision " + m.precision + " float;", "precision " + m.precision + " int;", "#define SHADER_NAME " + d.__webglShader.name, E, m.alphaTest ? "#define ALPHATEST " + m.alphaTest : "", "#define GAMMA_FACTOR " + A, m.useFog && m.fog ? "#define USE_FOG" : "", m.useFog && m.fogExp ? "#define FOG_EXP2" : "", m.map ? "#define USE_MAP" : "", m.envMap ? "#define USE_ENVMAP" : "", m.envMap ? "#define " + w : "", m.envMap ? "#define " + M : "", m.envMap ? "#define " + T : "", m.lightMap ? "#define USE_LIGHTMAP" : "", m.aoMap ? "#define USE_AOMAP" : "", m.emissiveMap ? "#define USE_EMISSIVEMAP" : "", m.bumpMap ? "#define USE_BUMPMAP" : "", m.normalMap ? "#define USE_NORMALMAP" : "", m.specularMap ? "#define USE_SPECULARMAP" : "", m.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", m.metalnessMap ? "#define USE_METALNESSMAP" : "", m.alphaMap ? "#define USE_ALPHAMAP" : "", m.vertexColors ? "#define USE_COLOR" : "", m.flatShading ? "#define FLAT_SHADED" : "", m.doubleSided ? "#define DOUBLE_SIDED" : "", m.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + m.numClippingPlanes, m.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", m.shadowMapEnabled ? "#define " + b : "", m.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", m.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", m.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", m.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", m.envMap && t.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", m.toneMapping !== n.NoToneMapping ? "#define TONE_MAPPING" : "", m.toneMapping !== n.NoToneMapping ? n.ShaderChunk.tonemapping_pars_fragment : "", m.toneMapping !== n.NoToneMapping ? r("toneMapping", m.toneMapping) : "", m.outputEncoding || m.mapEncoding || m.envMapEncoding || m.emissiveMapEncoding ? n.ShaderChunk.encodings_pars_fragment : "", m.mapEncoding ? e("mapTexelToLinear", m.mapEncoding) : "", m.envMapEncoding ? e("envMapTexelToLinear", m.envMapEncoding) : "", m.emissiveMapEncoding ? e("emissiveMapTexelToLinear", m.emissiveMapEncoding) : "", m.outputEncoding ? i("linearToOutputTexel", m.outputEncoding) : "", m.depthPacking ? "#define DEPTH_PACKING " + d.depthPacking : "", "\n"].filter(l).join("\n")),
                _ = c(_, m),
                _ = h(_, m),
                x = c(x, m),
                x = h(x, m),
                d instanceof n.ShaderMaterial == !1 && (_ = u(_),
                x = u(x));
                var O = S + _
                  , R = C + x
                  , D = n.WebGLShader(g, g.VERTEX_SHADER, O)
                  , I = n.WebGLShader(g, g.FRAGMENT_SHADER, R);
                g.attachShader(L, D),
                g.attachShader(L, I),
                void 0 !== d.index0AttributeName ? g.bindAttribLocation(L, 0, d.index0AttributeName) : m.morphTargets === !0 && g.bindAttribLocation(L, 0, "position"),
                g.linkProgram(L);
                var k = g.getProgramInfoLog(L)
                  , N = g.getShaderInfoLog(D)
                  , F = g.getShaderInfoLog(I)
                  , B = !0
                  , U = !0;
                g.getProgramParameter(L, g.LINK_STATUS) === !1 ? B = !1 : "" !== k || "" !== N && "" !== F || (U = !1),
                U && (this.diagnostics = {
                    runnable: B,
                    material: d,
                    programLog: k,
                    vertexShader: {
                        log: N,
                        prefix: S
                    },
                    fragmentShader: {
                        log: F,
                        prefix: C
                    }
                }),
                g.deleteShader(D),
                g.deleteShader(I);
                var z;
                this.getUniforms = function() {
                    return void 0 === z && (z = new n.WebGLUniforms(g,L,t)),
                    z
                }
                ;
                var j;
                return this.getAttributes = function() {
                    return void 0 === j && (j = s(g, L)),
                    j
                }
                ,
                this.destroy = function() {
                    g.deleteProgram(L),
                    this.program = void 0
                }
                ,
                Object.defineProperties(this, {
                    uniforms: {
                        get: function() {
                            return this.getUniforms()
                        }
                    },
                    attributes: {
                        get: function() {
                            return this.getAttributes()
                        }
                    }
                }),
                this.id = p++,
                this.code = f,
                this.usedTimes = 1,
                this.program = L,
                this.vertexShader = D,
                this.fragmentShader = I,
                this
            }
        }(),
        n.WebGLPrograms = function(t, e) {
            function i(t) {
                if (e.floatVertexTextures && t && t.skeleton && t.skeleton.useVertexTexture)
                    return 1024;
                var i = e.maxVertexUniforms
                  , r = Math.floor((i - 20) / 4)
                  , a = r;
                return void 0 !== t && t instanceof n.SkinnedMesh && (a = Math.min(t.skeleton.bones.length, a),
                a < t.skeleton.bones.length),
                a
            }
            function r(t, e) {
                var i;
                return t ? t instanceof n.Texture ? i = t.encoding : t instanceof n.WebGLRenderTarget && (i = t.texture.encoding) : i = n.LinearEncoding,
                i === n.LinearEncoding && e && (i = n.GammaEncoding),
                i
            }
            var a = []
              , o = {
                MeshDepthMaterial: "depth",
                MeshNormalMaterial: "normal",
                MeshBasicMaterial: "basic",
                MeshLambertMaterial: "lambert",
                MeshPhongMaterial: "phong",
                MeshStandardMaterial: "physical",
                MeshPhysicalMaterial: "physical",
                LineBasicMaterial: "basic",
                LineDashedMaterial: "dashed",
                PointsMaterial: "points"
            }
              , s = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "depthPacking"];
            this.getParameters = function(a, s, l, h, c) {
                var u = o[a.type]
                  , p = i(c)
                  , f = t.getPrecision();
                null !== a.precision && (f = e.getMaxPrecision(a.precision),
                f !== a.precision);
                var d = t.getCurrentRenderTarget()
                  , m = {
                    shaderID: u,
                    precision: f,
                    supportsVertexTextures: e.vertexTextures,
                    outputEncoding: r(d ? d.texture : null, t.gammaOutput),
                    map: !!a.map,
                    mapEncoding: r(a.map, t.gammaInput),
                    envMap: !!a.envMap,
                    envMapMode: a.envMap && a.envMap.mapping,
                    envMapEncoding: r(a.envMap, t.gammaInput),
                    envMapCubeUV: !!a.envMap && (a.envMap.mapping === n.CubeUVReflectionMapping || a.envMap.mapping === n.CubeUVRefractionMapping),
                    lightMap: !!a.lightMap,
                    aoMap: !!a.aoMap,
                    emissiveMap: !!a.emissiveMap,
                    emissiveMapEncoding: r(a.emissiveMap, t.gammaInput),
                    bumpMap: !!a.bumpMap,
                    normalMap: !!a.normalMap,
                    displacementMap: !!a.displacementMap,
                    roughnessMap: !!a.roughnessMap,
                    metalnessMap: !!a.metalnessMap,
                    specularMap: !!a.specularMap,
                    alphaMap: !!a.alphaMap,
                    combine: a.combine,
                    vertexColors: a.vertexColors,
                    fog: !!l,
                    useFog: a.fog,
                    fogExp: l instanceof n.FogExp2,
                    flatShading: a.shading === n.FlatShading,
                    sizeAttenuation: a.sizeAttenuation,
                    logarithmicDepthBuffer: e.logarithmicDepthBuffer,
                    skinning: a.skinning,
                    maxBones: p,
                    useVertexTexture: e.floatVertexTextures && c && c.skeleton && c.skeleton.useVertexTexture,
                    morphTargets: a.morphTargets,
                    morphNormals: a.morphNormals,
                    maxMorphTargets: t.maxMorphTargets,
                    maxMorphNormals: t.maxMorphNormals,
                    numDirLights: s.directional.length,
                    numPointLights: s.point.length,
                    numSpotLights: s.spot.length,
                    numHemiLights: s.hemi.length,
                    numClippingPlanes: h,
                    shadowMapEnabled: t.shadowMap.enabled && c.receiveShadow && s.shadows.length > 0,
                    shadowMapType: t.shadowMap.type,
                    toneMapping: t.toneMapping,
                    physicallyCorrectLights: t.physicallyCorrectLights,
                    premultipliedAlpha: a.premultipliedAlpha,
                    alphaTest: a.alphaTest,
                    doubleSided: a.side === n.DoubleSide,
                    flipSided: a.side === n.BackSide,
                    depthPacking: void 0 !== a.depthPacking && a.depthPacking
                };
                return m
            }
            ,
            this.getProgramCode = function(t, e) {
                var i = [];
                if (e.shaderID ? i.push(e.shaderID) : (i.push(t.fragmentShader),
                i.push(t.vertexShader)),
                void 0 !== t.defines)
                    for (var n in t.defines)
                        i.push(n),
                        i.push(t.defines[n]);
                for (var r = 0; r < s.length; r++)
                    i.push(e[s[r]]);
                return i.join()
            }
            ,
            this.acquireProgram = function(e, i, r) {
                for (var o, s = 0, l = a.length; s < l; s++) {
                    var h = a[s];
                    if (h.code === r) {
                        o = h,
                        ++o.usedTimes;
                        break
                    }
                }
                return void 0 === o && (o = new n.WebGLProgram(t,r,e,i),
                a.push(o)),
                o
            }
            ,
            this.releaseProgram = function(t) {
                if (0 === --t.usedTimes) {
                    var e = a.indexOf(t);
                    a[e] = a[a.length - 1],
                    a.pop(),
                    t.destroy()
                }
            }
            ,
            this.programs = a
        }
        ,
        n.WebGLProperties = function() {
            var t = {};
            this.get = function(e) {
                var i = e.uuid
                  , n = t[i];
                return void 0 === n && (n = {},
                t[i] = n),
                n
            }
            ,
            this["delete"] = function(e) {
                delete t[e.uuid]
            }
            ,
            this.clear = function() {
                t = {}
            }
        }
        ,
        n.WebGLShader = function() {
            return function(t, e, i) {
                var n = t.createShader(e);
                return t.shaderSource(n, i),
                t.compileShader(n),
                t.getShaderParameter(n, t.COMPILE_STATUS) === !1,
                "" !== t.getShaderInfoLog(n),
                n
            }
        }(),
        n.WebGLShadowMap = function(t, e, i, r) {
            function a(e, i, r, a) {
                var o = e.geometry
                  , s = null
                  , l = x
                  , h = e.customDepthMaterial;
                if (r && (l = b,
                h = e.customDistanceMaterial),
                h)
                    s = h;
                else {
                    var c = !1;
                    i.morphTargets && (o instanceof n.BufferGeometry ? c = o.morphAttributes && o.morphAttributes.position && o.morphAttributes.position.length > 0 : o instanceof n.Geometry && (c = o.morphTargets && o.morphTargets.length > 0));
                    var u = e instanceof n.SkinnedMesh && i.skinning
                      , p = 0;
                    c && (p |= v),
                    u && (p |= y),
                    s = l[p]
                }
                if (t.localClippingEnabled && i.clipShadows === !0 && 0 !== i.clippingPlanes.length) {
                    var f = s.uuid
                      , d = i.uuid
                      , m = w[f];
                    void 0 === m && (m = {},
                    w[f] = m);
                    var g = m[d];
                    void 0 === g && (g = s.clone(),
                    m[d] = g),
                    s = g
                }
                s.visible = i.visible,
                s.wireframe = i.wireframe;
                var _ = i.side;
                return I.renderSingleSided && _ == n.DoubleSide && (_ = n.FrontSide),
                I.renderReverseSided && (_ === n.FrontSide ? _ = n.BackSide : _ === n.BackSide && (_ = n.FrontSide)),
                s.side = _,
                s.clipShadows = i.clipShadows,
                s.clippingPlanes = i.clippingPlanes,
                s.wireframeLinewidth = i.wireframeLinewidth,
                s.linewidth = i.linewidth,
                r && void 0 !== s.uniforms.lightPos && s.uniforms.lightPos.value.copy(a),
                s
            }
            function o(t, e, i) {
                if (t.visible !== !1) {
                    if (t.layers.test(e.layers) && (t instanceof n.Mesh || t instanceof n.Line || t instanceof n.Points) && t.castShadow && (t.frustumCulled === !1 || h.intersectsObject(t) === !0)) {
                        var r = t.material;
                        r.visible === !0 && (t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, t.matrixWorld),
                        g.push(t))
                    }
                    for (var a = t.children, s = 0, l = a.length; s < l; s++)
                        o(a[s], e, i)
                }
            }
            var s = t.context
              , l = t.state
              , h = new n.Frustum
              , c = new n.Matrix4
              , u = e.shadows
              , p = new n.Vector2
              , f = new n.Vector2(r.maxTextureSize,r.maxTextureSize)
              , d = new n.Vector3
              , m = new n.Vector3
              , g = []
              , v = 1
              , y = 2
              , _ = (v | y) + 1
              , x = new Array(_)
              , b = new Array(_)
              , w = {}
              , M = [new n.Vector3(1,0,0), new n.Vector3((-1),0,0), new n.Vector3(0,0,1), new n.Vector3(0,0,(-1)), new n.Vector3(0,1,0), new n.Vector3(0,(-1),0)]
              , T = [new n.Vector3(0,1,0), new n.Vector3(0,1,0), new n.Vector3(0,1,0), new n.Vector3(0,1,0), new n.Vector3(0,0,1), new n.Vector3(0,0,(-1))]
              , S = [new n.Vector4, new n.Vector4, new n.Vector4, new n.Vector4, new n.Vector4, new n.Vector4]
              , C = new n.MeshDepthMaterial;
            C.depthPacking = n.RGBADepthPacking,
            C.clipping = !0;
            for (var A = n.ShaderLib.distanceRGBA, P = n.UniformsUtils.clone(A.uniforms), E = 0; E !== _; ++E) {
                var L = 0 !== (E & v)
                  , O = 0 !== (E & y)
                  , R = C.clone();
                R.morphTargets = L,
                R.skinning = O,
                x[E] = R;
                var D = new n.ShaderMaterial({
                    defines: {
                        USE_SHADOWMAP: ""
                    },
                    uniforms: P,
                    vertexShader: A.vertexShader,
                    fragmentShader: A.fragmentShader,
                    morphTargets: L,
                    skinning: O,
                    clipping: !0
                });
                b[E] = D
            }
            var I = this;
            this.enabled = !1,
            this.autoUpdate = !0,
            this.needsUpdate = !1,
            this.type = n.PCFShadowMap,
            this.renderReverseSided = !0,
            this.renderSingleSided = !0,
            this.render = function(e, r) {
                if (I.enabled !== !1 && (I.autoUpdate !== !1 || I.needsUpdate !== !1) && 0 !== u.length) {
                    l.clearColor(1, 1, 1, 1),
                    l.disable(s.BLEND),
                    l.setDepthTest(!0),
                    l.setScissorTest(!1);
                    for (var v, y, _ = 0, x = u.length; _ < x; _++) {
                        var b = u[_]
                          , w = b.shadow;
                        if (void 0 !== w) {
                            var C = w.camera;
                            if (p.copy(w.mapSize),
                            p.min(f),
                            b instanceof n.PointLight) {
                                v = 6,
                                y = !0;
                                var A = p.x
                                  , P = p.y;
                                S[0].set(2 * A, P, A, P),
                                S[1].set(0, P, A, P),
                                S[2].set(3 * A, P, A, P),
                                S[3].set(A, P, A, P),
                                S[4].set(3 * A, 0, A, P),
                                S[5].set(A, 0, A, P),
                                p.x *= 4,
                                p.y *= 2
                            } else
                                v = 1,
                                y = !1;
                            if (null === w.map) {
                                var E = {
                                    minFilter: n.NearestFilter,
                                    magFilter: n.NearestFilter,
                                    format: n.RGBAFormat
                                };
                                w.map = new n.WebGLRenderTarget(p.x,p.y,E),
                                C.updateProjectionMatrix()
                            }
                            w instanceof n.SpotLightShadow && w.update(b);
                            var L = w.map
                              , O = w.matrix;
                            m.setFromMatrixPosition(b.matrixWorld),
                            C.position.copy(m),
                            t.setRenderTarget(L),
                            t.clear();
                            for (var R = 0; R < v; R++) {
                                if (y) {
                                    d.copy(C.position),
                                    d.add(M[R]),
                                    C.up.copy(T[R]),
                                    C.lookAt(d);
                                    var D = S[R];
                                    l.viewport(D)
                                } else
                                    d.setFromMatrixPosition(b.target.matrixWorld),
                                    C.lookAt(d);
                                C.updateMatrixWorld(),
                                C.matrixWorldInverse.getInverse(C.matrixWorld),
                                O.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                                O.multiply(C.projectionMatrix),
                                O.multiply(C.matrixWorldInverse),
                                c.multiplyMatrices(C.projectionMatrix, C.matrixWorldInverse),
                                h.setFromMatrix(c),
                                g.length = 0,
                                o(e, r, C);
                                for (var k = 0, N = g.length; k < N; k++) {
                                    var F = g[k]
                                      , B = i.update(F)
                                      , U = F.material;
                                    if (U instanceof n.MultiMaterial)
                                        for (var z = B.groups, j = U.materials, V = 0, G = z.length; V < G; V++) {
                                            var H = z[V]
                                              , W = j[H.materialIndex];
                                            if (W.visible === !0) {
                                                var X = a(F, W, y, m);
                                                t.renderBufferDirect(C, null, B, X, F, H)
                                            }
                                        }
                                    else {
                                        var X = a(F, U, y, m);
                                        t.renderBufferDirect(C, null, B, X, F, null)
                                    }
                                }
                            }
                        }
                    }
                    var q = t.getClearColor()
                      , Y = t.getClearAlpha();
                    t.setClearColor(q, Y),
                    I.needsUpdate = !1
                }
            }
        }
        ,
        n.WebGLState = function(t, e, i) {
            function r(e, i, n) {
                var r = new Uint8Array(4)
                  , a = t.createTexture();
                t.bindTexture(e, a),
                t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST),
                t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
                for (var o = 0; o < n; o++)
                    t.texImage2D(i + o, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
                return a
            }
            var a = this;
            this.buffers = {
                color: new n.WebGLColorBuffer(t,this),
                depth: new n.WebGLDepthBuffer(t,this),
                stencil: new n.WebGLStencilBuffer(t,this)
            };
            var o = t.getParameter(t.MAX_VERTEX_ATTRIBS)
              , s = new Uint8Array(o)
              , l = new Uint8Array(o)
              , h = new Uint8Array(o)
              , c = {}
              , u = null
              , p = null
              , f = null
              , d = null
              , m = null
              , g = null
              , v = null
              , y = null
              , _ = !1
              , x = null
              , b = null
              , w = null
              , M = null
              , T = null
              , S = null
              , C = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
              , A = null
              , P = {}
              , E = new n.Vector4
              , L = new n.Vector4
              , O = {};
            O[t.TEXTURE_2D] = r(t.TEXTURE_2D, t.TEXTURE_2D, 1),
            O[t.TEXTURE_CUBE_MAP] = r(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
            this.init = function() {
                this.clearColor(0, 0, 0, 1),
                this.clearDepth(1),
                this.clearStencil(0),
                this.enable(t.DEPTH_TEST),
                this.setDepthFunc(n.LessEqualDepth),
                this.setFlipSided(!1),
                this.setCullFace(n.CullFaceBack),
                this.enable(t.CULL_FACE),
                this.enable(t.BLEND),
                this.setBlending(n.NormalBlending)
            }
            ,
            this.initAttributes = function() {
                for (var t = 0, e = s.length; t < e; t++)
                    s[t] = 0
            }
            ,
            this.enableAttribute = function(i) {
                if (s[i] = 1,
                0 === l[i] && (t.enableVertexAttribArray(i),
                l[i] = 1),
                0 !== h[i]) {
                    var n = e.get("ANGLE_instanced_arrays");
                    n.vertexAttribDivisorANGLE(i, 0),
                    h[i] = 0
                }
            }
            ,
            this.enableAttributeAndDivisor = function(e, i, n) {
                s[e] = 1,
                0 === l[e] && (t.enableVertexAttribArray(e),
                l[e] = 1),
                h[e] !== i && (n.vertexAttribDivisorANGLE(e, i),
                h[e] = i)
            }
            ,
            this.disableUnusedAttributes = function() {
                for (var e = 0, i = l.length; e !== i; ++e)
                    l[e] !== s[e] && (t.disableVertexAttribArray(e),
                    l[e] = 0)
            }
            ,
            this.enable = function(e) {
                c[e] !== !0 && (t.enable(e),
                c[e] = !0)
            }
            ,
            this.disable = function(e) {
                c[e] !== !1 && (t.disable(e),
                c[e] = !1)
            }
            ,
            this.getCompressedTextureFormats = function() {
                if (null === u && (u = [],
                e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1")))
                    for (var i = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), n = 0; n < i.length; n++)
                        u.push(i[n]);
                return u
            }
            ,
            this.setBlending = function(e, r, a, o, s, l, h, c) {
                return e === n.NoBlending ? (this.disable(t.BLEND),
                void (p = e)) : (this.enable(t.BLEND),
                e === p && c === _ || (e === n.AdditiveBlending ? c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD),
                t.blendFunc(t.SRC_ALPHA, t.ONE)) : e === n.SubtractiveBlending ? c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR)) : e === n.MultiplyBlending ? c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                t.blendFunc(t.ZERO, t.SRC_COLOR)) : c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)),
                p = e,
                _ = c),
                void (e === n.CustomBlending ? (s = s || r,
                l = l || a,
                h = h || o,
                r === f && s === g || (t.blendEquationSeparate(i(r), i(s)),
                f = r,
                g = s),
                a === d && o === m && l === v && h === y || (t.blendFuncSeparate(i(a), i(o), i(l), i(h)),
                d = a,
                m = o,
                v = l,
                y = h)) : (f = null,
                d = null,
                m = null,
                g = null,
                v = null,
                y = null)))
            }
            ,
            this.setColorWrite = function(t) {
                this.buffers.color.setMask(t)
            }
            ,
            this.setDepthTest = function(t) {
                this.buffers.depth.setTest(t)
            }
            ,
            this.setDepthWrite = function(t) {
                this.buffers.depth.setMask(t)
            }
            ,
            this.setDepthFunc = function(t) {
                this.buffers.depth.setFunc(t)
            }
            ,
            this.setStencilTest = function(t) {
                this.buffers.stencil.setTest(t)
            }
            ,
            this.setStencilWrite = function(t) {
                this.buffers.stencil.setMask(t)
            }
            ,
            this.setStencilFunc = function(t, e, i) {
                this.buffers.stencil.setFunc(t, e, i)
            }
            ,
            this.setStencilOp = function(t, e, i) {
                this.buffers.stencil.setOp(t, e, i)
            }
            ,
            this.setFlipSided = function(e) {
                x !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW),
                x = e)
            }
            ,
            this.setCullFace = function(e) {
                e !== n.CullFaceNone ? (this.enable(t.CULL_FACE),
                e !== b && (e === n.CullFaceBack ? t.cullFace(t.BACK) : e === n.CullFaceFront ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : this.disable(t.CULL_FACE),
                b = e
            }
            ,
            this.setLineWidth = function(e) {
                e !== w && (t.lineWidth(e),
                w = e)
            }
            ,
            this.setPolygonOffset = function(e, i, n) {
                e ? (this.enable(t.POLYGON_OFFSET_FILL),
                M === i && T === n || (t.polygonOffset(i, n),
                M = i,
                T = n)) : this.disable(t.POLYGON_OFFSET_FILL)
            }
            ,
            this.getScissorTest = function() {
                return S
            }
            ,
            this.setScissorTest = function(e) {
                S = e,
                e ? this.enable(t.SCISSOR_TEST) : this.disable(t.SCISSOR_TEST)
            }
            ,
            this.activeTexture = function(e) {
                void 0 === e && (e = t.TEXTURE0 + C - 1),
                A !== e && (t.activeTexture(e),
                A = e)
            }
            ,
            this.bindTexture = function(e, i) {
                null === A && a.activeTexture();
                var n = P[A];
                void 0 === n && (n = {
                    type: void 0,
                    texture: void 0
                },
                P[A] = n),
                n.type === e && n.texture === i || (t.bindTexture(e, i || O[e]),
                n.type = e,
                n.texture = i)
            }
            ,
            this.compressedTexImage2D = function() {
                try {
                    t.compressedTexImage2D.apply(t, arguments)
                } catch (e) {}
            }
            ,
            this.texImage2D = function() {
                try {
                    t.texImage2D.apply(t, arguments)
                } catch (e) {}
            }
            ,
            this.clearColor = function(t, e, i, n) {
                this.buffers.color.setClear(t, e, i, n)
            }
            ,
            this.clearDepth = function(t) {
                this.buffers.depth.setClear(t)
            }
            ,
            this.clearStencil = function(t) {
                this.buffers.stencil.setClear(t)
            }
            ,
            this.scissor = function(e) {
                E.equals(e) === !1 && (t.scissor(e.x, e.y, e.z, e.w),
                E.copy(e))
            }
            ,
            this.viewport = function(e) {
                L.equals(e) === !1 && (t.viewport(e.x, e.y, e.z, e.w),
                L.copy(e))
            }
            ,
            this.reset = function() {
                for (var e = 0; e < l.length; e++)
                    1 === l[e] && (t.disableVertexAttribArray(e),
                    l[e] = 0);
                c = {},
                u = null,
                A = null,
                P = {},
                p = null,
                x = null,
                b = null,
                this.buffers.color.reset(),
                this.buffers.depth.reset(),
                this.buffers.stencil.reset()
            }
        }
        ,
        n.WebGLColorBuffer = function(t, e) {
            var i = !1
              , r = new n.Vector4
              , a = null
              , o = new n.Vector4;
            this.setMask = function(e) {
                a === e || i || (t.colorMask(e, e, e, e),
                a = e)
            }
            ,
            this.setLocked = function(t) {
                i = t
            }
            ,
            this.setClear = function(e, i, n, a) {
                r.set(e, i, n, a),
                o.equals(r) === !1 && (t.clearColor(e, i, n, a),
                o.copy(r))
            }
            ,
            this.reset = function() {
                i = !1,
                a = null,
                o = new n.Vector4
            }
        }
        ,
        n.WebGLDepthBuffer = function(t, e) {
            var i = !1
              , r = null
              , a = null
              , o = null;
            this.setTest = function(i) {
                i ? e.enable(t.DEPTH_TEST) : e.disable(t.DEPTH_TEST)
            }
            ,
            this.setMask = function(e) {
                r === e || i || (t.depthMask(e),
                r = e)
            }
            ,
            this.setFunc = function(e) {
                if (a !== e) {
                    if (e)
                        switch (e) {
                        case n.NeverDepth:
                            t.depthFunc(t.NEVER);
                            break;
                        case n.AlwaysDepth:
                            t.depthFunc(t.ALWAYS);
                            break;
                        case n.LessDepth:
                            t.depthFunc(t.LESS);
                            break;
                        case n.LessEqualDepth:
                            t.depthFunc(t.LEQUAL);
                            break;
                        case n.EqualDepth:
                            t.depthFunc(t.EQUAL);
                            break;
                        case n.GreaterEqualDepth:
                            t.depthFunc(t.GEQUAL);
                            break;
                        case n.GreaterDepth:
                            t.depthFunc(t.GREATER);
                            break;
                        case n.NotEqualDepth:
                            t.depthFunc(t.NOTEQUAL);
                            break;
                        default:
                            t.depthFunc(t.LEQUAL)
                        }
                    else
                        t.depthFunc(t.LEQUAL);
                    a = e
                }
            }
            ,
            this.setLocked = function(t) {
                i = t
            }
            ,
            this.setClear = function(e) {
                o !== e && (t.clearDepth(e),
                o = e)
            }
            ,
            this.reset = function() {
                i = !1,
                r = null,
                a = null,
                o = null
            }
        }
        ,
        n.WebGLStencilBuffer = function(t, e) {
            var i = !1
              , n = null
              , r = null
              , a = null
              , o = null
              , s = null
              , l = null
              , h = null
              , c = null;
            this.setTest = function(i) {
                i ? e.enable(t.STENCIL_TEST) : e.disable(t.STENCIL_TEST)
            }
            ,
            this.setMask = function(e) {
                n === e || i || (t.stencilMask(e),
                n = e)
            }
            ,
            this.setFunc = function(e, i, n) {
                r === e && a === i && o === n || (t.stencilFunc(e, i, n),
                r = e,
                a = i,
                o = n)
            }
            ,
            this.setOp = function(e, i, n) {
                s === e && l === i && h === n || (t.stencilOp(e, i, n),
                s = e,
                l = i,
                h = n)
            }
            ,
            this.setLocked = function(t) {
                i = t
            }
            ,
            this.setClear = function(e) {
                c !== e && (t.clearStencil(e),
                c = e)
            }
            ,
            this.reset = function() {
                i = !1,
                n = null,
                r = null,
                a = null,
                o = null,
                s = null,
                l = null,
                h = null,
                c = null
            }
        }
        ,
        n.WebGLTextures = function(t, e, i, r, a, o, s) {
            function l(t, e) {
                if (t.width > e || t.height > e) {
                    var i = e / Math.max(t.width, t.height)
                      , n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                    n.width = Math.floor(t.width * i),
                    n.height = Math.floor(t.height * i);
                    var r = n.getContext("2d");
                    return r.drawImage(t, 0, 0, t.width, t.height, 0, 0, n.width, n.height),
                    n
                }
                return t
            }
            function h(t) {
                return n.Math.isPowerOfTwo(t.width) && n.Math.isPowerOfTwo(t.height)
            }
            function c(t) {
                if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement) {
                    var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                    e.width = n.Math.nearestPowerOfTwo(t.width),
                    e.height = n.Math.nearestPowerOfTwo(t.height);
                    var i = e.getContext("2d");
                    return i.drawImage(t, 0, 0, e.width, e.height),
                    e
                }
                return t
            }
            function u(t) {
                return t.wrapS !== n.ClampToEdgeWrapping || t.wrapT !== n.ClampToEdgeWrapping || t.minFilter !== n.NearestFilter && t.minFilter !== n.LinearFilter
            }
            function p(e) {
                return e === n.NearestFilter || e === n.NearestMipMapNearestFilter || e === n.NearestMipMapLinearFilter ? t.NEAREST : t.LINEAR
            }
            function f(t) {
                var e = t.target;
                e.removeEventListener("dispose", f),
                m(e),
                P.textures--
            }
            function d(t) {
                var e = t.target;
                e.removeEventListener("dispose", d),
                g(e),
                P.textures--
            }
            function m(e) {
                var i = r.get(e);
                if (e.image && i.__image__webglTextureCube)
                    t.deleteTexture(i.__image__webglTextureCube);
                else {
                    if (void 0 === i.__webglInit)
                        return;
                    t.deleteTexture(i.__webglTexture)
                }
                r["delete"](e)
            }
            function g(e) {
                var i = r.get(e)
                  , a = r.get(e.texture);
                if (e) {
                    if (void 0 !== a.__webglTexture && t.deleteTexture(a.__webglTexture),
                    e.depthTexture && e.depthTexture.dispose(),
                    e instanceof n.WebGLRenderTargetCube)
                        for (var o = 0; o < 6; o++)
                            t.deleteFramebuffer(i.__webglFramebuffer[o]),
                            i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer[o]);
                    else
                        t.deleteFramebuffer(i.__webglFramebuffer),
                        i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer);
                    r["delete"](e.texture),
                    r["delete"](e)
                }
            }
            function v(e, n) {
                var a = r.get(e);
                if (e.version > 0 && a.__version !== e.version) {
                    var o = e.image;
                    if (void 0 === o)
                        ;
                    else if (o.complete !== !1)
                        return void b(a, e, n)
                }
                i.activeTexture(t.TEXTURE0 + n),
                i.bindTexture(t.TEXTURE_2D, a.__webglTexture)
            }
            function y(e, s) {
                var c = r.get(e);
                if (6 === e.image.length)
                    if (e.version > 0 && c.__version !== e.version) {
                        c.__image__webglTextureCube || (e.addEventListener("dispose", f),
                        c.__image__webglTextureCube = t.createTexture(),
                        P.textures++),
                        i.activeTexture(t.TEXTURE0 + s),
                        i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube),
                        t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                        for (var u = e instanceof n.CompressedTexture, p = e.image[0]instanceof n.DataTexture, d = [], m = 0; m < 6; m++)
                            u || p ? d[m] = p ? e.image[m].image : e.image[m] : d[m] = l(e.image[m], a.maxCubemapSize);
                        var g = d[0]
                          , v = h(g)
                          , y = o(e.format)
                          , _ = o(e.type);
                        x(t.TEXTURE_CUBE_MAP, e, v);
                        for (var m = 0; m < 6; m++)
                            if (u)
                                for (var b, w = d[m].mipmaps, M = 0, T = w.length; M < T; M++)
                                    b = w[M],
                                    e.format !== n.RGBAFormat && e.format !== n.RGBFormat ? i.getCompressedTextureFormats().indexOf(y) > -1 && i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, M, y, b.width, b.height, 0, b.data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, M, y, b.width, b.height, 0, y, _, b.data);
                            else
                                p ? i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, y, d[m].width, d[m].height, 0, y, _, d[m].data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, y, y, _, d[m]);
                        e.generateMipmaps && v && t.generateMipmap(t.TEXTURE_CUBE_MAP),
                        c.__version = e.version,
                        e.onUpdate && e.onUpdate(e)
                    } else
                        i.activeTexture(t.TEXTURE0 + s),
                        i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube)
            }
            function _(e, n) {
                i.activeTexture(t.TEXTURE0 + n),
                i.bindTexture(t.TEXTURE_CUBE_MAP, r.get(e).__webglTexture)
            }
            function x(i, s, l) {
                var h;
                if (l ? (t.texParameteri(i, t.TEXTURE_WRAP_S, o(s.wrapS)),
                t.texParameteri(i, t.TEXTURE_WRAP_T, o(s.wrapT)),
                t.texParameteri(i, t.TEXTURE_MAG_FILTER, o(s.magFilter)),
                t.texParameteri(i, t.TEXTURE_MIN_FILTER, o(s.minFilter))) : (t.texParameteri(i, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                t.texParameteri(i, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                s.wrapS !== n.ClampToEdgeWrapping || s.wrapT !== n.ClampToEdgeWrapping,
                t.texParameteri(i, t.TEXTURE_MAG_FILTER, p(s.magFilter)),
                t.texParameteri(i, t.TEXTURE_MIN_FILTER, p(s.minFilter)),
                s.minFilter !== n.NearestFilter && s.minFilter !== n.LinearFilter),
                h = e.get("EXT_texture_filter_anisotropic")) {
                    if (s.type === n.FloatType && null === e.get("OES_texture_float_linear"))
                        return;
                    if (s.type === n.HalfFloatType && null === e.get("OES_texture_half_float_linear"))
                        return;
                    (s.anisotropy > 1 || r.get(s).__currentAnisotropy) && (t.texParameterf(i, h.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(s.anisotropy, a.getMaxAnisotropy())),
                    r.get(s).__currentAnisotropy = s.anisotropy)
                }
            }
            function b(e, r, s) {
                void 0 === e.__webglInit && (e.__webglInit = !0,
                r.addEventListener("dispose", f),
                e.__webglTexture = t.createTexture(),
                P.textures++),
                i.activeTexture(t.TEXTURE0 + s),
                i.bindTexture(t.TEXTURE_2D, e.__webglTexture),
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, r.flipY),
                t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha),
                t.pixelStorei(t.UNPACK_ALIGNMENT, r.unpackAlignment);
                var p = l(r.image, a.maxTextureSize);
                u(r) && h(p) === !1 && (p = c(p));
                var d = h(p)
                  , m = o(r.format)
                  , g = o(r.type);
                x(t.TEXTURE_2D, r, d);
                var v, y = r.mipmaps;
                if (r instanceof n.DepthTexture) {
                    var _ = t.DEPTH_COMPONENT;
                    if (r.type === n.FloatType) {
                        if (!E)
                            throw new Error("Float Depth Texture only supported in WebGL2.0");
                        _ = t.DEPTH_COMPONENT32F
                    } else
                        E && (_ = t.DEPTH_COMPONENT16);
                    i.texImage2D(t.TEXTURE_2D, 0, _, p.width, p.height, 0, m, g, null)
                } else if (r instanceof n.DataTexture)
                    if (y.length > 0 && d) {
                        for (var b = 0, w = y.length; b < w; b++)
                            v = y[b],
                            i.texImage2D(t.TEXTURE_2D, b, m, v.width, v.height, 0, m, g, v.data);
                        r.generateMipmaps = !1
                    } else
                        i.texImage2D(t.TEXTURE_2D, 0, m, p.width, p.height, 0, m, g, p.data);
                else if (r instanceof n.CompressedTexture)
                    for (var b = 0, w = y.length; b < w; b++)
                        v = y[b],
                        r.format !== n.RGBAFormat && r.format !== n.RGBFormat ? i.getCompressedTextureFormats().indexOf(m) > -1 && i.compressedTexImage2D(t.TEXTURE_2D, b, m, v.width, v.height, 0, v.data) : i.texImage2D(t.TEXTURE_2D, b, m, v.width, v.height, 0, m, g, v.data);
                else if (y.length > 0 && d) {
                    for (var b = 0, w = y.length; b < w; b++)
                        v = y[b],
                        i.texImage2D(t.TEXTURE_2D, b, m, m, g, v);
                    r.generateMipmaps = !1
                } else
                    i.texImage2D(t.TEXTURE_2D, 0, m, m, g, p);
                r.generateMipmaps && d && t.generateMipmap(t.TEXTURE_2D),
                e.__version = r.version,
                r.onUpdate && r.onUpdate(r)
            }
            function w(e, n, a, s) {
                var l = o(n.texture.format)
                  , h = o(n.texture.type);
                i.texImage2D(s, 0, l, n.width, n.height, 0, l, h, null),
                t.bindFramebuffer(t.FRAMEBUFFER, e),
                t.framebufferTexture2D(t.FRAMEBUFFER, a, s, r.get(n.texture).__webglTexture, 0),
                t.bindFramebuffer(t.FRAMEBUFFER, null)
            }
            function M(e, i) {
                t.bindRenderbuffer(t.RENDERBUFFER, e),
                i.depthBuffer && !i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, i.width, i.height),
                t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : i.depthBuffer && i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, i.width, i.height),
                t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, i.width, i.height),
                t.bindRenderbuffer(t.RENDERBUFFER, null)
            }
            function T(e, i) {
                var a = i instanceof n.WebGLRenderTargetCube;
                if (a)
                    throw new Error("Depth Texture with cube render targets is not supported!");
                if (t.bindFramebuffer(t.FRAMEBUFFER, e),
                !(i.depthTexture instanceof n.DepthTexture))
                    throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                r.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width,
                i.depthTexture.image.height = i.height,
                i.depthTexture.needsUpdate = !0),
                v(i.depthTexture, 0);
                var o = r.get(i.depthTexture).__webglTexture;
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, o, 0)
            }
            function S(e) {
                var i = r.get(e)
                  , a = e instanceof n.WebGLRenderTargetCube;
                if (e.depthTexture) {
                    if (a)
                        throw new Error("target.depthTexture not supported in Cube render targets");
                    T(i.__webglFramebuffer, e)
                } else if (a) {
                    i.__webglDepthbuffer = [];
                    for (var o = 0; o < 6; o++)
                        t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer[o]),
                        i.__webglDepthbuffer[o] = t.createRenderbuffer(),
                        M(i.__webglDepthbuffer[o], e)
                } else
                    t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer),
                    i.__webglDepthbuffer = t.createRenderbuffer(),
                    M(i.__webglDepthbuffer, e);
                t.bindFramebuffer(t.FRAMEBUFFER, null)
            }
            function C(e) {
                var a = r.get(e)
                  , o = r.get(e.texture);
                e.addEventListener("dispose", d),
                o.__webglTexture = t.createTexture(),
                P.textures++;
                var s = e instanceof n.WebGLRenderTargetCube
                  , l = h(e);
                if (s) {
                    a.__webglFramebuffer = [];
                    for (var c = 0; c < 6; c++)
                        a.__webglFramebuffer[c] = t.createFramebuffer()
                } else
                    a.__webglFramebuffer = t.createFramebuffer();
                if (s) {
                    i.bindTexture(t.TEXTURE_CUBE_MAP, o.__webglTexture),
                    x(t.TEXTURE_CUBE_MAP, e.texture, l);
                    for (var c = 0; c < 6; c++)
                        w(a.__webglFramebuffer[c], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + c);
                    e.texture.generateMipmaps && l && t.generateMipmap(t.TEXTURE_CUBE_MAP),
                    i.bindTexture(t.TEXTURE_CUBE_MAP, null)
                } else
                    i.bindTexture(t.TEXTURE_2D, o.__webglTexture),
                    x(t.TEXTURE_2D, e.texture, l),
                    w(a.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D),
                    e.texture.generateMipmaps && l && t.generateMipmap(t.TEXTURE_2D),
                    i.bindTexture(t.TEXTURE_2D, null);
                e.depthBuffer && S(e)
            }
            function A(e) {
                var a = e.texture;
                if (a.generateMipmaps && h(e) && a.minFilter !== n.NearestFilter && a.minFilter !== n.LinearFilter) {
                    var o = e instanceof n.WebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D
                      , s = r.get(a).__webglTexture;
                    i.bindTexture(o, s),
                    t.generateMipmap(o),
                    i.bindTexture(o, null)
                }
            }
            var P = s.memory
              , E = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext;
            this.setTexture2D = v,
            this.setTextureCube = y,
            this.setTextureCubeDynamic = _,
            this.setupRenderTarget = C,
            this.updateRenderTargetMipmap = A
        }
        ,
        n.WebGLUniforms = function() {
            var t = new n.Texture
              , e = new n.CubeTexture
              , i = function() {
                this.seq = [],
                this.map = {}
            }
              , r = []
              , a = []
              , o = function(t, e, i) {
                var n = t[0];
                if (n <= 0 || n > 0)
                    return t;
                var a = e * i
                  , o = r[a];
                if (void 0 === o && (o = new Float32Array(a),
                r[a] = o),
                0 !== e) {
                    n.toArray(o, 0);
                    for (var s = 1, l = 0; s !== e; ++s)
                        l += i,
                        t[s].toArray(o, l)
                }
                return o
            }
              , s = function(t, e) {
                var i = a[e];
                void 0 === i && (i = new Int32Array(e),
                a[e] = i);
                for (var n = 0; n !== e; ++n)
                    i[n] = t.allocTextureUnit();
                return i
            }
              , l = function(t, e) {
                t.uniform1f(this.addr, e)
            }
              , h = function(t, e) {
                t.uniform1i(this.addr, e)
            }
              , c = function(t, e) {
                void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y)
            }
              , u = function(t, e) {
                void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e)
            }
              , p = function(t, e) {
                void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w)
            }
              , f = function(t, e) {
                t.uniformMatrix2fv(this.addr, !1, e.elements || e)
            }
              , d = function(t, e) {
                t.uniformMatrix3fv(this.addr, !1, e.elements || e)
            }
              , m = function(t, e) {
                t.uniformMatrix4fv(this.addr, !1, e.elements || e)
            }
              , g = function(e, i, n) {
                var r = n.allocTextureUnit();
                e.uniform1i(this.addr, r),
                n.setTexture2D(i || t, r)
            }
              , v = function(t, i, n) {
                var r = n.allocTextureUnit();
                t.uniform1i(this.addr, r),
                n.setTextureCube(i || e, r)
            }
              , y = function(t, e) {
                t.uniform2iv(this.addr, e)
            }
              , _ = function(t, e) {
                t.uniform3iv(this.addr, e)
            }
              , x = function(t, e) {
                t.uniform4iv(this.addr, e)
            }
              , b = function(t) {
                switch (t) {
                case 5126:
                    return l;
                case 35664:
                    return c;
                case 35665:
                    return u;
                case 35666:
                    return p;
                case 35674:
                    return f;
                case 35675:
                    return d;
                case 35676:
                    return m;
                case 35678:
                    return g;
                case 35680:
                    return v;
                case 5124:
                case 35670:
                    return h;
                case 35667:
                case 35671:
                    return y;
                case 35668:
                case 35672:
                    return _;
                case 35669:
                case 35673:
                    return x
                }
            }
              , w = function(t, e) {
                t.uniform1fv(this.addr, e)
            }
              , M = function(t, e) {
                t.uniform1iv(this.addr, e)
            }
              , T = function(t, e) {
                t.uniform2fv(this.addr, o(e, this.size, 2))
            }
              , S = function(t, e) {
                t.uniform3fv(this.addr, o(e, this.size, 3))
            }
              , C = function(t, e) {
                t.uniform4fv(this.addr, o(e, this.size, 4))
            }
              , A = function(t, e) {
                t.uniformMatrix2fv(this.addr, !1, o(e, this.size, 4))
            }
              , P = function(t, e) {
                t.uniformMatrix3fv(this.addr, !1, o(e, this.size, 9))
            }
              , E = function(t, e) {
                t.uniformMatrix4fv(this.addr, !1, o(e, this.size, 16))
            }
              , L = function(e, i, n) {
                var r = i.length
                  , a = s(n, r);
                e.uniform1iv(this.addr, a);
                for (var o = 0; o !== r; ++o)
                    n.setTexture2D(i[o] || t, a[o])
            }
              , O = function(t, i, n) {
                var r = i.length
                  , a = s(n, r);
                t.uniform1iv(this.addr, a);
                for (var o = 0; o !== r; ++o)
                    n.setTextureCube(i[o] || e, a[o])
            }
              , R = function(t) {
                switch (t) {
                case 5126:
                    return w;
                case 35664:
                    return T;
                case 35665:
                    return S;
                case 35666:
                    return C;
                case 35674:
                    return A;
                case 35675:
                    return P;
                case 35676:
                    return E;
                case 35678:
                    return L;
                case 35680:
                    return O;
                case 5124:
                case 35670:
                    return M;
                case 35667:
                case 35671:
                    return y;
                case 35668:
                case 35672:
                    return _;
                case 35669:
                case 35673:
                    return x
                }
            }
              , D = function(t, e, i) {
                this.id = t,
                this.addr = i,
                this.setValue = b(e.type)
            }
              , I = function(t, e, i) {
                this.id = t,
                this.addr = i,
                this.size = e.size,
                this.setValue = R(e.type)
            }
              , k = function(t) {
                this.id = t,
                i.call(this)
            };
            k.prototype.setValue = function(t, e) {
                for (var i = this.seq, n = 0, r = i.length; n !== r; ++n) {
                    var a = i[n];
                    a.setValue(t, e[a.id])
                }
            }
            ;
            var N = /([\w\d_]+)(\])?(\[|\.)?/g
              , F = function(t, e) {
                t.seq.push(e),
                t.map[e.id] = e
            }
              , B = function(t, e, i) {
                var n = t.name
                  , r = n.length;
                for (N.lastIndex = 0; ; ) {
                    var a = N.exec(n)
                      , o = N.lastIndex
                      , s = a[1]
                      , l = "]" === a[2]
                      , h = a[3];
                    if (l && (s = 0 | s),
                    void 0 === h || "[" === h && o + 2 === r) {
                        F(i, void 0 === h ? new D(s,t,e) : new I(s,t,e));
                        break
                    }
                    var c = i.map
                      , u = c[s];
                    void 0 === u && (u = new k(s),
                    F(i, u)),
                    i = u
                }
            }
              , U = function(t, e, n) {
                i.call(this),
                this.renderer = n;
                for (var r = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), a = 0; a !== r; ++a) {
                    var o = t.getActiveUniform(e, a)
                      , s = o.name
                      , l = t.getUniformLocation(e, s);
                    B(o, l, this)
                }
            };
            return U.prototype.setValue = function(t, e, i) {
                var n = this.map[e];
                void 0 !== n && n.setValue(t, i, this.renderer)
            }
            ,
            U.prototype.set = function(t, e, i) {
                var n = this.map[i];
                void 0 !== n && n.setValue(t, e[i], this.renderer)
            }
            ,
            U.prototype.setOptional = function(t, e, i) {
                var n = e[i];
                void 0 !== n && this.setValue(t, i, n)
            }
            ,
            U.upload = function(t, e, i, n) {
                for (var r = 0, a = e.length; r !== a; ++r) {
                    var o = e[r]
                      , s = i[o.id];
                    s.needsUpdate !== !1 && o.setValue(t, s.value, n)
                }
            }
            ,
            U.seqWithValue = function(t, e) {
                for (var i = [], n = 0, r = t.length; n !== r; ++n) {
                    var a = t[n];
                    a.id in e && i.push(a)
                }
                return i
            }
            ,
            U.splitDynamic = function(t, e) {
                for (var i = null, n = t.length, r = 0, a = 0; a !== n; ++a) {
                    var o = t[a]
                      , s = e[o.id];
                    s && s.dynamic === !0 ? (null === i && (i = []),
                    i.push(o)) : (r < a && (t[r] = o),
                    ++r)
                }
                return r < n && (t.length = r),
                i
            }
            ,
            U.evalDynamic = function(t, e, i, n) {
                for (var r = 0, a = t.length; r !== a; ++r) {
                    var o = e[t[r].id]
                      , s = o.onUpdateCallback;
                    void 0 !== s && s.call(o, i, n)
                }
            }
            ,
            U
        }(),
        n.LensFlarePlugin = function(t, e) {
            function i() {
                var t = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
                  , e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                a = f.createBuffer(),
                o = f.createBuffer(),
                f.bindBuffer(f.ARRAY_BUFFER, a),
                f.bufferData(f.ARRAY_BUFFER, t, f.STATIC_DRAW),
                f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, o),
                f.bufferData(f.ELEMENT_ARRAY_BUFFER, e, f.STATIC_DRAW),
                u = f.createTexture(),
                p = f.createTexture(),
                d.bindTexture(f.TEXTURE_2D, u),
                f.texImage2D(f.TEXTURE_2D, 0, f.RGB, 16, 16, 0, f.RGB, f.UNSIGNED_BYTE, null),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                d.bindTexture(f.TEXTURE_2D, p),
                f.texImage2D(f.TEXTURE_2D, 0, f.RGBA, 16, 16, 0, f.RGBA, f.UNSIGNED_BYTE, null),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                s = {
                    vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                    fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                },
                l = r(s),
                h = {
                    vertex: f.getAttribLocation(l, "position"),
                    uv: f.getAttribLocation(l, "uv")
                },
                c = {
                    renderType: f.getUniformLocation(l, "renderType"),
                    map: f.getUniformLocation(l, "map"),
                    occlusionMap: f.getUniformLocation(l, "occlusionMap"),
                    opacity: f.getUniformLocation(l, "opacity"),
                    color: f.getUniformLocation(l, "color"),
                    scale: f.getUniformLocation(l, "scale"),
                    rotation: f.getUniformLocation(l, "rotation"),
                    screenPosition: f.getUniformLocation(l, "screenPosition")
                }
            }
            function r(e) {
                var i = f.createProgram()
                  , n = f.createShader(f.FRAGMENT_SHADER)
                  , r = f.createShader(f.VERTEX_SHADER)
                  , a = "precision " + t.getPrecision() + " float;\n";
                return f.shaderSource(n, a + e.fragmentShader),
                f.shaderSource(r, a + e.vertexShader),
                f.compileShader(n),
                f.compileShader(r),
                f.attachShader(i, n),
                f.attachShader(i, r),
                f.linkProgram(i),
                i
            }
            var a, o, s, l, h, c, u, p, f = t.context, d = t.state;
            this.render = function(r, s, m) {
                if (0 !== e.length) {
                    var g = new n.Vector3
                      , v = m.w / m.z
                      , y = .5 * m.z
                      , _ = .5 * m.w
                      , x = 16 / m.w
                      , b = new n.Vector2(x * v,x)
                      , w = new n.Vector3(1,1,0)
                      , M = new n.Vector2(1,1)
                      , T = new n.Box2;
                    T.min.set(0, 0),
                    T.max.set(m.z - 16, m.w - 16),
                    void 0 === l && i(),
                    f.useProgram(l),
                    d.initAttributes(),
                    d.enableAttribute(h.vertex),
                    d.enableAttribute(h.uv),
                    d.disableUnusedAttributes(),
                    f.uniform1i(c.occlusionMap, 0),
                    f.uniform1i(c.map, 1),
                    f.bindBuffer(f.ARRAY_BUFFER, a),
                    f.vertexAttribPointer(h.vertex, 2, f.FLOAT, !1, 16, 0),
                    f.vertexAttribPointer(h.uv, 2, f.FLOAT, !1, 16, 8),
                    f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, o),
                    d.disable(f.CULL_FACE),
                    d.setDepthWrite(!1);
                    for (var S = 0, C = e.length; S < C; S++) {
                        x = 16 / m.w,
                        b.set(x * v, x);
                        var A = e[S];
                        if (g.set(A.matrixWorld.elements[12], A.matrixWorld.elements[13], A.matrixWorld.elements[14]),
                        g.applyMatrix4(s.matrixWorldInverse),
                        g.applyProjection(s.projectionMatrix),
                        w.copy(g),
                        M.x = m.x + w.x * y + y - 8,
                        M.y = m.y + w.y * _ + _ - 8,
                        T.containsPoint(M) === !0) {
                            d.activeTexture(f.TEXTURE0),
                            d.bindTexture(f.TEXTURE_2D, null),
                            d.activeTexture(f.TEXTURE1),
                            d.bindTexture(f.TEXTURE_2D, u),
                            f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGB, M.x, M.y, 16, 16, 0),
                            f.uniform1i(c.renderType, 0),
                            f.uniform2f(c.scale, b.x, b.y),
                            f.uniform3f(c.screenPosition, w.x, w.y, w.z),
                            d.disable(f.BLEND),
                            d.enable(f.DEPTH_TEST),
                            f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                            d.activeTexture(f.TEXTURE0),
                            d.bindTexture(f.TEXTURE_2D, p),
                            f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGBA, M.x, M.y, 16, 16, 0),
                            f.uniform1i(c.renderType, 1),
                            d.disable(f.DEPTH_TEST),
                            d.activeTexture(f.TEXTURE1),
                            d.bindTexture(f.TEXTURE_2D, u),
                            f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                            A.positionScreen.copy(w),
                            A.customUpdateCallback ? A.customUpdateCallback(A) : A.updateLensFlares(),
                            f.uniform1i(c.renderType, 2),
                            d.enable(f.BLEND);
                            for (var P = 0, E = A.lensFlares.length; P < E; P++) {
                                var L = A.lensFlares[P];
                                L.opacity > .001 && L.scale > .001 && (w.x = L.x,
                                w.y = L.y,
                                w.z = L.z,
                                x = L.size * L.scale / m.w,
                                b.x = x * v,
                                b.y = x,
                                f.uniform3f(c.screenPosition, w.x, w.y, w.z),
                                f.uniform2f(c.scale, b.x, b.y),
                                f.uniform1f(c.rotation, L.rotation),
                                f.uniform1f(c.opacity, L.opacity),
                                f.uniform3f(c.color, L.color.r, L.color.g, L.color.b),
                                d.setBlending(L.blending, L.blendEquation, L.blendSrc, L.blendDst),
                                t.setTexture2D(L.texture, 1),
                                f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0))
                            }
                        }
                    }
                    d.enable(f.CULL_FACE),
                    d.enable(f.DEPTH_TEST),
                    d.setDepthWrite(!0),
                    t.resetGLState()
                }
            }
        }
        ,
        n.SpritePlugin = function(t, e) {
            function i() {
                var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
                  , e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                o = p.createBuffer(),
                s = p.createBuffer(),
                p.bindBuffer(p.ARRAY_BUFFER, o),
                p.bufferData(p.ARRAY_BUFFER, t, p.STATIC_DRAW),
                p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, s),
                p.bufferData(p.ELEMENT_ARRAY_BUFFER, e, p.STATIC_DRAW),
                l = r(),
                h = {
                    position: p.getAttribLocation(l, "position"),
                    uv: p.getAttribLocation(l, "uv")
                },
                c = {
                    uvOffset: p.getUniformLocation(l, "uvOffset"),
                    uvScale: p.getUniformLocation(l, "uvScale"),
                    rotation: p.getUniformLocation(l, "rotation"),
                    scale: p.getUniformLocation(l, "scale"),
                    color: p.getUniformLocation(l, "color"),
                    map: p.getUniformLocation(l, "map"),
                    opacity: p.getUniformLocation(l, "opacity"),
                    modelViewMatrix: p.getUniformLocation(l, "modelViewMatrix"),
                    projectionMatrix: p.getUniformLocation(l, "projectionMatrix"),
                    fogType: p.getUniformLocation(l, "fogType"),
                    fogDensity: p.getUniformLocation(l, "fogDensity"),
                    fogNear: p.getUniformLocation(l, "fogNear"),
                    fogFar: p.getUniformLocation(l, "fogFar"),
                    fogColor: p.getUniformLocation(l, "fogColor"),
                    alphaTest: p.getUniformLocation(l, "alphaTest")
                };
                var i = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                i.width = 8,
                i.height = 8;
                var a = i.getContext("2d");
                a.fillStyle = "white",
                a.fillRect(0, 0, 8, 8),
                u = new n.Texture(i),
                u.needsUpdate = !0
            }
            function r() {
                var e = p.createProgram()
                  , i = p.createShader(p.VERTEX_SHADER)
                  , n = p.createShader(p.FRAGMENT_SHADER);
                return p.shaderSource(i, ["precision " + t.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")),
                p.shaderSource(n, ["precision " + t.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")),
                p.compileShader(i),
                p.compileShader(n),
                p.attachShader(e, i),
                p.attachShader(e, n),
                p.linkProgram(e),
                e
            }
            function a(t, e) {
                return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
            }
            var o, s, l, h, c, u, p = t.context, f = t.state, d = new n.Vector3, m = new n.Quaternion, g = new n.Vector3;
            this.render = function(r, v) {
                if (0 !== e.length) {
                    void 0 === l && i(),
                    p.useProgram(l),
                    f.initAttributes(),
                    f.enableAttribute(h.position),
                    f.enableAttribute(h.uv),
                    f.disableUnusedAttributes(),
                    f.disable(p.CULL_FACE),
                    f.enable(p.BLEND),
                    p.bindBuffer(p.ARRAY_BUFFER, o),
                    p.vertexAttribPointer(h.position, 2, p.FLOAT, !1, 16, 0),
                    p.vertexAttribPointer(h.uv, 2, p.FLOAT, !1, 16, 8),
                    p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, s),
                    p.uniformMatrix4fv(c.projectionMatrix, !1, v.projectionMatrix.elements),
                    f.activeTexture(p.TEXTURE0),
                    p.uniform1i(c.map, 0);
                    var y = 0
                      , _ = 0
                      , x = r.fog;
                    x ? (p.uniform3f(c.fogColor, x.color.r, x.color.g, x.color.b),
                    x instanceof n.Fog ? (p.uniform1f(c.fogNear, x.near),
                    p.uniform1f(c.fogFar, x.far),
                    p.uniform1i(c.fogType, 1),
                    y = 1,
                    _ = 1) : x instanceof n.FogExp2 && (p.uniform1f(c.fogDensity, x.density),
                    p.uniform1i(c.fogType, 2),
                    y = 2,
                    _ = 2)) : (p.uniform1i(c.fogType, 0),
                    y = 0,
                    _ = 0);
                    for (var b = 0, w = e.length; b < w; b++) {
                        var M = e[b];
                        M.modelViewMatrix.multiplyMatrices(v.matrixWorldInverse, M.matrixWorld),
                        M.z = -M.modelViewMatrix.elements[14]
                    }
                    e.sort(a);
                    for (var T = [], b = 0, w = e.length; b < w; b++) {
                        var M = e[b]
                          , S = M.material;
                        if (S.visible !== !1) {
                            p.uniform1f(c.alphaTest, S.alphaTest),
                            p.uniformMatrix4fv(c.modelViewMatrix, !1, M.modelViewMatrix.elements),
                            M.matrixWorld.decompose(d, m, g),
                            T[0] = g.x,
                            T[1] = g.y;
                            var C = 0;
                            r.fog && S.fog && (C = _),
                            y !== C && (p.uniform1i(c.fogType, C),
                            y = C),
                            null !== S.map ? (p.uniform2f(c.uvOffset, S.map.offset.x, S.map.offset.y),
                            p.uniform2f(c.uvScale, S.map.repeat.x, S.map.repeat.y)) : (p.uniform2f(c.uvOffset, 0, 0),
                            p.uniform2f(c.uvScale, 1, 1)),
                            p.uniform1f(c.opacity, S.opacity),
                            p.uniform3f(c.color, S.color.r, S.color.g, S.color.b),
                            p.uniform1f(c.rotation, S.rotation),
                            p.uniform2fv(c.scale, T),
                            f.setBlending(S.blending, S.blendEquation, S.blendSrc, S.blendDst),
                            f.setDepthTest(S.depthTest),
                            f.setDepthWrite(S.depthWrite),
                            S.map ? t.setTexture2D(S.map, 0) : t.setTexture2D(u, 0),
                            p.drawElements(p.TRIANGLES, 6, p.UNSIGNED_SHORT, 0)
                        }
                    }
                    f.enable(p.CULL_FACE),
                    t.resetGLState()
                }
            }
        }
        ,
        Object.assign(n, {
            Face4: function(t, e, i, r, a, o, s) {
                return new n.Face3(t,e,i,a,o,s)
            },
            LineStrip: 0,
            LinePieces: 1,
            MeshFaceMaterial: n.MultiMaterial,
            PointCloud: function(t, e) {
                return new n.Points(t,e)
            },
            Particle: n.Sprite,
            ParticleSystem: function(t, e) {
                return new n.Points(t,e)
            },
            PointCloudMaterial: function(t) {
                return new n.PointsMaterial(t)
            },
            ParticleBasicMaterial: function(t) {
                return new n.PointsMaterial(t)
            },
            ParticleSystemMaterial: function(t) {
                return new n.PointsMaterial(t)
            },
            Vertex: function(t, e, i) {
                return new n.Vector3(t,e,i)
            }
        }),
        Object.assign(n.Box2.prototype, {
            empty: function() {
                return this.isEmpty()
            },
            isIntersectionBox: function(t) {
                return this.intersectsBox(t)
            }
        }),
        Object.assign(n.Box3.prototype, {
            empty: function() {
                return this.isEmpty()
            },
            isIntersectionBox: function(t) {
                return this.intersectsBox(t)
            },
            isIntersectionSphere: function(t) {
                return this.intersectsSphere(t)
            }
        }),
        Object.assign(n.Matrix3.prototype, {
            multiplyVector3: function(t) {
                return t.applyMatrix3(this)
            },
            multiplyVector3Array: function(t) {
                return this.applyToVector3Array(t)
            }
        }),
        Object.assign(n.Matrix4.prototype, {
            extractPosition: function(t) {
                return this.copyPosition(t)
            },
            setRotationFromQuaternion: function(t) {
                return this.makeRotationFromQuaternion(t)
            },
            multiplyVector3: function(t) {
                return t.applyProjection(this)
            },
            multiplyVector4: function(t) {
                return t.applyMatrix4(this)
            },
            multiplyVector3Array: function(t) {
                return this.applyToVector3Array(t)
            },
            rotateAxis: function(t) {
                t.transformDirection(this)
            },
            crossVector: function(t) {
                return t.applyMatrix4(this)
            },
            translate: function(t) {},
            rotateX: function(t) {},
            rotateY: function(t) {},
            rotateZ: function(t) {},
            rotateByAxis: function(t, e) {}
        }),
        Object.assign(n.Plane.prototype, {
            isIntersectionLine: function(t) {
                return this.intersectsLine(t)
            }
        }),
        Object.assign(n.Quaternion.prototype, {
            multiplyVector3: function(t) {
                return t.applyQuaternion(this)
            }
        }),
        Object.assign(n.Ray.prototype, {
            isIntersectionBox: function(t) {
                return this.intersectsBox(t)
            },
            isIntersectionPlane: function(t) {
                return this.intersectsPlane(t)
            },
            isIntersectionSphere: function(t) {
                return this.intersectsSphere(t)
            }
        }),
        Object.assign(n.Vector3.prototype, {
            setEulerFromRotationMatrix: function() {},
            setEulerFromQuaternion: function() {},
            getPositionFromMatrix: function(t) {
                return this.setFromMatrixPosition(t)
            },
            getScaleFromMatrix: function(t) {
                return this.setFromMatrixScale(t)
            },
            getColumnFromMatrix: function(t, e) {
                return this.setFromMatrixColumn(e, t)
            }
        }),
        Object.assign(n.Object3D.prototype, {
            getChildByName: function(t) {
                return this.getObjectByName(t)
            },
            renderDepth: function(t) {},
            translate: function(t, e) {
                return this.translateOnAxis(e, t)
            }
        }),
        Object.defineProperties(n.Object3D.prototype, {
            eulerOrder: {
                get: function() {
                    return this.rotation.order
                },
                set: function(t) {
                    this.rotation.order = t
                }
            },
            useQuaternion: {
                get: function() {},
                set: function(t) {}
            }
        }),
        Object.defineProperties(n.LOD.prototype, {
            objects: {
                get: function() {
                    return this.levels
                }
            }
        }),
        n.PerspectiveCamera.prototype.setLens = function(t, e) {
            void 0 !== e && (this.filmGauge = e),
            this.setFocalLength(t)
        }
        ,
        Object.defineProperties(n.Light.prototype, {
            onlyShadow: {
                set: function(t) {}
            },
            shadowCameraFov: {
                set: function(t) {
                    this.shadow.camera.fov = t
                }
            },
            shadowCameraLeft: {
                set: function(t) {
                    this.shadow.camera.left = t
                }
            },
            shadowCameraRight: {
                set: function(t) {
                    this.shadow.camera.right = t
                }
            },
            shadowCameraTop: {
                set: function(t) {
                    this.shadow.camera.top = t
                }
            },
            shadowCameraBottom: {
                set: function(t) {
                    this.shadow.camera.bottom = t
                }
            },
            shadowCameraNear: {
                set: function(t) {
                    this.shadow.camera.near = t
                }
            },
            shadowCameraFar: {
                set: function(t) {
                    this.shadow.camera.far = t
                }
            },
            shadowCameraVisible: {
                set: function(t) {}
            },
            shadowBias: {
                set: function(t) {
                    this.shadow.bias = t
                }
            },
            shadowDarkness: {
                set: function(t) {}
            },
            shadowMapWidth: {
                set: function(t) {
                    this.shadow.mapSize.width = t
                }
            },
            shadowMapHeight: {
                set: function(t) {
                    this.shadow.mapSize.height = t
                }
            }
        }),
        Object.defineProperties(n.BufferAttribute.prototype, {
            length: {
                get: function() {
                    return this.array.length
                }
            }
        }),
        Object.assign(n.BufferGeometry.prototype, {
            addIndex: function(t) {
                this.setIndex(t)
            },
            addDrawCall: function(t, e, i) {
                this.addGroup(t, e)
            },
            clearDrawCalls: function() {
                this.clearGroups()
            },
            computeTangents: function() {},
            computeOffsets: function() {}
        }),
        Object.defineProperties(n.BufferGeometry.prototype, {
            drawcalls: {
                get: function() {
                    return this.groups
                }
            },
            offsets: {
                get: function() {
                    return this.groups
                }
            }
        }),
        Object.defineProperties(n.Material.prototype, {
            wrapAround: {
                get: function() {},
                set: function(t) {}
            },
            wrapRGB: {
                get: function() {
                    return new n.Color
                }
            }
        }),
        Object.defineProperties(n.MeshPhongMaterial.prototype, {
            metal: {
                get: function() {
                    return !1
                },
                set: function(t) {}
            }
        }),
        Object.defineProperties(n.ShaderMaterial.prototype, {
            derivatives: {
                get: function() {
                    return this.extensions.derivatives
                },
                set: function(t) {
                    this.extensions.derivatives = t
                }
            }
        }),
        n.EventDispatcher.prototype = Object.assign(Object.create({
            constructor: n.EventDispatcher,
            apply: function(t) {
                Object.assign(t, this)
            }
        }), n.EventDispatcher.prototype),
        Object.assign(n.WebGLRenderer.prototype, {
            supportsFloatTextures: function() {
                return this.extensions.get("OES_texture_float")
            },
            supportsHalfFloatTextures: function() {
                return this.extensions.get("OES_texture_half_float")
            },
            supportsStandardDerivatives: function() {
                return this.extensions.get("OES_standard_derivatives")
            },
            supportsCompressedTextureS3TC: function() {
                return this.extensions.get("WEBGL_compressed_texture_s3tc")
            },
            supportsCompressedTexturePVRTC: function() {
                return this.extensions.get("WEBGL_compressed_texture_pvrtc")
            },
            supportsBlendMinMax: function() {
                return this.extensions.get("EXT_blend_minmax")
            },
            supportsVertexTextures: function() {
                return this.capabilities.vertexTextures
            },
            supportsInstancedArrays: function() {
                return this.extensions.get("ANGLE_instanced_arrays")
            },
            enableScissorTest: function(t) {
                this.setScissorTest(t)
            },
            initMaterial: function() {},
            addPrePlugin: function() {},
            addPostPlugin: function() {},
            updateShadowMap: function() {}
        }),
        Object.defineProperties(n.WebGLRenderer.prototype, {
            shadowMapEnabled: {
                get: function() {
                    return this.shadowMap.enabled
                },
                set: function(t) {
                    this.shadowMap.enabled = t
                }
            },
            shadowMapType: {
                get: function() {
                    return this.shadowMap.type
                },
                set: function(t) {
                    this.shadowMap.type = t
                }
            },
            shadowMapCullFace: {
                get: function() {
                    return this.shadowMap.cullFace
                },
                set: function(t) {
                    this.shadowMap.cullFace = t
                }
            }
        }),
        Object.defineProperties(n.WebGLShadowMap.prototype, {
            cullFace: {
                get: function() {
                    return this.renderReverseSided ? n.CullFaceFront : n.CullFaceBack
                },
                set: function(t) {
                    var e = t !== n.CullFaceBack;
                    this.renderReverseSided = e
                }
            }
        }),
        Object.defineProperties(n.WebGLRenderTarget.prototype, {
            wrapS: {
                get: function() {
                    return this.texture.wrapS
                },
                set: function(t) {
                    this.texture.wrapS = t
                }
            },
            wrapT: {
                get: function() {
                    return this.texture.wrapT
                },
                set: function(t) {
                    this.texture.wrapT = t
                }
            },
            magFilter: {
                get: function() {
                    return this.texture.magFilter
                },
                set: function(t) {
                    this.texture.magFilter = t
                }
            },
            minFilter: {
                get: function() {
                    return this.texture.minFilter
                },
                set: function(t) {
                    this.texture.minFilter = t
                }
            },
            anisotropy: {
                get: function() {
                    return this.texture.anisotropy
                },
                set: function(t) {
                    this.texture.anisotropy = t
                }
            },
            offset: {
                get: function() {
                    return this.texture.offset
                },
                set: function(t) {
                    this.texture.offset = t
                }
            },
            repeat: {
                get: function() {
                    return this.texture.repeat
                },
                set: function(t) {
                    this.texture.repeat = t
                }
            },
            format: {
                get: function() {
                    return this.texture.format
                },
                set: function(t) {
                    this.texture.format = t
                }
            },
            type: {
                get: function() {
                    return this.texture.type
                },
                set: function(t) {
                    this.texture.type = t
                }
            },
            generateMipmaps: {
                get: function() {
                    return this.texture.generateMipmaps
                },
                set: function(t) {
                    this.texture.generateMipmaps = t
                }
            }
        }),
        Object.assign(n.Audio.prototype, {
            load: function(t) {
                var e = this
                  , i = new n.AudioLoader;
                return i.load(t, function(t) {
                    e.setBuffer(t)
                }),
                this
            }
        }),
        Object.assign(n.AudioAnalyser.prototype, {
            getData: function(t) {
                return this.getFrequencyData()
            }
        }),
        n.GeometryUtils = {
            merge: function(t, e, i) {
                var r;
                e instanceof n.Mesh && (e.matrixAutoUpdate && e.updateMatrix(),
                r = e.matrix,
                e = e.geometry),
                t.merge(e, r, i)
            },
            center: function(t) {
                return t.center()
            }
        },
        n.ImageUtils = {
            crossOrigin: void 0,
            loadTexture: function(t, e, i, r) {
                var a = new n.TextureLoader;
                a.setCrossOrigin(this.crossOrigin);
                var o = a.load(t, i, void 0, r);
                return e && (o.mapping = e),
                o
            },
            loadTextureCube: function(t, e, i, r) {
                var a = new n.CubeTextureLoader;
                a.setCrossOrigin(this.crossOrigin);
                var o = a.load(t, i, void 0, r);
                return e && (o.mapping = e),
                o
            },
            loadCompressedTexture: function() {},
            loadCompressedTextureCube: function() {}
        },
        n.Projector = function() {
            this.projectVector = function(t, e) {
                t.project(e)
            }
            ,
            this.unprojectVector = function(t, e) {
                t.unproject(e)
            }
            ,
            this.pickingRay = function(t, e) {}
        }
        ,
        n.CanvasRenderer = function() {
            this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
            this.clear = function() {}
            ,
            this.render = function() {}
            ,
            this.setClearColor = function() {}
            ,
            this.setSize = function() {}
        }
        ,
        n.CurveUtils = {
            tangentQuadraticBezier: function(t, e, i, n) {
                return 2 * (1 - t) * (i - e) + 2 * t * (n - i)
            },
            tangentCubicBezier: function(t, e, i, n, r) {
                return -3 * e * (1 - t) * (1 - t) + 3 * i * (1 - t) * (1 - t) - 6 * t * i * (1 - t) + 6 * t * n * (1 - t) - 3 * t * t * n + 3 * t * t * r
            },
            tangentSpline: function(t, e, i, n, r) {
                var a = 6 * t * t - 6 * t
                  , o = 3 * t * t - 4 * t + 1
                  , s = -6 * t * t + 6 * t
                  , l = 3 * t * t - 2 * t;
                return a + o + s + l
            },
            interpolate: function(t, e, i, n, r) {
                var a = .5 * (i - t)
                  , o = .5 * (n - e)
                  , s = r * r
                  , l = r * s;
                return (2 * e - 2 * i + a + o) * l + (-3 * e + 3 * i - 2 * a - o) * s + a * r + e
            }
        },
        n.SceneUtils = {
            createMultiMaterialObject: function(t, e) {
                for (var i = new n.Group, r = 0, a = e.length; r < a; r++)
                    i.add(new n.Mesh(t,e[r]));
                return i
            },
            detach: function(t, e, i) {
                t.applyMatrix(e.matrixWorld),
                e.remove(t),
                i.add(t)
            },
            attach: function(t, e, i) {
                var r = new n.Matrix4;
                r.getInverse(i.matrixWorld),
                t.applyMatrix(r),
                e.remove(t),
                i.add(t)
            }
        },
        n.ShapeUtils = {
            area: function(t) {
                for (var e = t.length, i = 0, n = e - 1, r = 0; r < e; n = r++)
                    i += t[n].x * t[r].y - t[r].x * t[n].y;
                return .5 * i
            },
            triangulate: function() {
                function t(t, e, i, n, r, a) {
                    var o, s, l, h, c, u, p, f, d;
                    if (s = t[a[e]].x,
                    l = t[a[e]].y,
                    h = t[a[i]].x,
                    c = t[a[i]].y,
                    u = t[a[n]].x,
                    p = t[a[n]].y,
                    Number.EPSILON > (h - s) * (p - l) - (c - l) * (u - s))
                        return !1;
                    var m, g, v, y, _, x, b, w, M, T, S, C, A, P, E;
                    for (m = u - h,
                    g = p - c,
                    v = s - u,
                    y = l - p,
                    _ = h - s,
                    x = c - l,
                    o = 0; o < r; o++)
                        if (f = t[a[o]].x,
                        d = t[a[o]].y,
                        !(f === s && d === l || f === h && d === c || f === u && d === p) && (b = f - s,
                        w = d - l,
                        M = f - h,
                        T = d - c,
                        S = f - u,
                        C = d - p,
                        E = m * T - g * M,
                        A = _ * w - x * b,
                        P = v * C - y * S,
                        E >= -Number.EPSILON && P >= -Number.EPSILON && A >= -Number.EPSILON))
                            return !1;
                    return !0
                }
                return function(e, i) {
                    var r = e.length;
                    if (r < 3)
                        return null;
                    var a, o, s, l = [], h = [], c = [];
                    if (n.ShapeUtils.area(e) > 0)
                        for (o = 0; o < r; o++)
                            h[o] = o;
                    else
                        for (o = 0; o < r; o++)
                            h[o] = r - 1 - o;
                    var u = r
                      , p = 2 * u;
                    for (o = u - 1; u > 2; ) {
                        if (p-- <= 0)
                            return i ? c : l;
                        if (a = o,
                        u <= a && (a = 0),
                        o = a + 1,
                        u <= o && (o = 0),
                        s = o + 1,
                        u <= s && (s = 0),
                        t(e, a, o, s, u, h)) {
                            var f, d, m, g, v;
                            for (f = h[a],
                            d = h[o],
                            m = h[s],
                            l.push([e[f], e[d], e[m]]),
                            c.push([h[a], h[o], h[s]]),
                            g = o,
                            v = o + 1; v < u; g++,
                            v++)
                                h[g] = h[v];
                            u--,
                            p = 2 * u
                        }
                    }
                    return i ? c : l
                }
            }(),
            triangulateShape: function(t, e) {
                function i(t) {
                    var e = t.length;
                    e > 2 && t[e - 1].equals(t[0]) && t.pop()
                }
                function r(t, e, i) {
                    return t.x !== e.x ? t.x < e.x ? t.x <= i.x && i.x <= e.x : e.x <= i.x && i.x <= t.x : t.y < e.y ? t.y <= i.y && i.y <= e.y : e.y <= i.y && i.y <= t.y
                }
                function a(t, e, i, n, a) {
                    var o = e.x - t.x
                      , s = e.y - t.y
                      , l = n.x - i.x
                      , h = n.y - i.y
                      , c = t.x - i.x
                      , u = t.y - i.y
                      , p = s * l - o * h
                      , f = s * c - o * u;
                    if (Math.abs(p) > Number.EPSILON) {
                        var d;
                        if (p > 0) {
                            if (f < 0 || f > p)
                                return [];
                            if (d = h * c - l * u,
                            d < 0 || d > p)
                                return []
                        } else {
                            if (f > 0 || f < p)
                                return [];
                            if (d = h * c - l * u,
                            d > 0 || d < p)
                                return []
                        }
                        if (0 === d)
                            return !a || 0 !== f && f !== p ? [t] : [];
                        if (d === p)
                            return !a || 0 !== f && f !== p ? [e] : [];
                        if (0 === f)
                            return [i];
                        if (f === p)
                            return [n];
                        var m = d / p;
                        return [{
                            x: t.x + m * o,
                            y: t.y + m * s
                        }]
                    }
                    if (0 !== f || h * c !== l * u)
                        return [];
                    var g = 0 === o && 0 === s
                      , v = 0 === l && 0 === h;
                    if (g && v)
                        return t.x !== i.x || t.y !== i.y ? [] : [t];
                    if (g)
                        return r(i, n, t) ? [t] : [];
                    if (v)
                        return r(t, e, i) ? [i] : [];
                    var y, _, x, b, w, M, T, S;
                    return 0 !== o ? (t.x < e.x ? (y = t,
                    x = t.x,
                    _ = e,
                    b = e.x) : (y = e,
                    x = e.x,
                    _ = t,
                    b = t.x),
                    i.x < n.x ? (w = i,
                    T = i.x,
                    M = n,
                    S = n.x) : (w = n,
                    T = n.x,
                    M = i,
                    S = i.x)) : (t.y < e.y ? (y = t,
                    x = t.y,
                    _ = e,
                    b = e.y) : (y = e,
                    x = e.y,
                    _ = t,
                    b = t.y),
                    i.y < n.y ? (w = i,
                    T = i.y,
                    M = n,
                    S = n.y) : (w = n,
                    T = n.y,
                    M = i,
                    S = i.y)),
                    x <= T ? b < T ? [] : b === T ? a ? [] : [w] : b <= S ? [w, _] : [w, M] : x > S ? [] : x === S ? a ? [] : [y] : b <= S ? [y, _] : [y, M]
                }
                function o(t, e, i, n) {
                    var r = e.x - t.x
                      , a = e.y - t.y
                      , o = i.x - t.x
                      , s = i.y - t.y
                      , l = n.x - t.x
                      , h = n.y - t.y
                      , c = r * s - a * o
                      , u = r * h - a * l;
                    if (Math.abs(c) > Number.EPSILON) {
                        var p = l * s - h * o;
                        return c > 0 ? u >= 0 && p >= 0 : u >= 0 || p >= 0
                    }
                    return u > 0
                }
                function s(t, e) {
                    function i(t, e) {
                        var i = y.length - 1
                          , n = t - 1;
                        n < 0 && (n = i);
                        var r = t + 1;
                        r > i && (r = 0);
                        var a = o(y[t], y[n], y[r], s[e]);
                        if (!a)
                            return !1;
                        var l = s.length - 1
                          , h = e - 1;
                        h < 0 && (h = l);
                        var c = e + 1;
                        return c > l && (c = 0),
                        a = o(s[e], s[h], s[c], y[t]),
                        !!a
                    }
                    function n(t, e) {
                        var i, n, r;
                        for (i = 0; i < y.length; i++)
                            if (n = i + 1,
                            n %= y.length,
                            r = a(t, e, y[i], y[n], !0),
                            r.length > 0)
                                return !0;
                        return !1
                    }
                    function r(t, i) {
                        var n, r, o, s, l;
                        for (n = 0; n < _.length; n++)
                            for (r = e[_[n]],
                            o = 0; o < r.length; o++)
                                if (s = o + 1,
                                s %= r.length,
                                l = a(t, i, r[o], r[s], !0),
                                l.length > 0)
                                    return !0;
                        return !1
                    }
                    for (var s, l, h, c, u, p, f, d, m, g, v, y = t.concat(), _ = [], x = [], b = 0, w = e.length; b < w; b++)
                        _.push(b);
                    for (var M = 0, T = 2 * _.length; _.length > 0 && (T--,
                    !(T < 0)); )
                        for (h = M; h < y.length; h++) {
                            c = y[h],
                            l = -1;
                            for (var b = 0; b < _.length; b++)
                                if (p = _[b],
                                f = c.x + ":" + c.y + ":" + p,
                                void 0 === x[f]) {
                                    s = e[p];
                                    for (var S = 0; S < s.length; S++)
                                        if (u = s[S],
                                        i(h, S) && !n(c, u) && !r(c, u)) {
                                            l = S,
                                            _.splice(b, 1),
                                            d = y.slice(0, h + 1),
                                            m = y.slice(h),
                                            g = s.slice(l),
                                            v = s.slice(0, l + 1),
                                            y = d.concat(g).concat(v).concat(m),
                                            M = h;
                                            break
                                        }
                                    if (l >= 0)
                                        break;
                                    x[f] = !0
                                }
                            if (l >= 0)
                                break
                        }
                    return y
                }
                i(t),
                e.forEach(i);
                for (var l, h, c, u, p, f, d = {}, m = t.concat(), g = 0, v = e.length; g < v; g++)
                    Array.prototype.push.apply(m, e[g]);
                for (l = 0,
                h = m.length; l < h; l++)
                    p = m[l].x + ":" + m[l].y,
                    void 0 !== d[p],
                    d[p] = l;
                var y = s(t, e)
                  , _ = n.ShapeUtils.triangulate(y, !1);
                for (l = 0,
                h = _.length; l < h; l++)
                    for (u = _[l],
                    c = 0; c < 3; c++)
                        p = u[c].x + ":" + u[c].y,
                        f = d[p],
                        void 0 !== f && (u[c] = f);
                return _.concat()
            },
            isClockWise: function(t) {
                return n.ShapeUtils.area(t) < 0
            },
            b2: function() {
                function t(t, e) {
                    var i = 1 - t;
                    return i * i * e
                }
                function e(t, e) {
                    return 2 * (1 - t) * t * e
                }
                function i(t, e) {
                    return t * t * e
                }
                return function(n, r, a, o) {
                    return t(n, r) + e(n, a) + i(n, o)
                }
            }(),
            b3: function() {
                function t(t, e) {
                    var i = 1 - t;
                    return i * i * i * e
                }
                function e(t, e) {
                    var i = 1 - t;
                    return 3 * i * i * t * e
                }
                function i(t, e) {
                    var i = 1 - t;
                    return 3 * i * t * t * e
                }
                function n(t, e) {
                    return t * t * t * e
                }
                return function(r, a, o, s, l) {
                    return t(r, a) + e(r, o) + i(r, s) + n(r, l)
                }
            }()
        },
        n.Curve = function() {}
        ,
        n.Curve.prototype = {
            constructor: n.Curve,
            getPoint: function(t) {
                return null
            },
            getPointAt: function(t) {
                var e = this.getUtoTmapping(t);
                return this.getPoint(e)
            },
            getPoints: function(t) {
                t || (t = 5);
                for (var e = [], i = 0; i <= t; i++)
                    e.push(this.getPoint(i / t));
                return e
            },
            getSpacedPoints: function(t) {
                t || (t = 5);
                for (var e = [], i = 0; i <= t; i++)
                    e.push(this.getPointAt(i / t));
                return e
            },
            getLength: function() {
                var t = this.getLengths();
                return t[t.length - 1]
            },
            getLengths: function(t) {
                if (t || (t = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200),
                this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                    return this.cacheArcLengths;
                this.needsUpdate = !1;
                var e, i, n = [], r = this.getPoint(0), a = 0;
                for (n.push(0),
                i = 1; i <= t; i++)
                    e = this.getPoint(i / t),
                    a += e.distanceTo(r),
                    n.push(a),
                    r = e;
                return this.cacheArcLengths = n,
                n
            },
            updateArcLengths: function() {
                this.needsUpdate = !0,
                this.getLengths()
            },
            getUtoTmapping: function(t, e) {
                var i, n = this.getLengths(), r = 0, a = n.length;
                i = e ? e : t * n[a - 1];
                for (var o, s = 0, l = a - 1; s <= l; )
                    if (r = Math.floor(s + (l - s) / 2),
                    o = n[r] - i,
                    o < 0)
                        s = r + 1;
                    else {
                        if (!(o > 0)) {
                            l = r;
                            break
                        }
                        l = r - 1
                    }
                if (r = l,
                n[r] === i) {
                    var h = r / (a - 1);
                    return h
                }
                var c = n[r]
                  , u = n[r + 1]
                  , p = u - c
                  , f = (i - c) / p
                  , h = (r + f) / (a - 1);
                return h
            },
            getTangent: function(t) {
                var e = 1e-4
                  , i = t - e
                  , n = t + e;
                i < 0 && (i = 0),
                n > 1 && (n = 1);
                var r = this.getPoint(i)
                  , a = this.getPoint(n)
                  , o = a.clone().sub(r);
                return o.normalize()
            },
            getTangentAt: function(t) {
                var e = this.getUtoTmapping(t);
                return this.getTangent(e)
            }
        },
        n.Curve.create = function(t, e) {
            return t.prototype = Object.create(n.Curve.prototype),
            t.prototype.constructor = t,
            t.prototype.getPoint = e,
            t
        }
        ,
        n.CurvePath = function() {
            this.curves = [],
            this.autoClose = !1
        }
        ,
        n.CurvePath.prototype = Object.assign(Object.create(n.Curve.prototype), {
            constructor: n.CurvePath,
            add: function(t) {
                this.curves.push(t)
            },
            closePath: function() {
                var t = this.curves[0].getPoint(0)
                  , e = this.curves[this.curves.length - 1].getPoint(1);
                t.equals(e) || this.curves.push(new n.LineCurve(e,t))
            },
            getPoint: function(t) {
                for (var e = t * this.getLength(), i = this.getCurveLengths(), n = 0; n < i.length; ) {
                    if (i[n] >= e) {
                        var r = i[n] - e
                          , a = this.curves[n]
                          , o = a.getLength()
                          , s = 0 === o ? 0 : 1 - r / o;
                        return a.getPointAt(s)
                    }
                    n++
                }
                return null
            },
            getLength: function() {
                var t = this.getCurveLengths();
                return t[t.length - 1]
            },
            updateArcLengths: function() {
                this.needsUpdate = !0,
                this.cacheLengths = null,
                this.getLengths()
            },
            getCurveLengths: function() {
                if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                    return this.cacheLengths;
                for (var t = [], e = 0, i = 0, n = this.curves.length; i < n; i++)
                    e += this.curves[i].getLength(),
                    t.push(e);
                return this.cacheLengths = t,
                t
            },
            getSpacedPoints: function(t) {
                t || (t = 40);
                for (var e = [], i = 0; i <= t; i++)
                    e.push(this.getPoint(i / t));
                return this.autoClose && e.push(e[0]),
                e
            },
            getPoints: function(t) {
                t = t || 12;
                for (var e, i = [], r = 0, a = this.curves; r < a.length; r++)
                    for (var o = a[r], s = o instanceof n.EllipseCurve ? 2 * t : o instanceof n.LineCurve ? 1 : o instanceof n.SplineCurve ? t * o.points.length : t, l = o.getPoints(s), h = 0; h < l.length; h++) {
                        var c = l[h];
                        e && e.equals(c) || (i.push(c),
                        e = c)
                    }
                return this.autoClose && i.length > 1 && !i[i.length - 1].equals(i[0]) && i.push(i[0]),
                i
            },
            createPointsGeometry: function(t) {
                var e = this.getPoints(t);
                return this.createGeometry(e)
            },
            createSpacedPointsGeometry: function(t) {
                var e = this.getSpacedPoints(t);
                return this.createGeometry(e)
            },
            createGeometry: function(t) {
                for (var e = new n.Geometry, i = 0, r = t.length; i < r; i++) {
                    var a = t[i];
                    e.vertices.push(new n.Vector3(a.x,a.y,a.z || 0))
                }
                return e
            }
        }),
        n.Font = function(t) {
            this.data = t
        }
        ,
        Object.assign(n.Font.prototype, {
            generateShapes: function(t, e, i) {
                function r(t) {
                    for (var i = String(t).split(""), n = e / o.resolution, r = 0, s = [], l = 0; l < i.length; l++) {
                        var h = a(i[l], n, r);
                        r += h.offset,
                        s.push(h.path)
                    }
                    return s
                }
                function a(t, e, r) {
                    var a = o.glyphs[t] || o.glyphs["?"];
                    if (a) {
                        var s, l, h, c, u, p, f, d, m, g, v, y = new n.ShapePath, _ = [], x = n.ShapeUtils.b2, b = n.ShapeUtils.b3;
                        if (a.o)
                            for (var w = a._cachedOutline || (a._cachedOutline = a.o.split(" ")), M = 0, T = w.length; M < T; ) {
                                var S = w[M++];
                                switch (S) {
                                case "m":
                                    s = w[M++] * e + r,
                                    l = w[M++] * e,
                                    y.moveTo(s, l);
                                    break;
                                case "l":
                                    s = w[M++] * e + r,
                                    l = w[M++] * e,
                                    y.lineTo(s, l);
                                    break;
                                case "q":
                                    if (h = w[M++] * e + r,
                                    c = w[M++] * e,
                                    f = w[M++] * e + r,
                                    d = w[M++] * e,
                                    y.quadraticCurveTo(f, d, h, c),
                                    v = _[_.length - 1]) {
                                        u = v.x,
                                        p = v.y;
                                        for (var C = 1; C <= i; C++) {
                                            var A = C / i;
                                            x(A, u, f, h),
                                            x(A, p, d, c)
                                        }
                                    }
                                    break;
                                case "b":
                                    if (h = w[M++] * e + r,
                                    c = w[M++] * e,
                                    f = w[M++] * e + r,
                                    d = w[M++] * e,
                                    m = w[M++] * e + r,
                                    g = w[M++] * e,
                                    y.bezierCurveTo(f, d, m, g, h, c),
                                    v = _[_.length - 1]) {
                                        u = v.x,
                                        p = v.y;
                                        for (var C = 1; C <= i; C++) {
                                            var A = C / i;
                                            b(A, u, f, m, h),
                                            b(A, p, d, g, c)
                                        }
                                    }
                                }
                            }
                        return {
                            offset: a.ha * e,
                            path: y
                        }
                    }
                }
                void 0 === e && (e = 100),
                void 0 === i && (i = 4);
                for (var o = this.data, s = r(t), l = [], h = 0, c = s.length; h < c; h++)
                    Array.prototype.push.apply(l, s[h].toShapes());
                return l
            }
        }),
        n.Path = function(t) {
            n.CurvePath.call(this),
            this.currentPoint = new n.Vector2,
            t && this.fromPoints(t)
        }
        ,
        n.Path.prototype = Object.assign(Object.create(n.CurvePath.prototype), {
            constructor: n.Path,
            fromPoints: function(t) {
                this.moveTo(t[0].x, t[0].y);
                for (var e = 1, i = t.length; e < i; e++)
                    this.lineTo(t[e].x, t[e].y)
            },
            moveTo: function(t, e) {
                this.currentPoint.set(t, e)
            },
            lineTo: function(t, e) {
                var i = new n.LineCurve(this.currentPoint.clone(),new n.Vector2(t,e));
                this.curves.push(i),
                this.currentPoint.set(t, e)
            },
            quadraticCurveTo: function(t, e, i, r) {
                var a = new n.QuadraticBezierCurve(this.currentPoint.clone(),new n.Vector2(t,e),new n.Vector2(i,r));
                this.curves.push(a),
                this.currentPoint.set(i, r)
            },
            bezierCurveTo: function(t, e, i, r, a, o) {
                var s = new n.CubicBezierCurve(this.currentPoint.clone(),new n.Vector2(t,e),new n.Vector2(i,r),new n.Vector2(a,o));
                this.curves.push(s),
                this.currentPoint.set(a, o)
            },
            splineThru: function(t) {
                var e = [this.currentPoint.clone()].concat(t)
                  , i = new n.SplineCurve(e);
                this.curves.push(i),
                this.currentPoint.copy(t[t.length - 1])
            },
            arc: function(t, e, i, n, r, a) {
                var o = this.currentPoint.x
                  , s = this.currentPoint.y;
                this.absarc(t + o, e + s, i, n, r, a)
            },
            absarc: function(t, e, i, n, r, a) {
                this.absellipse(t, e, i, i, n, r, a)
            },
            ellipse: function(t, e, i, n, r, a, o, s) {
                var l = this.currentPoint.x
                  , h = this.currentPoint.y;
                this.absellipse(t + l, e + h, i, n, r, a, o, s)
            },
            absellipse: function(t, e, i, r, a, o, s, l) {
                var h = new n.EllipseCurve(t,e,i,r,a,o,s,l);
                if (this.curves.length > 0) {
                    var c = h.getPoint(0);
                    c.equals(this.currentPoint) || this.lineTo(c.x, c.y)
                }
                this.curves.push(h);
                var u = h.getPoint(1);
                this.currentPoint.copy(u)
            }
        }),
        n.ShapePath = function() {
            this.subPaths = [],
            this.currentPath = null
        }
        ,
        n.ShapePath.prototype = {
            moveTo: function(t, e) {
                this.currentPath = new n.Path,
                this.subPaths.push(this.currentPath),
                this.currentPath.moveTo(t, e)
            },
            lineTo: function(t, e) {
                this.currentPath.lineTo(t, e)
            },
            quadraticCurveTo: function(t, e, i, n) {
                this.currentPath.quadraticCurveTo(t, e, i, n)
            },
            bezierCurveTo: function(t, e, i, n, r, a) {
                this.currentPath.bezierCurveTo(t, e, i, n, r, a)
            },
            splineThru: function(t) {
                this.currentPath.splineThru(t)
            },
            toShapes: function(t, e) {
                function i(t) {
                    for (var e = [], i = 0, r = t.length; i < r; i++) {
                        var a = t[i]
                          , o = new n.Shape;
                        o.curves = a.curves,
                        e.push(o)
                    }
                    return e
                }
                function r(t, e) {
                    for (var i = e.length, n = !1, r = i - 1, a = 0; a < i; r = a++) {
                        var o = e[r]
                          , s = e[a]
                          , l = s.x - o.x
                          , h = s.y - o.y;
                        if (Math.abs(h) > Number.EPSILON) {
                            if (h < 0 && (o = e[a],
                            l = -l,
                            s = e[r],
                            h = -h),
                            t.y < o.y || t.y > s.y)
                                continue;
                            if (t.y === o.y) {
                                if (t.x === o.x)
                                    return !0
                            } else {
                                var c = h * (t.x - o.x) - l * (t.y - o.y);
                                if (0 === c)
                                    return !0;
                                if (c < 0)
                                    continue;
                                n = !n
                            }
                        } else {
                            if (t.y !== o.y)
                                continue;
                            if (s.x <= t.x && t.x <= o.x || o.x <= t.x && t.x <= s.x)
                                return !0
                        }
                    }
                    return n
                }
                var a = n.ShapeUtils.isClockWise
                  , o = this.subPaths;
                if (0 === o.length)
                    return [];
                if (e === !0)
                    return i(o);
                var s, l, h, c = [];
                if (1 === o.length)
                    return l = o[0],
                    h = new n.Shape,
                    h.curves = l.curves,
                    c.push(h),
                    c;
                var u = !a(o[0].getPoints());
                u = t ? !u : u;
                var p, f = [], d = [], m = [], g = 0;
                d[g] = void 0,
                m[g] = [];
                for (var v = 0, y = o.length; v < y; v++)
                    l = o[v],
                    p = l.getPoints(),
                    s = a(p),
                    s = t ? !s : s,
                    s ? (!u && d[g] && g++,
                    d[g] = {
                        s: new n.Shape,
                        p: p
                    },
                    d[g].s.curves = l.curves,
                    u && g++,
                    m[g] = []) : m[g].push({
                        h: l,
                        p: p[0]
                    });
                if (!d[0])
                    return i(o);
                if (d.length > 1) {
                    for (var _ = !1, x = [], b = 0, w = d.length; b < w; b++)
                        f[b] = [];
                    for (var b = 0, w = d.length; b < w; b++)
                        for (var M = m[b], T = 0; T < M.length; T++) {
                            for (var S = M[T], C = !0, A = 0; A < d.length; A++)
                                r(S.p, d[A].p) && (b !== A && x.push({
                                    froms: b,
                                    tos: A,
                                    hole: T
                                }),
                                C ? (C = !1,
                                f[A].push(S)) : _ = !0);
                            C && f[b].push(S)
                        }
                    x.length > 0 && (_ || (m = f))
                }
                for (var P, v = 0, E = d.length; v < E; v++) {
                    h = d[v].s,
                    c.push(h),
                    P = m[v];
                    for (var L = 0, O = P.length; L < O; L++)
                        h.holes.push(P[L].h)
                }
                return c
            }
        },
        n.Shape = function() {
            n.Path.apply(this, arguments),
            this.holes = []
        }
        ,
        n.Shape.prototype = Object.assign(Object.create(n.Path.prototype), {
            constructor: n.Shape,
            extrude: function(t) {
                return new n.ExtrudeGeometry(this,t)
            },
            makeGeometry: function(t) {
                return new n.ShapeGeometry(this,t)
            },
            getPointsHoles: function(t) {
                for (var e = [], i = 0, n = this.holes.length; i < n; i++)
                    e[i] = this.holes[i].getPoints(t);
                return e
            },
            extractAllPoints: function(t) {
                return {
                    shape: this.getPoints(t),
                    holes: this.getPointsHoles(t)
                }
            },
            extractPoints: function(t) {
                return this.extractAllPoints(t)
            }
        }),
        n.LineCurve = function(t, e) {
            this.v1 = t,
            this.v2 = e
        }
        ,
        n.LineCurve.prototype = Object.create(n.Curve.prototype),
        n.LineCurve.prototype.constructor = n.LineCurve,
        n.LineCurve.prototype.getPoint = function(t) {
            if (1 === t)
                return this.v2.clone();
            var e = this.v2.clone().sub(this.v1);
            return e.multiplyScalar(t).add(this.v1),
            e
        }
        ,
        n.LineCurve.prototype.getPointAt = function(t) {
            return this.getPoint(t)
        }
        ,
        n.LineCurve.prototype.getTangent = function(t) {
            var e = this.v2.clone().sub(this.v1);
            return e.normalize()
        }
        ,
        n.QuadraticBezierCurve = function(t, e, i) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = i
        }
        ,
        n.QuadraticBezierCurve.prototype = Object.create(n.Curve.prototype),
        n.QuadraticBezierCurve.prototype.constructor = n.QuadraticBezierCurve,
        n.QuadraticBezierCurve.prototype.getPoint = function(t) {
            var e = n.ShapeUtils.b2;
            return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x),e(t, this.v0.y, this.v1.y, this.v2.y))
        }
        ,
        n.QuadraticBezierCurve.prototype.getTangent = function(t) {
            var e = n.CurveUtils.tangentQuadraticBezier;
            return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x),e(t, this.v0.y, this.v1.y, this.v2.y)).normalize()
        }
        ,
        n.CubicBezierCurve = function(t, e, i, n) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = i,
            this.v3 = n
        }
        ,
        n.CubicBezierCurve.prototype = Object.create(n.Curve.prototype),
        n.CubicBezierCurve.prototype.constructor = n.CubicBezierCurve,
        n.CubicBezierCurve.prototype.getPoint = function(t) {
            var e = n.ShapeUtils.b3;
            return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y))
        }
        ,
        n.CubicBezierCurve.prototype.getTangent = function(t) {
            var e = n.CurveUtils.tangentCubicBezier;
            return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize()
        }
        ,
        n.SplineCurve = function(t) {
            this.points = void 0 == t ? [] : t
        }
        ,
        n.SplineCurve.prototype = Object.create(n.Curve.prototype),
        n.SplineCurve.prototype.constructor = n.SplineCurve,
        n.SplineCurve.prototype.getPoint = function(t) {
            var e = this.points
              , i = (e.length - 1) * t
              , r = Math.floor(i)
              , a = i - r
              , o = e[0 === r ? r : r - 1]
              , s = e[r]
              , l = e[r > e.length - 2 ? e.length - 1 : r + 1]
              , h = e[r > e.length - 3 ? e.length - 1 : r + 2]
              , c = n.CurveUtils.interpolate;
            return new n.Vector2(c(o.x, s.x, l.x, h.x, a),c(o.y, s.y, l.y, h.y, a))
        }
        ,
        n.EllipseCurve = function(t, e, i, n, r, a, o, s) {
            this.aX = t,
            this.aY = e,
            this.xRadius = i,
            this.yRadius = n,
            this.aStartAngle = r,
            this.aEndAngle = a,
            this.aClockwise = o,
            this.aRotation = s || 0
        }
        ,
        n.EllipseCurve.prototype = Object.create(n.Curve.prototype),
        n.EllipseCurve.prototype.constructor = n.EllipseCurve,
        n.EllipseCurve.prototype.getPoint = function(t) {
            for (var e = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, r = Math.abs(i) < Number.EPSILON; i < 0; )
                i += e;
            for (; i > e; )
                i -= e;
            i < Number.EPSILON && (i = r ? 0 : e),
            this.aClockwise !== !0 || r || (i === e ? i = -e : i -= e);
            var a = this.aStartAngle + t * i
              , o = this.aX + this.xRadius * Math.cos(a)
              , s = this.aY + this.yRadius * Math.sin(a);
            if (0 !== this.aRotation) {
                var l = Math.cos(this.aRotation)
                  , h = Math.sin(this.aRotation)
                  , c = o - this.aX
                  , u = s - this.aY;
                o = c * l - u * h + this.aX,
                s = c * h + u * l + this.aY
            }
            return new n.Vector2(o,s)
        }
        ,
        n.ArcCurve = function(t, e, i, r, a, o) {
            n.EllipseCurve.call(this, t, e, i, i, r, a, o)
        }
        ,
        n.ArcCurve.prototype = Object.create(n.EllipseCurve.prototype),
        n.ArcCurve.prototype.constructor = n.ArcCurve,
        n.LineCurve3 = n.Curve.create(function(t, e) {
            this.v1 = t,
            this.v2 = e
        }, function(t) {
            if (1 === t)
                return this.v2.clone();
            var e = new n.Vector3;
            return e.subVectors(this.v2, this.v1),
            e.multiplyScalar(t),
            e.add(this.v1),
            e
        }),
        n.QuadraticBezierCurve3 = n.Curve.create(function(t, e, i) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = i
        }, function(t) {
            var e = n.ShapeUtils.b2;
            return new n.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x),e(t, this.v0.y, this.v1.y, this.v2.y),e(t, this.v0.z, this.v1.z, this.v2.z))
        }),
        n.CubicBezierCurve3 = n.Curve.create(function(t, e, i, n) {
            this.v0 = t,
            this.v1 = e,
            this.v2 = i,
            this.v3 = n
        }, function(t) {
            var e = n.ShapeUtils.b3;
            return new n.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y),e(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z))
        }),
        n.SplineCurve3 = n.Curve.create(function(t) {
            this.points = void 0 == t ? [] : t
        }, function(t) {
            var e = this.points
              , i = (e.length - 1) * t
              , r = Math.floor(i)
              , a = i - r
              , o = e[0 == r ? r : r - 1]
              , s = e[r]
              , l = e[r > e.length - 2 ? e.length - 1 : r + 1]
              , h = e[r > e.length - 3 ? e.length - 1 : r + 2]
              , c = n.CurveUtils.interpolate;
            return new n.Vector3(c(o.x, s.x, l.x, h.x, a),c(o.y, s.y, l.y, h.y, a),c(o.z, s.z, l.z, h.z, a))
        }),
        n.CatmullRomCurve3 = function() {
            function t() {}
            var e = new n.Vector3
              , i = new t
              , r = new t
              , a = new t;
            return t.prototype.init = function(t, e, i, n) {
                this.c0 = t,
                this.c1 = i,
                this.c2 = -3 * t + 3 * e - 2 * i - n,
                this.c3 = 2 * t - 2 * e + i + n
            }
            ,
            t.prototype.initNonuniformCatmullRom = function(t, e, i, n, r, a, o) {
                var s = (e - t) / r - (i - t) / (r + a) + (i - e) / a
                  , l = (i - e) / a - (n - e) / (a + o) + (n - i) / o;
                s *= a,
                l *= a,
                this.init(e, i, s, l)
            }
            ,
            t.prototype.initCatmullRom = function(t, e, i, n, r) {
                this.init(e, i, r * (i - t), r * (n - e))
            }
            ,
            t.prototype.calc = function(t) {
                var e = t * t
                  , i = e * t;
                return this.c0 + this.c1 * t + this.c2 * e + this.c3 * i
            }
            ,
            n.Curve.create(function(t) {
                this.points = t || [],
                this.closed = !1
            }, function(t) {
                var o, s, l, h, c = this.points;
                h = c.length,
                o = (h - (this.closed ? 0 : 1)) * t,
                s = Math.floor(o),
                l = o - s,
                this.closed ? s += s > 0 ? 0 : (Math.floor(Math.abs(s) / c.length) + 1) * c.length : 0 === l && s === h - 1 && (s = h - 2,
                l = 1);
                var u, p, f, d;
                if (this.closed || s > 0 ? u = c[(s - 1) % h] : (e.subVectors(c[0], c[1]).add(c[0]),
                u = e),
                p = c[s % h],
                f = c[(s + 1) % h],
                this.closed || s + 2 < h ? d = c[(s + 2) % h] : (e.subVectors(c[h - 1], c[h - 2]).add(c[h - 1]),
                d = e),
                void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
                    var m = "chordal" === this.type ? .5 : .25
                      , g = Math.pow(u.distanceToSquared(p), m)
                      , v = Math.pow(p.distanceToSquared(f), m)
                      , y = Math.pow(f.distanceToSquared(d), m);
                    v < 1e-4 && (v = 1),
                    g < 1e-4 && (g = v),
                    y < 1e-4 && (y = v),
                    i.initNonuniformCatmullRom(u.x, p.x, f.x, d.x, g, v, y),
                    r.initNonuniformCatmullRom(u.y, p.y, f.y, d.y, g, v, y),
                    a.initNonuniformCatmullRom(u.z, p.z, f.z, d.z, g, v, y)
                } else if ("catmullrom" === this.type) {
                    var _ = void 0 !== this.tension ? this.tension : .5;
                    i.initCatmullRom(u.x, p.x, f.x, d.x, _),
                    r.initCatmullRom(u.y, p.y, f.y, d.y, _),
                    a.initCatmullRom(u.z, p.z, f.z, d.z, _)
                }
                var x = new n.Vector3(i.calc(l),r.calc(l),a.calc(l));
                return x
            })
        }(),
        n.ClosedSplineCurve3 = function(t) {
            n.CatmullRomCurve3.call(this, t),
            this.type = "catmullrom",
            this.closed = !0
        }
        ,
        n.ClosedSplineCurve3.prototype = Object.create(n.CatmullRomCurve3.prototype),
        n.BoxGeometry = function(t, e, i, r, a, o) {
            n.Geometry.call(this),
            this.type = "BoxGeometry",
            this.parameters = {
                width: t,
                height: e,
                depth: i,
                widthSegments: r,
                heightSegments: a,
                depthSegments: o
            },
            this.fromBufferGeometry(new n.BoxBufferGeometry(t,e,i,r,a,o)),
            this.mergeVertices()
        }
        ,
        n.BoxGeometry.prototype = Object.create(n.Geometry.prototype),
        n.BoxGeometry.prototype.constructor = n.BoxGeometry,
        n.CubeGeometry = n.BoxGeometry,
        n.BoxBufferGeometry = function(t, e, i, r, a, o) {
            function s(t, e, i) {
                var n = 0;
                return n += (t + 1) * (e + 1) * 2,
                n += (t + 1) * (i + 1) * 2,
                n += (i + 1) * (e + 1) * 2
            }
            function l(t, e, i) {
                var n = 0;
                return n += t * e * 2,
                n += t * i * 2,
                n += i * e * 2,
                6 * n
            }
            function h(t, e, i, r, a, o, s, l, h, u, p) {
                for (var w = o / h, M = s / u, T = o / 2, S = s / 2, C = l / 2, A = h + 1, P = u + 1, E = 0, L = 0, O = new n.Vector3, R = 0; R < P; R++)
                    for (var D = R * M - S, I = 0; I < A; I++) {
                        var k = I * w - T;
                        O[t] = k * r,
                        O[e] = D * a,
                        O[i] = C,
                        d[v] = O.x,
                        d[v + 1] = O.y,
                        d[v + 2] = O.z,
                        O[t] = 0,
                        O[e] = 0,
                        O[i] = l > 0 ? 1 : -1,
                        m[v] = O.x,
                        m[v + 1] = O.y,
                        m[v + 2] = O.z,
                        g[y] = I / h,
                        g[y + 1] = 1 - R / u,
                        v += 3,
                        y += 2,
                        E += 1
                    }
                for (R = 0; R < u; R++)
                    for (I = 0; I < h; I++) {
                        var N = x + I + A * R
                          , F = x + I + A * (R + 1)
                          , B = x + (I + 1) + A * (R + 1)
                          , U = x + (I + 1) + A * R;
                        f[_] = N,
                        f[_ + 1] = F,
                        f[_ + 2] = U,
                        f[_ + 3] = F,
                        f[_ + 4] = B,
                        f[_ + 5] = U,
                        _ += 6,
                        L += 6
                    }
                c.addGroup(b, L, p),
                b += L,
                x += E
            }
            n.BufferGeometry.call(this),
            this.type = "BoxBufferGeometry",
            this.parameters = {
                width: t,
                height: e,
                depth: i,
                widthSegments: r,
                heightSegments: a,
                depthSegments: o
            };
            var c = this;
            r = Math.floor(r) || 1,
            a = Math.floor(a) || 1,
            o = Math.floor(o) || 1;
            var u = s(r, a, o)
              , p = l(r, a, o)
              , f = new (p > 65535 ? Uint32Array : Uint16Array)(p)
              , d = new Float32Array(3 * u)
              , m = new Float32Array(3 * u)
              , g = new Float32Array(2 * u)
              , v = 0
              , y = 0
              , _ = 0
              , x = 0
              , b = 0;
            h("z", "y", "x", -1, -1, i, e, t, o, a, 0),
            h("z", "y", "x", 1, -1, i, e, -t, o, a, 1),
            h("x", "z", "y", 1, 1, t, i, e, r, o, 2),
            h("x", "z", "y", 1, -1, t, i, -e, r, o, 3),
            h("x", "y", "z", 1, -1, t, e, i, r, a, 4),
            h("x", "y", "z", -1, -1, t, e, -i, r, a, 5),
            this.setIndex(new n.BufferAttribute(f,1)),
            this.addAttribute("position", new n.BufferAttribute(d,3)),
            this.addAttribute("normal", new n.BufferAttribute(m,3)),
            this.addAttribute("uv", new n.BufferAttribute(g,2))
        }
        ,
        n.BoxBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.BoxBufferGeometry.prototype.constructor = n.BoxBufferGeometry,
        n.CircleGeometry = function(t, e, i, r) {
            n.Geometry.call(this),
            this.type = "CircleGeometry",
            this.parameters = {
                radius: t,
                segments: e,
                thetaStart: i,
                thetaLength: r
            },
            this.fromBufferGeometry(new n.CircleBufferGeometry(t,e,i,r))
        }
        ,
        n.CircleGeometry.prototype = Object.create(n.Geometry.prototype),
        n.CircleGeometry.prototype.constructor = n.CircleGeometry,
        n.CircleBufferGeometry = function(t, e, i, r) {
            n.BufferGeometry.call(this),
            this.type = "CircleBufferGeometry",
            this.parameters = {
                radius: t,
                segments: e,
                thetaStart: i,
                thetaLength: r
            },
            t = t || 50,
            e = void 0 !== e ? Math.max(3, e) : 8,
            i = void 0 !== i ? i : 0,
            r = void 0 !== r ? r : 2 * Math.PI;
            var a = e + 2
              , o = new Float32Array(3 * a)
              , s = new Float32Array(3 * a)
              , l = new Float32Array(2 * a);
            s[2] = 1,
            l[0] = .5,
            l[1] = .5;
            for (var h = 0, c = 3, u = 2; h <= e; h++,
            c += 3,
            u += 2) {
                var p = i + h / e * r;
                o[c] = t * Math.cos(p),
                o[c + 1] = t * Math.sin(p),
                s[c + 2] = 1,
                l[u] = (o[c] / t + 1) / 2,
                l[u + 1] = (o[c + 1] / t + 1) / 2
            }
            for (var f = [], c = 1; c <= e; c++)
                f.push(c, c + 1, 0);
            this.setIndex(new n.BufferAttribute(new Uint16Array(f),1)),
            this.addAttribute("position", new n.BufferAttribute(o,3)),
            this.addAttribute("normal", new n.BufferAttribute(s,3)),
            this.addAttribute("uv", new n.BufferAttribute(l,2)),
            this.boundingSphere = new n.Sphere(new n.Vector3,t)
        }
        ,
        n.CircleBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.CircleBufferGeometry.prototype.constructor = n.CircleBufferGeometry,
        n.CylinderBufferGeometry = function(t, e, i, r, a, o, s, l) {
            function h() {
                var t = (r + 1) * (a + 1);
                return o === !1 && (t += (r + 1) * d + r * d),
                t
            }
            function c() {
                var t = r * a * 2 * 3;
                return o === !1 && (t += r * d * 3),
                t
            }
            function u() {
                var o, h, c = new n.Vector3, u = new n.Vector3, p = 0, d = (e - t) / i;
                for (h = 0; h <= a; h++) {
                    var m = []
                      , g = h / a
                      , C = g * (e - t) + t;
                    for (o = 0; o <= r; o++) {
                        var A = o / r;
                        u.x = C * Math.sin(A * l + s),
                        u.y = -g * i + T,
                        u.z = C * Math.cos(A * l + s),
                        y.setXYZ(b, u.x, u.y, u.z),
                        c.copy(u),
                        (0 === t && 0 === h || 0 === e && h === a) && (c.x = Math.sin(A * l + s),
                        c.z = Math.cos(A * l + s)),
                        c.setY(Math.sqrt(c.x * c.x + c.z * c.z) * d).normalize(),
                        _.setXYZ(b, c.x, c.y, c.z),
                        x.setXY(b, A, 1 - g),
                        m.push(b),
                        b++
                    }
                    M.push(m)
                }
                for (o = 0; o < r; o++)
                    for (h = 0; h < a; h++) {
                        var P = M[h][o]
                          , E = M[h + 1][o]
                          , L = M[h + 1][o + 1]
                          , O = M[h][o + 1];
                        v.setX(w, P),
                        w++,
                        v.setX(w, E),
                        w++,
                        v.setX(w, O),
                        w++,
                        v.setX(w, E),
                        w++,
                        v.setX(w, L),
                        w++,
                        v.setX(w, O),
                        w++,
                        p += 6
                    }
                f.addGroup(S, p, 0),
                S += p
            }
            function p(i) {
                var a, o, h, c = new n.Vector2, u = new n.Vector3, p = 0, d = i === !0 ? t : e, m = i === !0 ? 1 : -1;
                for (o = b,
                a = 1; a <= r; a++)
                    y.setXYZ(b, 0, T * m, 0),
                    _.setXYZ(b, 0, m, 0),
                    c.x = .5,
                    c.y = .5,
                    x.setXY(b, c.x, c.y),
                    b++;
                for (h = b,
                a = 0; a <= r; a++) {
                    var g = a / r
                      , M = g * l + s
                      , C = Math.cos(M)
                      , A = Math.sin(M);
                    u.x = d * A,
                    u.y = T * m,
                    u.z = d * C,
                    y.setXYZ(b, u.x, u.y, u.z),
                    _.setXYZ(b, 0, m, 0),
                    c.x = .5 * C + .5,
                    c.y = .5 * A * m + .5,
                    x.setXY(b, c.x, c.y),
                    b++
                }
                for (a = 0; a < r; a++) {
                    var P = o + a
                      , E = h + a;
                    i === !0 ? (v.setX(w, E),
                    w++,
                    v.setX(w, E + 1),
                    w++,
                    v.setX(w, P),
                    w++) : (v.setX(w, E + 1),
                    w++,
                    v.setX(w, E),
                    w++,
                    v.setX(w, P),
                    w++),
                    p += 3
                }
                f.addGroup(S, p, i === !0 ? 1 : 2),
                S += p
            }
            n.BufferGeometry.call(this),
            this.type = "CylinderBufferGeometry",
            this.parameters = {
                radiusTop: t,
                radiusBottom: e,
                height: i,
                radialSegments: r,
                heightSegments: a,
                openEnded: o,
                thetaStart: s,
                thetaLength: l
            };
            var f = this;
            t = void 0 !== t ? t : 20,
            e = void 0 !== e ? e : 20,
            i = void 0 !== i ? i : 100,
            r = Math.floor(r) || 8,
            a = Math.floor(a) || 1,
            o = void 0 !== o && o,
            s = void 0 !== s ? s : 0,
            l = void 0 !== l ? l : 2 * Math.PI;
            var d = 0;
            o === !1 && (t > 0 && d++,
            e > 0 && d++);
            var m = h()
              , g = c()
              , v = new n.BufferAttribute(new (g > 65535 ? Uint32Array : Uint16Array)(g),1)
              , y = new n.BufferAttribute(new Float32Array(3 * m),3)
              , _ = new n.BufferAttribute(new Float32Array(3 * m),3)
              , x = new n.BufferAttribute(new Float32Array(2 * m),2)
              , b = 0
              , w = 0
              , M = []
              , T = i / 2
              , S = 0;
            u(),
            o === !1 && (t > 0 && p(!0),
            e > 0 && p(!1)),
            this.setIndex(v),
            this.addAttribute("position", y),
            this.addAttribute("normal", _),
            this.addAttribute("uv", x)
        }
        ,
        n.CylinderBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.CylinderBufferGeometry.prototype.constructor = n.CylinderBufferGeometry,
        n.CylinderGeometry = function(t, e, i, r, a, o, s, l) {
            n.Geometry.call(this),
            this.type = "CylinderGeometry",
            this.parameters = {
                radiusTop: t,
                radiusBottom: e,
                height: i,
                radialSegments: r,
                heightSegments: a,
                openEnded: o,
                thetaStart: s,
                thetaLength: l
            },
            this.fromBufferGeometry(new n.CylinderBufferGeometry(t,e,i,r,a,o,s,l)),
            this.mergeVertices()
        }
        ,
        n.CylinderGeometry.prototype = Object.create(n.Geometry.prototype),
        n.CylinderGeometry.prototype.constructor = n.CylinderGeometry,
        n.ConeBufferGeometry = function(t, e, i, r, a, o, s) {
            n.CylinderBufferGeometry.call(this, 0, t, e, i, r, a, o, s),
            this.type = "ConeBufferGeometry",
            this.parameters = {
                radius: t,
                height: e,
                radialSegments: i,
                heightSegments: r,
                thetaStart: o,
                thetaLength: s
            }
        }
        ,
        n.ConeBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.ConeBufferGeometry.prototype.constructor = n.ConeBufferGeometry,
        n.ConeGeometry = function(t, e, i, r, a, o, s) {
            n.CylinderGeometry.call(this, 0, t, e, i, r, a, o, s),
            this.type = "ConeGeometry",
            this.parameters = {
                radius: t,
                height: e,
                radialSegments: i,
                heightSegments: r,
                openEnded: a,
                thetaStart: o,
                thetaLength: s
            }
        }
        ,
        n.ConeGeometry.prototype = Object.create(n.CylinderGeometry.prototype),
        n.ConeGeometry.prototype.constructor = n.ConeGeometry,
        n.EdgesGeometry = function(t, e) {
            function i(t, e) {
                return t - e
            }
            n.BufferGeometry.call(this),
            e = void 0 !== e ? e : 1;
            var r, a = Math.cos(n.Math.DEG2RAD * e), o = [0, 0], s = {}, l = ["a", "b", "c"];
            t instanceof n.BufferGeometry ? (r = new n.Geometry,
            r.fromBufferGeometry(t)) : r = t.clone(),
            r.mergeVertices(),
            r.computeFaceNormals();
            for (var h = r.vertices, c = r.faces, u = 0, p = c.length; u < p; u++)
                for (var f = c[u], d = 0; d < 3; d++) {
                    o[0] = f[l[d]],
                    o[1] = f[l[(d + 1) % 3]],
                    o.sort(i);
                    var m = o.toString();
                    void 0 === s[m] ? s[m] = {
                        vert1: o[0],
                        vert2: o[1],
                        face1: u,
                        face2: void 0
                    } : s[m].face2 = u
                }
            var g = [];
            for (var m in s) {
                var v = s[m];
                if (void 0 === v.face2 || c[v.face1].normal.dot(c[v.face2].normal) <= a) {
                    var y = h[v.vert1];
                    g.push(y.x),
                    g.push(y.y),
                    g.push(y.z),
                    y = h[v.vert2],
                    g.push(y.x),
                    g.push(y.y),
                    g.push(y.z)
                }
            }
            this.addAttribute("position", new n.BufferAttribute(new Float32Array(g),3))
        }
        ,
        n.EdgesGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.EdgesGeometry.prototype.constructor = n.EdgesGeometry,
        n.ExtrudeGeometry = function(t, e) {
            return "undefined" == typeof t ? void (t = []) : (n.Geometry.call(this),
            this.type = "ExtrudeGeometry",
            t = Array.isArray(t) ? t : [t],
            this.addShapeList(t, e),
            void this.computeFaceNormals())
        }
        ,
        n.ExtrudeGeometry.prototype = Object.create(n.Geometry.prototype),
        n.ExtrudeGeometry.prototype.constructor = n.ExtrudeGeometry,
        n.ExtrudeGeometry.prototype.addShapeList = function(t, e) {
            for (var i = t.length, n = 0; n < i; n++) {
                var r = t[n];
                this.addShape(r, e)
            }
        }
        ,
        n.ExtrudeGeometry.prototype.addShape = function(t, e) {
            function i(t, e, i) {
                return e.clone().multiplyScalar(i).add(t)
            }
            function r(t, e, i) {
                var r, a, o = 1, s = t.x - e.x, l = t.y - e.y, h = i.x - t.x, c = i.y - t.y, u = s * s + l * l, p = s * c - l * h;
                if (Math.abs(p) > Number.EPSILON) {
                    var f = Math.sqrt(u)
                      , d = Math.sqrt(h * h + c * c)
                      , m = e.x - l / f
                      , g = e.y + s / f
                      , v = i.x - c / d
                      , y = i.y + h / d
                      , _ = ((v - m) * c - (y - g) * h) / (s * c - l * h);
                    r = m + s * _ - t.x,
                    a = g + l * _ - t.y;
                    var x = r * r + a * a;
                    if (x <= 2)
                        return new n.Vector2(r,a);
                    o = Math.sqrt(x / 2)
                } else {
                    var b = !1;
                    s > Number.EPSILON ? h > Number.EPSILON && (b = !0) : s < -Number.EPSILON ? h < -Number.EPSILON && (b = !0) : Math.sign(l) === Math.sign(c) && (b = !0),
                    b ? (r = -l,
                    a = s,
                    o = Math.sqrt(u)) : (r = s,
                    a = l,
                    o = Math.sqrt(u / 2))
                }
                return new n.Vector2(r / o,a / o)
            }
            function a() {
                if (x) {
                    var t = 0
                      , e = G * t;
                    for (X = 0; X < H; X++)
                        V = k[X],
                        h(V[2] + e, V[1] + e, V[0] + e);
                    for (t = w + 2 * _,
                    e = G * t,
                    X = 0; X < H; X++)
                        V = k[X],
                        h(V[0] + e, V[1] + e, V[2] + e)
                } else {
                    for (X = 0; X < H; X++)
                        V = k[X],
                        h(V[2], V[1], V[0]);
                    for (X = 0; X < H; X++)
                        V = k[X],
                        h(V[0] + G * w, V[1] + G * w, V[2] + G * w)
                }
            }
            function o() {
                var t = 0;
                for (s(N, t),
                t += N.length,
                A = 0,
                P = D.length; A < P; A++)
                    C = D[A],
                    s(C, t),
                    t += C.length
            }
            function s(t, e) {
                var i, n;
                for (X = t.length; --X >= 0; ) {
                    i = X,
                    n = X - 1,
                    n < 0 && (n = t.length - 1);
                    var r = 0
                      , a = w + 2 * _;
                    for (r = 0; r < a; r++) {
                        var o = G * r
                          , s = G * (r + 1)
                          , l = e + i + o
                          , h = e + n + o
                          , u = e + n + s
                          , p = e + i + s;
                        c(l, h, u, p, t, r, a, i, n)
                    }
                }
            }
            function l(t, e, i) {
                E.vertices.push(new n.Vector3(t,e,i))
            }
            function h(t, e, i) {
                t += L,
                e += L,
                i += L,
                E.faces.push(new n.Face3(t,e,i,null,null,0));
                var r = S.generateTopUV(E, t, e, i);
                E.faceVertexUvs[0].push(r)
            }
            function c(t, e, i, r, a, o, s, l, h) {
                t += L,
                e += L,
                i += L,
                r += L,
                E.faces.push(new n.Face3(t,e,r,null,null,1)),
                E.faces.push(new n.Face3(e,i,r,null,null,1));
                var c = S.generateSideWallUV(E, t, e, i, r);
                E.faceVertexUvs[0].push([c[0], c[1], c[3]]),
                E.faceVertexUvs[0].push([c[1], c[2], c[3]])
            }
            var u, p, f, d, m, g = void 0 !== e.amount ? e.amount : 100, v = void 0 !== e.bevelThickness ? e.bevelThickness : 6, y = void 0 !== e.bevelSize ? e.bevelSize : v - 2, _ = void 0 !== e.bevelSegments ? e.bevelSegments : 3, x = void 0 === e.bevelEnabled || e.bevelEnabled, b = void 0 !== e.curveSegments ? e.curveSegments : 12, w = void 0 !== e.steps ? e.steps : 1, M = e.extrudePath, T = !1, S = void 0 !== e.UVGenerator ? e.UVGenerator : n.ExtrudeGeometry.WorldUVGenerator;
            M && (u = M.getSpacedPoints(w),
            T = !0,
            x = !1,
            p = void 0 !== e.frames ? e.frames : new n.TubeGeometry.FrenetFrames(M,w,(!1)),
            f = new n.Vector3,
            d = new n.Vector3,
            m = new n.Vector3),
            x || (_ = 0,
            v = 0,
            y = 0);
            var C, A, P, E = this, L = this.vertices.length, O = t.extractPoints(b), R = O.shape, D = O.holes, I = !n.ShapeUtils.isClockWise(R);
            if (I) {
                for (R = R.reverse(),
                A = 0,
                P = D.length; A < P; A++)
                    C = D[A],
                    n.ShapeUtils.isClockWise(C) && (D[A] = C.reverse());
                I = !1
            }
            var k = n.ShapeUtils.triangulateShape(R, D)
              , N = R;
            for (A = 0,
            P = D.length; A < P; A++)
                C = D[A],
                R = R.concat(C);
            for (var F, B, U, z, j, V, G = R.length, H = k.length, W = [], X = 0, q = N.length, Y = q - 1, Z = X + 1; X < q; X++,
            Y++,
            Z++)
                Y === q && (Y = 0),
                Z === q && (Z = 0),
                W[X] = r(N[X], N[Y], N[Z]);
            var $, K = [], Q = W.concat();
            for (A = 0,
            P = D.length; A < P; A++) {
                for (C = D[A],
                $ = [],
                X = 0,
                q = C.length,
                Y = q - 1,
                Z = X + 1; X < q; X++,
                Y++,
                Z++)
                    Y === q && (Y = 0),
                    Z === q && (Z = 0),
                    $[X] = r(C[X], C[Y], C[Z]);
                K.push($),
                Q = Q.concat($)
            }
            for (F = 0; F < _; F++) {
                for (U = F / _,
                z = v * (1 - U),
                B = y * Math.sin(U * Math.PI / 2),
                X = 0,
                q = N.length; X < q; X++)
                    j = i(N[X], W[X], B),
                    l(j.x, j.y, -z);
                for (A = 0,
                P = D.length; A < P; A++)
                    for (C = D[A],
                    $ = K[A],
                    X = 0,
                    q = C.length; X < q; X++)
                        j = i(C[X], $[X], B),
                        l(j.x, j.y, -z)
            }
            for (B = y,
            X = 0; X < G; X++)
                j = x ? i(R[X], Q[X], B) : R[X],
                T ? (d.copy(p.normals[0]).multiplyScalar(j.x),
                f.copy(p.binormals[0]).multiplyScalar(j.y),
                m.copy(u[0]).add(d).add(f),
                l(m.x, m.y, m.z)) : l(j.x, j.y, 0);
            var J;
            for (J = 1; J <= w; J++)
                for (X = 0; X < G; X++)
                    j = x ? i(R[X], Q[X], B) : R[X],
                    T ? (d.copy(p.normals[J]).multiplyScalar(j.x),
                    f.copy(p.binormals[J]).multiplyScalar(j.y),
                    m.copy(u[J]).add(d).add(f),
                    l(m.x, m.y, m.z)) : l(j.x, j.y, g / w * J);
            for (F = _ - 1; F >= 0; F--) {
                for (U = F / _,
                z = v * (1 - U),
                B = y * Math.sin(U * Math.PI / 2),
                X = 0,
                q = N.length; X < q; X++)
                    j = i(N[X], W[X], B),
                    l(j.x, j.y, g + z);
                for (A = 0,
                P = D.length; A < P; A++)
                    for (C = D[A],
                    $ = K[A],
                    X = 0,
                    q = C.length; X < q; X++)
                        j = i(C[X], $[X], B),
                        T ? l(j.x, j.y + u[w - 1].y, u[w - 1].x + z) : l(j.x, j.y, g + z)
            }
            a(),
            o()
        }
        ,
        n.ExtrudeGeometry.WorldUVGenerator = {
            generateTopUV: function(t, e, i, r) {
                var a = t.vertices
                  , o = a[e]
                  , s = a[i]
                  , l = a[r];
                return [new n.Vector2(o.x,o.y), new n.Vector2(s.x,s.y), new n.Vector2(l.x,l.y)]
            },
            generateSideWallUV: function(t, e, i, r, a) {
                var o = t.vertices
                  , s = o[e]
                  , l = o[i]
                  , h = o[r]
                  , c = o[a];
                return Math.abs(s.y - l.y) < .01 ? [new n.Vector2(s.x,1 - s.z), new n.Vector2(l.x,1 - l.z), new n.Vector2(h.x,1 - h.z), new n.Vector2(c.x,1 - c.z)] : [new n.Vector2(s.y,1 - s.z), new n.Vector2(l.y,1 - l.z), new n.Vector2(h.y,1 - h.z), new n.Vector2(c.y,1 - c.z)]
            }
        },
        n.ShapeGeometry = function(t, e) {
            n.Geometry.call(this),
            this.type = "ShapeGeometry",
            Array.isArray(t) === !1 && (t = [t]),
            this.addShapeList(t, e),
            this.computeFaceNormals()
        }
        ,
        n.ShapeGeometry.prototype = Object.create(n.Geometry.prototype),
        n.ShapeGeometry.prototype.constructor = n.ShapeGeometry,
        n.ShapeGeometry.prototype.addShapeList = function(t, e) {
            for (var i = 0, n = t.length; i < n; i++)
                this.addShape(t[i], e);
            return this
        }
        ,
        n.ShapeGeometry.prototype.addShape = function(t, e) {
            void 0 === e && (e = {});
            var i, r, a, o = void 0 !== e.curveSegments ? e.curveSegments : 12, s = e.material, l = void 0 === e.UVGenerator ? n.ExtrudeGeometry.WorldUVGenerator : e.UVGenerator, h = this.vertices.length, c = t.extractPoints(o), u = c.shape, p = c.holes, f = !n.ShapeUtils.isClockWise(u);
            if (f) {
                for (u = u.reverse(),
                i = 0,
                r = p.length; i < r; i++)
                    a = p[i],
                    n.ShapeUtils.isClockWise(a) && (p[i] = a.reverse());
                f = !1
            }
            var d = n.ShapeUtils.triangulateShape(u, p);
            for (i = 0,
            r = p.length; i < r; i++)
                a = p[i],
                u = u.concat(a);
            var m, g, v = u.length, y = d.length;
            for (i = 0; i < v; i++)
                m = u[i],
                this.vertices.push(new n.Vector3(m.x,m.y,0));
            for (i = 0; i < y; i++) {
                g = d[i];
                var _ = g[0] + h
                  , x = g[1] + h
                  , b = g[2] + h;
                this.faces.push(new n.Face3(_,x,b,null,null,s)),
                this.faceVertexUvs[0].push(l.generateTopUV(this, _, x, b))
            }
        }
        ,
        n.LatheBufferGeometry = function(t, e, i, r) {
            n.BufferGeometry.call(this),
            this.type = "LatheBufferGeometry",
            this.parameters = {
                points: t,
                segments: e,
                phiStart: i,
                phiLength: r
            },
            e = Math.floor(e) || 12,
            i = i || 0,
            r = r || 2 * Math.PI,
            r = n.Math.clamp(r, 0, 2 * Math.PI);
            var a, o, s, l = (e + 1) * t.length, h = e * t.length * 2 * 3, c = new n.BufferAttribute(new (h > 65535 ? Uint32Array : Uint16Array)(h),1), u = new n.BufferAttribute(new Float32Array(3 * l),3), p = new n.BufferAttribute(new Float32Array(2 * l),2), f = 0, d = 0, m = (1 / (t.length - 1),
            1 / e), g = new n.Vector3, v = new n.Vector2;
            for (o = 0; o <= e; o++) {
                var y = i + o * m * r
                  , _ = Math.sin(y)
                  , x = Math.cos(y);
                for (s = 0; s <= t.length - 1; s++)
                    g.x = t[s].x * _,
                    g.y = t[s].y,
                    g.z = t[s].x * x,
                    u.setXYZ(f, g.x, g.y, g.z),
                    v.x = o / e,
                    v.y = s / (t.length - 1),
                    p.setXY(f, v.x, v.y),
                    f++
            }
            for (o = 0; o < e; o++)
                for (s = 0; s < t.length - 1; s++) {
                    a = s + o * t.length;
                    var b = a
                      , w = a + t.length
                      , M = a + t.length + 1
                      , T = a + 1;
                    c.setX(d, b),
                    d++,
                    c.setX(d, w),
                    d++,
                    c.setX(d, T),
                    d++,
                    c.setX(d, w),
                    d++,
                    c.setX(d, M),
                    d++,
                    c.setX(d, T),
                    d++
                }
            if (this.setIndex(c),
            this.addAttribute("position", u),
            this.addAttribute("uv", p),
            this.computeVertexNormals(),
            r === 2 * Math.PI) {
                var S = this.attributes.normal.array
                  , C = new n.Vector3
                  , A = new n.Vector3
                  , P = new n.Vector3;
                for (a = e * t.length * 3,
                o = 0,
                s = 0; o < t.length; o++,
                s += 3)
                    C.x = S[s + 0],
                    C.y = S[s + 1],
                    C.z = S[s + 2],
                    A.x = S[a + s + 0],
                    A.y = S[a + s + 1],
                    A.z = S[a + s + 2],
                    P.addVectors(C, A).normalize(),
                    S[s + 0] = S[a + s + 0] = P.x,
                    S[s + 1] = S[a + s + 1] = P.y,
                    S[s + 2] = S[a + s + 2] = P.z
            }
        }
        ,
        n.LatheBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.LatheBufferGeometry.prototype.constructor = n.LatheBufferGeometry,
        n.LatheGeometry = function(t, e, i, r) {
            n.Geometry.call(this),
            this.type = "LatheGeometry",
            this.parameters = {
                points: t,
                segments: e,
                phiStart: i,
                phiLength: r
            },
            this.fromBufferGeometry(new n.LatheBufferGeometry(t,e,i,r)),
            this.mergeVertices()
        }
        ,
        n.LatheGeometry.prototype = Object.create(n.Geometry.prototype),
        n.LatheGeometry.prototype.constructor = n.LatheGeometry,
        n.PlaneGeometry = function(t, e, i, r) {
            n.Geometry.call(this),
            this.type = "PlaneGeometry",
            this.parameters = {
                width: t,
                height: e,
                widthSegments: i,
                heightSegments: r
            },
            this.fromBufferGeometry(new n.PlaneBufferGeometry(t,e,i,r))
        }
        ,
        n.PlaneGeometry.prototype = Object.create(n.Geometry.prototype),
        n.PlaneGeometry.prototype.constructor = n.PlaneGeometry,
        n.PlaneBufferGeometry = function(t, e, i, r) {
            n.BufferGeometry.call(this),
            this.type = "PlaneBufferGeometry",
            this.parameters = {
                width: t,
                height: e,
                widthSegments: i,
                heightSegments: r
            };
            for (var a = t / 2, o = e / 2, s = Math.floor(i) || 1, l = Math.floor(r) || 1, h = s + 1, c = l + 1, u = t / s, p = e / l, f = new Float32Array(h * c * 3), d = new Float32Array(h * c * 3), m = new Float32Array(h * c * 2), g = 0, v = 0, y = 0; y < c; y++)
                for (var _ = y * p - o, x = 0; x < h; x++) {
                    var b = x * u - a;
                    f[g] = b,
                    f[g + 1] = -_,
                    d[g + 2] = 1,
                    m[v] = x / s,
                    m[v + 1] = 1 - y / l,
                    g += 3,
                    v += 2
                }
            g = 0;
            for (var w = new (f.length / 3 > 65535 ? Uint32Array : Uint16Array)(s * l * 6), y = 0; y < l; y++)
                for (var x = 0; x < s; x++) {
                    var M = x + h * y
                      , T = x + h * (y + 1)
                      , S = x + 1 + h * (y + 1)
                      , C = x + 1 + h * y;
                    w[g] = M,
                    w[g + 1] = T,
                    w[g + 2] = C,
                    w[g + 3] = T,
                    w[g + 4] = S,
                    w[g + 5] = C,
                    g += 6
                }
            this.setIndex(new n.BufferAttribute(w,1)),
            this.addAttribute("position", new n.BufferAttribute(f,3)),
            this.addAttribute("normal", new n.BufferAttribute(d,3)),
            this.addAttribute("uv", new n.BufferAttribute(m,2))
        }
        ,
        n.PlaneBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.PlaneBufferGeometry.prototype.constructor = n.PlaneBufferGeometry,
        n.RingBufferGeometry = function(t, e, i, r, a, o) {
            n.BufferGeometry.call(this),
            this.type = "RingBufferGeometry",
            this.parameters = {
                innerRadius: t,
                outerRadius: e,
                thetaSegments: i,
                phiSegments: r,
                thetaStart: a,
                thetaLength: o
            },
            t = t || 20,
            e = e || 50,
            a = void 0 !== a ? a : 0,
            o = void 0 !== o ? o : 2 * Math.PI,
            i = void 0 !== i ? Math.max(3, i) : 8,
            r = void 0 !== r ? Math.max(1, r) : 1;
            var s, l, h, c = (i + 1) * (r + 1), u = i * r * 2 * 3, p = new n.BufferAttribute(new (u > 65535 ? Uint32Array : Uint16Array)(u),1), f = new n.BufferAttribute(new Float32Array(3 * c),3), d = new n.BufferAttribute(new Float32Array(3 * c),3), m = new n.BufferAttribute(new Float32Array(2 * c),2), g = 0, v = 0, y = t, _ = (e - t) / r, x = new n.Vector3, b = new n.Vector2;
            for (l = 0; l <= r; l++) {
                for (h = 0; h <= i; h++)
                    s = a + h / i * o,
                    x.x = y * Math.cos(s),
                    x.y = y * Math.sin(s),
                    f.setXYZ(g, x.x, x.y, x.z),
                    d.setXYZ(g, 0, 0, 1),
                    b.x = (x.x / e + 1) / 2,
                    b.y = (x.y / e + 1) / 2,
                    m.setXY(g, b.x, b.y),
                    g++;
                y += _
            }
            for (l = 0; l < r; l++) {
                var w = l * (i + 1);
                for (h = 0; h < i; h++) {
                    s = h + w;
                    var M = s
                      , T = s + i + 1
                      , S = s + i + 2
                      , C = s + 1;
                    p.setX(v, M),
                    v++,
                    p.setX(v, T),
                    v++,
                    p.setX(v, S),
                    v++,
                    p.setX(v, M),
                    v++,
                    p.setX(v, S),
                    v++,
                    p.setX(v, C),
                    v++
                }
            }
            this.setIndex(p),
            this.addAttribute("position", f),
            this.addAttribute("normal", d),
            this.addAttribute("uv", m)
        }
        ,
        n.RingBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.RingBufferGeometry.prototype.constructor = n.RingBufferGeometry,
        n.RingGeometry = function(t, e, i, r, a, o) {
            n.Geometry.call(this),
            this.type = "RingGeometry",
            this.parameters = {
                innerRadius: t,
                outerRadius: e,
                thetaSegments: i,
                phiSegments: r,
                thetaStart: a,
                thetaLength: o
            },
            this.fromBufferGeometry(new n.RingBufferGeometry(t,e,i,r,a,o))
        }
        ,
        n.RingGeometry.prototype = Object.create(n.Geometry.prototype),
        n.RingGeometry.prototype.constructor = n.RingGeometry,
        n.SphereGeometry = function(t, e, i, r, a, o, s) {
            n.Geometry.call(this),
            this.type = "SphereGeometry",
            this.parameters = {
                radius: t,
                widthSegments: e,
                heightSegments: i,
                phiStart: r,
                phiLength: a,
                thetaStart: o,
                thetaLength: s
            },
            this.fromBufferGeometry(new n.SphereBufferGeometry(t,e,i,r,a,o,s))
        }
        ,
        n.SphereGeometry.prototype = Object.create(n.Geometry.prototype),
        n.SphereGeometry.prototype.constructor = n.SphereGeometry,
        n.SphereBufferGeometry = function(t, e, i, r, a, o, s) {
            n.BufferGeometry.call(this),
            this.type = "SphereBufferGeometry",
            this.parameters = {
                radius: t,
                widthSegments: e,
                heightSegments: i,
                phiStart: r,
                phiLength: a,
                thetaStart: o,
                thetaLength: s
            },
            t = t || 50,
            e = Math.max(3, Math.floor(e) || 8),
            i = Math.max(2, Math.floor(i) || 6),
            r = void 0 !== r ? r : 0,
            a = void 0 !== a ? a : 2 * Math.PI,
            o = void 0 !== o ? o : 0,
            s = void 0 !== s ? s : Math.PI;
            for (var l = o + s, h = (e + 1) * (i + 1), c = new n.BufferAttribute(new Float32Array(3 * h),3), u = new n.BufferAttribute(new Float32Array(3 * h),3), p = new n.BufferAttribute(new Float32Array(2 * h),2), f = 0, d = [], m = new n.Vector3, g = 0; g <= i; g++) {
                for (var v = [], y = g / i, _ = 0; _ <= e; _++) {
                    var x = _ / e
                      , b = -t * Math.cos(r + x * a) * Math.sin(o + y * s)
                      , w = t * Math.cos(o + y * s)
                      , M = t * Math.sin(r + x * a) * Math.sin(o + y * s);
                    m.set(b, w, M).normalize(),
                    c.setXYZ(f, b, w, M),
                    u.setXYZ(f, m.x, m.y, m.z),
                    p.setXY(f, x, 1 - y),
                    v.push(f),
                    f++
                }
                d.push(v)
            }
            for (var T = [], g = 0; g < i; g++)
                for (var _ = 0; _ < e; _++) {
                    var S = d[g][_ + 1]
                      , C = d[g][_]
                      , A = d[g + 1][_]
                      , P = d[g + 1][_ + 1];
                    (0 !== g || o > 0) && T.push(S, C, P),
                    (g !== i - 1 || l < Math.PI) && T.push(C, A, P)
                }
            this.setIndex(new (c.count > 65535 ? n.Uint32Attribute : n.Uint16Attribute)(T,1)),
            this.addAttribute("position", c),
            this.addAttribute("normal", u),
            this.addAttribute("uv", p),
            this.boundingSphere = new n.Sphere(new n.Vector3,t)
        }
        ,
        n.SphereBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.SphereBufferGeometry.prototype.constructor = n.SphereBufferGeometry,
        n.TextGeometry = function(t, e) {
            e = e || {};
            var i = e.font;
            if (i instanceof n.Font == !1)
                return new n.Geometry;
            var r = i.generateShapes(t, e.size, e.curveSegments);
            e.amount = void 0 !== e.height ? e.height : 50,
            void 0 === e.bevelThickness && (e.bevelThickness = 10),
            void 0 === e.bevelSize && (e.bevelSize = 8),
            void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
            n.ExtrudeGeometry.call(this, r, e),
            this.type = "TextGeometry"
        }
        ,
        n.TextGeometry.prototype = Object.create(n.ExtrudeGeometry.prototype),
        n.TextGeometry.prototype.constructor = n.TextGeometry,
        n.TorusBufferGeometry = function(t, e, i, r, a) {
            n.BufferGeometry.call(this),
            this.type = "TorusBufferGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                radialSegments: i,
                tubularSegments: r,
                arc: a
            },
            t = t || 100,
            e = e || 40,
            i = Math.floor(i) || 8,
            r = Math.floor(r) || 6,
            a = a || 2 * Math.PI;
            var o, s, l = (i + 1) * (r + 1), h = i * r * 2 * 3, c = new (h > 65535 ? Uint32Array : Uint16Array)(h), u = new Float32Array(3 * l), p = new Float32Array(3 * l), f = new Float32Array(2 * l), d = 0, m = 0, g = 0, v = new n.Vector3, y = new n.Vector3, _ = new n.Vector3;
            for (o = 0; o <= i; o++)
                for (s = 0; s <= r; s++) {
                    var x = s / r * a
                      , b = o / i * Math.PI * 2;
                    y.x = (t + e * Math.cos(b)) * Math.cos(x),
                    y.y = (t + e * Math.cos(b)) * Math.sin(x),
                    y.z = e * Math.sin(b),
                    u[d] = y.x,
                    u[d + 1] = y.y,
                    u[d + 2] = y.z,
                    v.x = t * Math.cos(x),
                    v.y = t * Math.sin(x),
                    _.subVectors(y, v).normalize(),
                    p[d] = _.x,
                    p[d + 1] = _.y,
                    p[d + 2] = _.z,
                    f[m] = s / r,
                    f[m + 1] = o / i,
                    d += 3,
                    m += 2
                }
            for (o = 1; o <= i; o++)
                for (s = 1; s <= r; s++) {
                    var w = (r + 1) * o + s - 1
                      , M = (r + 1) * (o - 1) + s - 1
                      , T = (r + 1) * (o - 1) + s
                      , S = (r + 1) * o + s;
                    c[g] = w,
                    c[g + 1] = M,
                    c[g + 2] = S,
                    c[g + 3] = M,
                    c[g + 4] = T,
                    c[g + 5] = S,
                    g += 6
                }
            this.setIndex(new n.BufferAttribute(c,1)),
            this.addAttribute("position", new n.BufferAttribute(u,3)),
            this.addAttribute("normal", new n.BufferAttribute(p,3)),
            this.addAttribute("uv", new n.BufferAttribute(f,2))
        }
        ,
        n.TorusBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.TorusBufferGeometry.prototype.constructor = n.TorusBufferGeometry,
        n.TorusGeometry = function(t, e, i, r, a) {
            n.Geometry.call(this),
            this.type = "TorusGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                radialSegments: i,
                tubularSegments: r,
                arc: a
            },
            this.fromBufferGeometry(new n.TorusBufferGeometry(t,e,i,r,a))
        }
        ,
        n.TorusGeometry.prototype = Object.create(n.Geometry.prototype),
        n.TorusGeometry.prototype.constructor = n.TorusGeometry,
        n.TorusKnotBufferGeometry = function(t, e, i, r, a, o) {
            function s(t, e, i, n, r) {
                var a = Math.cos(t)
                  , o = Math.sin(t)
                  , s = i / e * t
                  , l = Math.cos(s);
                r.x = n * (2 + l) * .5 * a,
                r.y = n * (2 + l) * o * .5,
                r.z = n * Math.sin(s) * .5
            }
            n.BufferGeometry.call(this),
            this.type = "TorusKnotBufferGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                tubularSegments: i,
                radialSegments: r,
                p: a,
                q: o
            },
            t = t || 100,
            e = e || 40,
            i = Math.floor(i) || 64,
            r = Math.floor(r) || 8,
            a = a || 2,
            o = o || 3;
            var l, h, c = (r + 1) * (i + 1), u = r * i * 2 * 3, p = new n.BufferAttribute(new (u > 65535 ? Uint32Array : Uint16Array)(u),1), f = new n.BufferAttribute(new Float32Array(3 * c),3), d = new n.BufferAttribute(new Float32Array(3 * c),3), m = new n.BufferAttribute(new Float32Array(2 * c),2), g = 0, v = 0, y = new n.Vector3, _ = new n.Vector3, x = new n.Vector2, b = new n.Vector3, w = new n.Vector3, M = new n.Vector3, T = new n.Vector3, S = new n.Vector3;
            for (l = 0; l <= i; ++l) {
                var C = l / i * a * Math.PI * 2;
                for (s(C, a, o, t, b),
                s(C + .01, a, o, t, w),
                T.subVectors(w, b),
                S.addVectors(w, b),
                M.crossVectors(T, S),
                S.crossVectors(M, T),
                M.normalize(),
                S.normalize(),
                h = 0; h <= r; ++h) {
                    var A = h / r * Math.PI * 2
                      , P = -e * Math.cos(A)
                      , E = e * Math.sin(A);
                    y.x = b.x + (P * S.x + E * M.x),
                    y.y = b.y + (P * S.y + E * M.y),
                    y.z = b.z + (P * S.z + E * M.z),
                    f.setXYZ(g, y.x, y.y, y.z),
                    _.subVectors(y, b).normalize(),
                    d.setXYZ(g, _.x, _.y, _.z),
                    x.x = l / i,
                    x.y = h / r,
                    m.setXY(g, x.x, x.y),
                    g++
                }
            }
            for (h = 1; h <= i; h++)
                for (l = 1; l <= r; l++) {
                    var L = (r + 1) * (h - 1) + (l - 1)
                      , O = (r + 1) * h + (l - 1)
                      , R = (r + 1) * h + l
                      , D = (r + 1) * (h - 1) + l;
                    p.setX(v, L),
                    v++,
                    p.setX(v, O),
                    v++,
                    p.setX(v, D),
                    v++,
                    p.setX(v, O),
                    v++,
                    p.setX(v, R),
                    v++,
                    p.setX(v, D),
                    v++
                }
            this.setIndex(p),
            this.addAttribute("position", f),
            this.addAttribute("normal", d),
            this.addAttribute("uv", m)
        }
        ,
        n.TorusKnotBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.TorusKnotBufferGeometry.prototype.constructor = n.TorusKnotBufferGeometry,
        n.TorusKnotGeometry = function(t, e, i, r, a, o, s) {
            n.Geometry.call(this),
            this.type = "TorusKnotGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                tubularSegments: i,
                radialSegments: r,
                p: a,
                q: o
            },
            this.fromBufferGeometry(new n.TorusKnotBufferGeometry(t,e,i,r,a,o)),
            this.mergeVertices()
        }
        ,
        n.TorusKnotGeometry.prototype = Object.create(n.Geometry.prototype),
        n.TorusKnotGeometry.prototype.constructor = n.TorusKnotGeometry,
        n.TubeGeometry = function(t, e, i, r, a, o) {
            function s(t, e, i) {
                return L.vertices.push(new n.Vector3(t,e,i)) - 1
            }
            n.Geometry.call(this),
            this.type = "TubeGeometry",
            this.parameters = {
                path: t,
                segments: e,
                radius: i,
                radialSegments: r,
                closed: a,
                taper: o
            },
            e = e || 64,
            i = i || 1,
            r = r || 8,
            a = a || !1,
            o = o || n.TubeGeometry.NoTaper;
            var l, h, c, u, p, f, d, m, g, v, y, _, x, b, w, M, T, S, C, A, P, E = [], L = this, O = e + 1, R = new n.Vector3, D = new n.TubeGeometry.FrenetFrames(t,e,a), I = D.tangents, k = D.normals, N = D.binormals;
            for (this.tangents = I,
            this.normals = k,
            this.binormals = N,
            v = 0; v < O; v++)
                for (E[v] = [],
                u = v / (O - 1),
                g = t.getPointAt(u),
                l = I[v],
                h = k[v],
                c = N[v],
                f = i * o(u),
                y = 0; y < r; y++)
                    p = y / r * 2 * Math.PI,
                    d = -f * Math.cos(p),
                    m = f * Math.sin(p),
                    R.copy(g),
                    R.x += d * h.x + m * c.x,
                    R.y += d * h.y + m * c.y,
                    R.z += d * h.z + m * c.z,
                    E[v][y] = s(R.x, R.y, R.z);
            for (v = 0; v < e; v++)
                for (y = 0; y < r; y++)
                    _ = a ? (v + 1) % e : v + 1,
                    x = (y + 1) % r,
                    b = E[v][y],
                    w = E[_][y],
                    M = E[_][x],
                    T = E[v][x],
                    S = new n.Vector2(v / e,y / r),
                    C = new n.Vector2((v + 1) / e,y / r),
                    A = new n.Vector2((v + 1) / e,(y + 1) / r),
                    P = new n.Vector2(v / e,(y + 1) / r),
                    this.faces.push(new n.Face3(b,w,T)),
                    this.faceVertexUvs[0].push([S, C, P]),
                    this.faces.push(new n.Face3(w,M,T)),
                    this.faceVertexUvs[0].push([C.clone(), A, P.clone()]);
            this.computeFaceNormals(),
            this.computeVertexNormals()
        }
        ,
        n.TubeGeometry.prototype = Object.create(n.Geometry.prototype),
        n.TubeGeometry.prototype.constructor = n.TubeGeometry,
        n.TubeGeometry.NoTaper = function(t) {
            return 1
        }
        ,
        n.TubeGeometry.SinusoidalTaper = function(t) {
            return Math.sin(Math.PI * t)
        }
        ,
        n.TubeGeometry.FrenetFrames = function(t, e, i) {
            function r() {
                d[0] = new n.Vector3,
                m[0] = new n.Vector3,
                o = Number.MAX_VALUE,
                s = Math.abs(f[0].x),
                l = Math.abs(f[0].y),
                h = Math.abs(f[0].z),
                s <= o && (o = s,
                p.set(1, 0, 0)),
                l <= o && (o = l,
                p.set(0, 1, 0)),
                h <= o && p.set(0, 0, 1),
                g.crossVectors(f[0], p).normalize(),
                d[0].crossVectors(f[0], g),
                m[0].crossVectors(f[0], d[0])
            }
            var a, o, s, l, h, c, u, p = new n.Vector3, f = [], d = [], m = [], g = new n.Vector3, v = new n.Matrix4, y = e + 1;
            for (this.tangents = f,
            this.normals = d,
            this.binormals = m,
            c = 0; c < y; c++)
                u = c / (y - 1),
                f[c] = t.getTangentAt(u),
                f[c].normalize();
            for (r(),
            c = 1; c < y; c++)
                d[c] = d[c - 1].clone(),
                m[c] = m[c - 1].clone(),
                g.crossVectors(f[c - 1], f[c]),
                g.length() > Number.EPSILON && (g.normalize(),
                a = Math.acos(n.Math.clamp(f[c - 1].dot(f[c]), -1, 1)),
                d[c].applyMatrix4(v.makeRotationAxis(g, a))),
                m[c].crossVectors(f[c], d[c]);
            if (i)
                for (a = Math.acos(n.Math.clamp(d[0].dot(d[y - 1]), -1, 1)),
                a /= y - 1,
                f[0].dot(g.crossVectors(d[0], d[y - 1])) > 0 && (a = -a),
                c = 1; c < y; c++)
                    d[c].applyMatrix4(v.makeRotationAxis(f[c], a * c)),
                    m[c].crossVectors(f[c], d[c])
        }
        ,
        n.PolyhedronGeometry = function(t, e, i, r) {
            function a(t) {
                var e = t.normalize().clone();
                e.index = u.vertices.push(e) - 1;
                var i = l(t) / 2 / Math.PI + .5
                  , r = h(t) / Math.PI + .5;
                return e.uv = new n.Vector2(i,1 - r),
                e
            }
            function o(t, e, i) {
                var r = new n.Face3(t.index,e.index,i.index,[t.clone(), e.clone(), i.clone()]);
                u.faces.push(r),
                x.copy(t).add(e).add(i).divideScalar(3);
                var a = l(x);
                u.faceVertexUvs[0].push([c(t.uv, t, a), c(e.uv, e, a), c(i.uv, i, a)])
            }
            function s(t, e) {
                for (var i = Math.pow(2, e), n = a(u.vertices[t.a]), r = a(u.vertices[t.b]), s = a(u.vertices[t.c]), l = [], h = 0; h <= i; h++) {
                    l[h] = [];
                    for (var c = a(n.clone().lerp(s, h / i)), p = a(r.clone().lerp(s, h / i)), f = i - h, d = 0; d <= f; d++)
                        0 === d && h === i ? l[h][d] = c : l[h][d] = a(c.clone().lerp(p, d / f))
                }
                for (var h = 0; h < i; h++)
                    for (var d = 0; d < 2 * (i - h) - 1; d++) {
                        var m = Math.floor(d / 2);
                        d % 2 === 0 ? o(l[h][m + 1], l[h + 1][m], l[h][m]) : o(l[h][m + 1], l[h + 1][m + 1], l[h + 1][m])
                    }
            }
            function l(t) {
                return Math.atan2(t.z, -t.x)
            }
            function h(t) {
                return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z))
            }
            function c(t, e, i) {
                return i < 0 && 1 === t.x && (t = new n.Vector2(t.x - 1,t.y)),
                0 === e.x && 0 === e.z && (t = new n.Vector2(i / 2 / Math.PI + .5,t.y)),
                t.clone()
            }
            n.Geometry.call(this),
            this.type = "PolyhedronGeometry",
            this.parameters = {
                vertices: t,
                indices: e,
                radius: i,
                detail: r
            },
            i = i || 1,
            r = r || 0;
            for (var u = this, p = 0, f = t.length; p < f; p += 3)
                a(new n.Vector3(t[p],t[p + 1],t[p + 2]));
            for (var d = this.vertices, m = [], p = 0, g = 0, f = e.length; p < f; p += 3,
            g++) {
                var v = d[e[p]]
                  , y = d[e[p + 1]]
                  , _ = d[e[p + 2]];
                m[g] = new n.Face3(v.index,y.index,_.index,[v.clone(), y.clone(), _.clone()])
            }
            for (var x = new n.Vector3, p = 0, f = m.length; p < f; p++)
                s(m[p], r);
            for (var p = 0, f = this.faceVertexUvs[0].length; p < f; p++) {
                var b = this.faceVertexUvs[0][p]
                  , w = b[0].x
                  , M = b[1].x
                  , T = b[2].x
                  , S = Math.max(w, M, T)
                  , C = Math.min(w, M, T);
                S > .9 && C < .1 && (w < .2 && (b[0].x += 1),
                M < .2 && (b[1].x += 1),
                T < .2 && (b[2].x += 1))
            }
            for (var p = 0, f = this.vertices.length; p < f; p++)
                this.vertices[p].multiplyScalar(i);
            this.mergeVertices(),
            this.computeFaceNormals(),
            this.boundingSphere = new n.Sphere(new n.Vector3,i)
        }
        ,
        n.PolyhedronGeometry.prototype = Object.create(n.Geometry.prototype),
        n.PolyhedronGeometry.prototype.constructor = n.PolyhedronGeometry,
        n.DodecahedronGeometry = function(t, e) {
            var i = (1 + Math.sqrt(5)) / 2
              , r = 1 / i
              , a = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -i, 0, -r, i, 0, r, -i, 0, r, i, -r, -i, 0, -r, i, 0, r, -i, 0, r, i, 0, -i, 0, -r, i, 0, -r, -i, 0, r, i, 0, r]
              , o = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
            n.PolyhedronGeometry.call(this, a, o, t, e),
            this.type = "DodecahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        n.DodecahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype),
        n.DodecahedronGeometry.prototype.constructor = n.DodecahedronGeometry,
        n.IcosahedronGeometry = function(t, e) {
            var i = (1 + Math.sqrt(5)) / 2
              , r = [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1]
              , a = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
            n.PolyhedronGeometry.call(this, r, a, t, e),
            this.type = "IcosahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        n.IcosahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype),
        n.IcosahedronGeometry.prototype.constructor = n.IcosahedronGeometry,
        n.OctahedronGeometry = function(t, e) {
            var i = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
              , r = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
            n.PolyhedronGeometry.call(this, i, r, t, e),
            this.type = "OctahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        n.OctahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype),
        n.OctahedronGeometry.prototype.constructor = n.OctahedronGeometry,
        n.TetrahedronGeometry = function(t, e) {
            var i = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
              , r = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
            n.PolyhedronGeometry.call(this, i, r, t, e),
            this.type = "TetrahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
        }
        ,
        n.TetrahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype),
        n.TetrahedronGeometry.prototype.constructor = n.TetrahedronGeometry,
        n.ParametricGeometry = function(t, e, i) {
            n.Geometry.call(this),
            this.type = "ParametricGeometry",
            this.parameters = {
                func: t,
                slices: e,
                stacks: i
            };
            var r, a, o, s, l, h = this.vertices, c = this.faces, u = this.faceVertexUvs[0], p = e + 1;
            for (r = 0; r <= i; r++)
                for (l = r / i,
                a = 0; a <= e; a++)
                    s = a / e,
                    o = t(s, l),
                    h.push(o);
            var f, d, m, g, v, y, _, x;
            for (r = 0; r < i; r++)
                for (a = 0; a < e; a++)
                    f = r * p + a,
                    d = r * p + a + 1,
                    m = (r + 1) * p + a + 1,
                    g = (r + 1) * p + a,
                    v = new n.Vector2(a / e,r / i),
                    y = new n.Vector2((a + 1) / e,r / i),
                    _ = new n.Vector2((a + 1) / e,(r + 1) / i),
                    x = new n.Vector2(a / e,(r + 1) / i),
                    c.push(new n.Face3(f,d,g)),
                    u.push([v, y, x]),
                    c.push(new n.Face3(d,m,g)),
                    u.push([y.clone(), _, x.clone()]);
            this.computeFaceNormals(),
            this.computeVertexNormals()
        }
        ,
        n.ParametricGeometry.prototype = Object.create(n.Geometry.prototype),
        n.ParametricGeometry.prototype.constructor = n.ParametricGeometry,
        n.WireframeGeometry = function(t) {
            function e(t, e) {
                return t - e
            }
            n.BufferGeometry.call(this);
            var i = [0, 0]
              , r = {}
              , a = ["a", "b", "c"];
            if (t instanceof n.Geometry) {
                for (var o = t.vertices, s = t.faces, l = 0, h = new Uint32Array(6 * s.length), c = 0, u = s.length; c < u; c++)
                    for (var p = s[c], f = 0; f < 3; f++) {
                        i[0] = p[a[f]],
                        i[1] = p[a[(f + 1) % 3]],
                        i.sort(e);
                        var d = i.toString();
                        void 0 === r[d] && (h[2 * l] = i[0],
                        h[2 * l + 1] = i[1],
                        r[d] = !0,
                        l++)
                    }
                for (var m = new Float32Array(2 * l * 3), c = 0, u = l; c < u; c++)
                    for (var f = 0; f < 2; f++) {
                        var g = o[h[2 * c + f]]
                          , v = 6 * c + 3 * f;
                        m[v + 0] = g.x,
                        m[v + 1] = g.y,
                        m[v + 2] = g.z
                    }
                this.addAttribute("position", new n.BufferAttribute(m,3))
            } else if (t instanceof n.BufferGeometry)
                if (null !== t.index) {
                    var y = t.index.array
                      , o = t.attributes.position
                      , _ = t.groups
                      , l = 0;
                    0 === _.length && t.addGroup(0, y.length);
                    for (var h = new Uint32Array(2 * y.length), x = 0, b = _.length; x < b; ++x)
                        for (var w = _[x], M = w.start, T = w.count, c = M, S = M + T; c < S; c += 3)
                            for (var f = 0; f < 3; f++) {
                                i[0] = y[c + f],
                                i[1] = y[c + (f + 1) % 3],
                                i.sort(e);
                                var d = i.toString();
                                void 0 === r[d] && (h[2 * l] = i[0],
                                h[2 * l + 1] = i[1],
                                r[d] = !0,
                                l++)
                            }
                    for (var m = new Float32Array(2 * l * 3), c = 0, u = l; c < u; c++)
                        for (var f = 0; f < 2; f++) {
                            var v = 6 * c + 3 * f
                              , C = h[2 * c + f];
                            m[v + 0] = o.getX(C),
                            m[v + 1] = o.getY(C),
                            m[v + 2] = o.getZ(C)
                        }
                    this.addAttribute("position", new n.BufferAttribute(m,3))
                } else {
                    for (var o = t.attributes.position.array, l = o.length / 3, A = l / 3, m = new Float32Array(2 * l * 3), c = 0, u = A; c < u; c++)
                        for (var f = 0; f < 3; f++) {
                            var v = 18 * c + 6 * f
                              , P = 9 * c + 3 * f;
                            m[v + 0] = o[P],
                            m[v + 1] = o[P + 1],
                            m[v + 2] = o[P + 2];
                            var C = 9 * c + 3 * ((f + 1) % 3);
                            m[v + 3] = o[C],
                            m[v + 4] = o[C + 1],
                            m[v + 5] = o[C + 2]
                        }
                    this.addAttribute("position", new n.BufferAttribute(m,3))
                }
        }
        ,
        n.WireframeGeometry.prototype = Object.create(n.BufferGeometry.prototype),
        n.WireframeGeometry.prototype.constructor = n.WireframeGeometry,
        n.AxisHelper = function(t) {
            t = t || 1;
            var e = new Float32Array([0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t])
              , i = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1])
              , r = new n.BufferGeometry;
            r.addAttribute("position", new n.BufferAttribute(e,3)),
            r.addAttribute("color", new n.BufferAttribute(i,3));
            var a = new n.LineBasicMaterial({
                vertexColors: n.VertexColors
            });
            n.LineSegments.call(this, r, a)
        }
        ,
        n.AxisHelper.prototype = Object.create(n.LineSegments.prototype),
        n.AxisHelper.prototype.constructor = n.AxisHelper,
        n.ArrowHelper = function() {
            var t = new n.BufferGeometry;
            t.addAttribute("position", new n.Float32Attribute([0, 0, 0, 0, 1, 0],3));
            var e = new n.CylinderBufferGeometry(0,.5,1,5,1);
            return e.translate(0, -.5, 0),
            function(i, r, a, o, s, l) {
                n.Object3D.call(this),
                void 0 === o && (o = 16776960),
                void 0 === a && (a = 1),
                void 0 === s && (s = .2 * a),
                void 0 === l && (l = .2 * s),
                this.position.copy(r),
                this.line = new n.Line(t,new n.LineBasicMaterial({
                    color: o
                })),
                this.line.matrixAutoUpdate = !1,
                this.add(this.line),
                this.cone = new n.Mesh(e,new n.MeshBasicMaterial({
                    color: o
                })),
                this.cone.matrixAutoUpdate = !1,
                this.add(this.cone),
                this.setDirection(i),
                this.setLength(a, s, l)
            }
        }(),
        n.ArrowHelper.prototype = Object.create(n.Object3D.prototype),
        n.ArrowHelper.prototype.constructor = n.ArrowHelper,
        n.ArrowHelper.prototype.setDirection = function() {
            var t, e = new n.Vector3;
            return function(i) {
                i.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : i.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(i.z, 0, -i.x).normalize(),
                t = Math.acos(i.y),
                this.quaternion.setFromAxisAngle(e, t))
            }
        }(),
        n.ArrowHelper.prototype.setLength = function(t, e, i) {
            void 0 === e && (e = .2 * t),
            void 0 === i && (i = .2 * e),
            this.line.scale.set(1, Math.max(0, t - e), 1),
            this.line.updateMatrix(),
            this.cone.scale.set(i, e, i),
            this.cone.position.y = t,
            this.cone.updateMatrix()
        }
        ,
        n.ArrowHelper.prototype.setColor = function(t) {
            this.line.material.color.copy(t),
            this.cone.material.color.copy(t)
        }
        ,
        n.BoxHelper = function(t, e) {
            void 0 === e && (e = 16776960);
            var i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
              , r = new Float32Array(24)
              , a = new n.BufferGeometry;
            a.setIndex(new n.BufferAttribute(i,1)),
            a.addAttribute("position", new n.BufferAttribute(r,3)),
            n.LineSegments.call(this, a, new n.LineBasicMaterial({
                color: e
            })),
            void 0 !== t && this.update(t)
        }
        ,
        n.BoxHelper.prototype = Object.create(n.LineSegments.prototype),
        n.BoxHelper.prototype.constructor = n.BoxHelper,
        n.BoxHelper.prototype.update = function() {
            var t = new n.Box3;
            return function(e) {
                if (e instanceof n.Box3 ? t.copy(e) : t.setFromObject(e),
                !t.isEmpty()) {
                    var i = t.min
                      , r = t.max
                      , a = this.geometry.attributes.position
                      , o = a.array;
                    o[0] = r.x,
                    o[1] = r.y,
                    o[2] = r.z,
                    o[3] = i.x,
                    o[4] = r.y,
                    o[5] = r.z,
                    o[6] = i.x,
                    o[7] = i.y,
                    o[8] = r.z,
                    o[9] = r.x,
                    o[10] = i.y,
                    o[11] = r.z,
                    o[12] = r.x,
                    o[13] = r.y,
                    o[14] = i.z,
                    o[15] = i.x,
                    o[16] = r.y,
                    o[17] = i.z,
                    o[18] = i.x,
                    o[19] = i.y,
                    o[20] = i.z,
                    o[21] = r.x,
                    o[22] = i.y,
                    o[23] = i.z,
                    a.needsUpdate = !0,
                    this.geometry.computeBoundingSphere()
                }
            }
        }(),
        n.BoundingBoxHelper = function(t, e) {
            var i = void 0 !== e ? e : 8947848;
            this.object = t,
            this.box = new n.Box3,
            n.Mesh.call(this, new n.BoxGeometry(1,1,1), new n.MeshBasicMaterial({
                color: i,
                wireframe: !0
            }))
        }
        ,
        n.BoundingBoxHelper.prototype = Object.create(n.Mesh.prototype),
        n.BoundingBoxHelper.prototype.constructor = n.BoundingBoxHelper,
        n.BoundingBoxHelper.prototype.update = function() {
            this.box.setFromObject(this.object),
            this.box.size(this.scale),
            this.box.center(this.position)
        }
        ,
        n.CameraHelper = function(t) {
            function e(t, e, n) {
                i(t, n),
                i(e, n)
            }
            function i(t, e) {
                r.vertices.push(new n.Vector3),
                r.colors.push(new n.Color(e)),
                void 0 === o[t] && (o[t] = []),
                o[t].push(r.vertices.length - 1)
            }
            var r = new n.Geometry
              , a = new n.LineBasicMaterial({
                color: 16777215,
                vertexColors: n.FaceColors
            })
              , o = {}
              , s = 16755200
              , l = 16711680
              , h = 43775
              , c = 16777215
              , u = 3355443;
            e("n1", "n2", s),
            e("n2", "n4", s),
            e("n4", "n3", s),
            e("n3", "n1", s),
            e("f1", "f2", s),
            e("f2", "f4", s),
            e("f4", "f3", s),
            e("f3", "f1", s),
            e("n1", "f1", s),
            e("n2", "f2", s),
            e("n3", "f3", s),
            e("n4", "f4", s),
            e("p", "n1", l),
            e("p", "n2", l),
            e("p", "n3", l),
            e("p", "n4", l),
            e("u1", "u2", h),
            e("u2", "u3", h),
            e("u3", "u1", h),
            e("c", "t", c),
            e("p", "c", u),
            e("cn1", "cn2", u),
            e("cn3", "cn4", u),
            e("cf1", "cf2", u),
            e("cf3", "cf4", u),
            n.LineSegments.call(this, r, a),
            this.camera = t,
            this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.pointMap = o,
            this.update()
        }
        ,
        n.CameraHelper.prototype = Object.create(n.LineSegments.prototype),
        n.CameraHelper.prototype.constructor = n.CameraHelper,
        n.CameraHelper.prototype.update = function() {
            function t(t, n, o, s) {
                r.set(n, o, s).unproject(a);
                var l = i[t];
                if (void 0 !== l)
                    for (var h = 0, c = l.length; h < c; h++)
                        e.vertices[l[h]].copy(r)
            }
            var e, i, r = new n.Vector3, a = new n.Camera;
            return function() {
                e = this.geometry,
                i = this.pointMap;
                var n = 1
                  , r = 1;
                a.projectionMatrix.copy(this.camera.projectionMatrix),
                t("c", 0, 0, -1),
                t("t", 0, 0, 1),
                t("n1", -n, -r, -1),
                t("n2", n, -r, -1),
                t("n3", -n, r, -1),
                t("n4", n, r, -1),
                t("f1", -n, -r, 1),
                t("f2", n, -r, 1),
                t("f3", -n, r, 1),
                t("f4", n, r, 1),
                t("u1", .7 * n, 1.1 * r, -1),
                t("u2", .7 * -n, 1.1 * r, -1),
                t("u3", 0, 2 * r, -1),
                t("cf1", -n, 0, 1),
                t("cf2", n, 0, 1),
                t("cf3", 0, -r, 1),
                t("cf4", 0, r, 1),
                t("cn1", -n, 0, -1),
                t("cn2", n, 0, -1),
                t("cn3", 0, -r, -1),
                t("cn4", 0, r, -1),
                e.verticesNeedUpdate = !0
            }
        }(),
        n.DirectionalLightHelper = function(t, e) {
            n.Object3D.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            void 0 === e && (e = 1);
            var i = new n.BufferGeometry;
            i.addAttribute("position", new n.Float32Attribute([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0],3));
            var r = new n.LineBasicMaterial({
                fog: !1
            });
            this.add(new n.Line(i,r)),
            i = new n.BufferGeometry,
            i.addAttribute("position", new n.Float32Attribute([0, 0, 0, 0, 0, 1],3)),
            this.add(new n.Line(i,r)),
            this.update()
        }
        ,
        n.DirectionalLightHelper.prototype = Object.create(n.Object3D.prototype),
        n.DirectionalLightHelper.prototype.constructor = n.DirectionalLightHelper,
        n.DirectionalLightHelper.prototype.dispose = function() {
            var t = this.children[0]
              , e = this.children[1];
            t.geometry.dispose(),
            t.material.dispose(),
            e.geometry.dispose(),
            e.material.dispose()
        }
        ,
        n.DirectionalLightHelper.prototype.update = function() {
            var t = new n.Vector3
              , e = new n.Vector3
              , i = new n.Vector3;
            return function() {
                t.setFromMatrixPosition(this.light.matrixWorld),
                e.setFromMatrixPosition(this.light.target.matrixWorld),
                i.subVectors(e, t);
                var n = this.children[0]
                  , r = this.children[1];
                n.lookAt(i),
                n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),
                r.lookAt(i),
                r.scale.z = i.length()
            }
        }(),
        n.EdgesHelper = function(t, e, i) {
            var r = void 0 !== e ? e : 16777215;
            n.LineSegments.call(this, new n.EdgesGeometry(t.geometry,i), new n.LineBasicMaterial({
                color: r
            })),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1
        }
        ,
        n.EdgesHelper.prototype = Object.create(n.LineSegments.prototype),
        n.EdgesHelper.prototype.constructor = n.EdgesHelper,
        n.FaceNormalsHelper = function(t, e, i, r) {
            this.object = t,
            this.size = void 0 !== e ? e : 1;
            var a = void 0 !== i ? i : 16776960
              , o = void 0 !== r ? r : 1
              , s = 0
              , l = this.object.geometry;
            l instanceof n.Geometry && (s = l.faces.length);
            var h = new n.BufferGeometry
              , c = new n.Float32Attribute(2 * s * 3,3);
            h.addAttribute("position", c),
            n.LineSegments.call(this, h, new n.LineBasicMaterial({
                color: a,
                linewidth: o
            })),
            this.matrixAutoUpdate = !1,
            this.update()
        }
        ,
        n.FaceNormalsHelper.prototype = Object.create(n.LineSegments.prototype),
        n.FaceNormalsHelper.prototype.constructor = n.FaceNormalsHelper,
        n.FaceNormalsHelper.prototype.update = function() {
            var t = new n.Vector3
              , e = new n.Vector3
              , i = new n.Matrix3;
            return function() {
                this.object.updateMatrixWorld(!0),
                i.getNormalMatrix(this.object.matrixWorld);
                for (var n = this.object.matrixWorld, r = this.geometry.attributes.position, a = this.object.geometry, o = a.vertices, s = a.faces, l = 0, h = 0, c = s.length; h < c; h++) {
                    var u = s[h]
                      , p = u.normal;
                    t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(n),
                    e.copy(p).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                    r.setXYZ(l, t.x, t.y, t.z),
                    l += 1,
                    r.setXYZ(l, e.x, e.y, e.z),
                    l += 1
                }
                return r.needsUpdate = !0,
                this
            }
        }(),
        n.GridHelper = function(t, e, i, r) {
            e = e || 1,
            i = new n.Color(void 0 !== i ? i : 4473924),
            r = new n.Color(void 0 !== r ? r : 8947848);
            for (var a = e / 2, o = 2 * t / e, s = [], l = [], h = 0, c = 0, u = -t; h <= e; h++,
            u += o) {
                s.push(-t, 0, u, t, 0, u),
                s.push(u, 0, -t, u, 0, t);
                var p = h === a ? i : r;
                p.toArray(l, c),
                c += 3,
                p.toArray(l, c),
                c += 3,
                p.toArray(l, c),
                c += 3,
                p.toArray(l, c),
                c += 3
            }
            var f = new n.BufferGeometry;
            f.addAttribute("position", new n.Float32Attribute(s,3)),
            f.addAttribute("color", new n.Float32Attribute(l,3));
            var d = new n.LineBasicMaterial({
                vertexColors: n.VertexColors
            });
            n.LineSegments.call(this, f, d)
        }
        ,
        n.GridHelper.prototype = Object.create(n.LineSegments.prototype),
        n.GridHelper.prototype.constructor = n.GridHelper,
        n.GridHelper.prototype.setColors = function() {}
        ,
        n.HemisphereLightHelper = function(t, e) {
            n.Object3D.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.colors = [new n.Color, new n.Color];
            var i = new n.SphereGeometry(e,4,2);
            i.rotateX(-Math.PI / 2);
            for (var r = 0, a = 8; r < a; r++)
                i.faces[r].color = this.colors[r < 4 ? 0 : 1];
            var o = new n.MeshBasicMaterial({
                vertexColors: n.FaceColors,
                wireframe: !0
            });
            this.lightSphere = new n.Mesh(i,o),
            this.add(this.lightSphere),
            this.update()
        }
        ,
        n.HemisphereLightHelper.prototype = Object.create(n.Object3D.prototype),
        n.HemisphereLightHelper.prototype.constructor = n.HemisphereLightHelper,
        n.HemisphereLightHelper.prototype.dispose = function() {
            this.lightSphere.geometry.dispose(),
            this.lightSphere.material.dispose()
        }
        ,
        n.HemisphereLightHelper.prototype.update = function() {
            var t = new n.Vector3;
            return function() {
                this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),
                this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),
                this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),
                this.lightSphere.geometry.colorsNeedUpdate = !0
            }
        }(),
        n.PointLightHelper = function(t, e) {
            this.light = t,
            this.light.updateMatrixWorld();
            var i = new n.SphereBufferGeometry(e,4,2)
              , r = new n.MeshBasicMaterial({
                wireframe: !0,
                fog: !1
            });
            r.color.copy(this.light.color).multiplyScalar(this.light.intensity),
            n.Mesh.call(this, i, r),
            this.matrix = this.light.matrixWorld,
            this.matrixAutoUpdate = !1
        }
        ,
        n.PointLightHelper.prototype = Object.create(n.Mesh.prototype),
        n.PointLightHelper.prototype.constructor = n.PointLightHelper,
        n.PointLightHelper.prototype.dispose = function() {
            this.geometry.dispose(),
            this.material.dispose()
        }
        ,
        n.PointLightHelper.prototype.update = function() {
            this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
        }
        ,
        n.SkeletonHelper = function(t) {
            this.bones = this.getBoneList(t);
            for (var e = new n.Geometry, i = 0; i < this.bones.length; i++) {
                var r = this.bones[i];
                r.parent instanceof n.Bone && (e.vertices.push(new n.Vector3),
                e.vertices.push(new n.Vector3),
                e.colors.push(new n.Color(0,0,1)),
                e.colors.push(new n.Color(0,1,0)))
            }
            e.dynamic = !0;
            var a = new n.LineBasicMaterial({
                vertexColors: n.VertexColors,
                depthTest: !1,
                depthWrite: !1,
                transparent: !0
            });
            n.LineSegments.call(this, e, a),
            this.root = t,
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.update()
        }
        ,
        n.SkeletonHelper.prototype = Object.create(n.LineSegments.prototype),
        n.SkeletonHelper.prototype.constructor = n.SkeletonHelper,
        n.SkeletonHelper.prototype.getBoneList = function(t) {
            var e = [];
            t instanceof n.Bone && e.push(t);
            for (var i = 0; i < t.children.length; i++)
                e.push.apply(e, this.getBoneList(t.children[i]));
            return e
        }
        ,
        n.SkeletonHelper.prototype.update = function() {
            for (var t = this.geometry, e = (new n.Matrix4).getInverse(this.root.matrixWorld), i = new n.Matrix4, r = 0, a = 0; a < this.bones.length; a++) {
                var o = this.bones[a];
                o.parent instanceof n.Bone && (i.multiplyMatrices(e, o.matrixWorld),
                t.vertices[r].setFromMatrixPosition(i),
                i.multiplyMatrices(e, o.parent.matrixWorld),
                t.vertices[r + 1].setFromMatrixPosition(i),
                r += 2)
            }
            t.verticesNeedUpdate = !0,
            t.computeBoundingSphere()
        }
        ,
        n.SpotLightHelper = function(t) {
            n.Object3D.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1;
            for (var e = new n.BufferGeometry, i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], r = 0, a = 1, o = 32; r < o; r++,
            a++) {
                var s = r / o * Math.PI * 2
                  , l = a / o * Math.PI * 2;
                i.push(Math.cos(s), Math.sin(s), 1, Math.cos(l), Math.sin(l), 1)
            }
            e.addAttribute("position", new n.Float32Attribute(i,3));
            var h = new n.LineBasicMaterial({
                fog: !1
            });
            this.cone = new n.LineSegments(e,h),
            this.add(this.cone),
            this.update()
        }
        ,
        n.SpotLightHelper.prototype = Object.create(n.Object3D.prototype),
        n.SpotLightHelper.prototype.constructor = n.SpotLightHelper,
        n.SpotLightHelper.prototype.dispose = function() {
            this.cone.geometry.dispose(),
            this.cone.material.dispose()
        }
        ,
        n.SpotLightHelper.prototype.update = function() {
            var t = new n.Vector3
              , e = new n.Vector3;
            return function() {
                var i = this.light.distance ? this.light.distance : 1e3
                  , n = i * Math.tan(this.light.angle);
                this.cone.scale.set(n, n, i),
                t.setFromMatrixPosition(this.light.matrixWorld),
                e.setFromMatrixPosition(this.light.target.matrixWorld),
                this.cone.lookAt(e.sub(t)),
                this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
            }
        }(),
        n.VertexNormalsHelper = function(t, e, i, r) {
            this.object = t,
            this.size = void 0 !== e ? e : 1;
            var a = void 0 !== i ? i : 16711680
              , o = void 0 !== r ? r : 1
              , s = 0
              , l = this.object.geometry;
            l instanceof n.Geometry ? s = 3 * l.faces.length : l instanceof n.BufferGeometry && (s = l.attributes.normal.count);
            var h = new n.BufferGeometry
              , c = new n.Float32Attribute(2 * s * 3,3);
            h.addAttribute("position", c),
            n.LineSegments.call(this, h, new n.LineBasicMaterial({
                color: a,
                linewidth: o
            })),
            this.matrixAutoUpdate = !1,
            this.update()
        }
        ,
        n.VertexNormalsHelper.prototype = Object.create(n.LineSegments.prototype),
        n.VertexNormalsHelper.prototype.constructor = n.VertexNormalsHelper,
        n.VertexNormalsHelper.prototype.update = function() {
            var t = new n.Vector3
              , e = new n.Vector3
              , i = new n.Matrix3;
            return function() {
                var r = ["a", "b", "c"];
                this.object.updateMatrixWorld(!0),
                i.getNormalMatrix(this.object.matrixWorld);
                var a = this.object.matrixWorld
                  , o = this.geometry.attributes.position
                  , s = this.object.geometry;
                if (s instanceof n.Geometry)
                    for (var l = s.vertices, h = s.faces, c = 0, u = 0, p = h.length; u < p; u++)
                        for (var f = h[u], d = 0, m = f.vertexNormals.length; d < m; d++) {
                            var g = l[f[r[d]]]
                              , v = f.vertexNormals[d];
                            t.copy(g).applyMatrix4(a),
                            e.copy(v).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                            o.setXYZ(c, t.x, t.y, t.z),
                            c += 1,
                            o.setXYZ(c, e.x, e.y, e.z),
                            c += 1
                        }
                else if (s instanceof n.BufferGeometry)
                    for (var y = s.attributes.position, _ = s.attributes.normal, c = 0, d = 0, m = y.count; d < m; d++)
                        t.set(y.getX(d), y.getY(d), y.getZ(d)).applyMatrix4(a),
                        e.set(_.getX(d), _.getY(d), _.getZ(d)),
                        e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                        o.setXYZ(c, t.x, t.y, t.z),
                        c += 1,
                        o.setXYZ(c, e.x, e.y, e.z),
                        c += 1;
                return o.needsUpdate = !0,
                this
            }
        }(),
        n.WireframeHelper = function(t, e) {
            var i = void 0 !== e ? e : 16777215;
            n.LineSegments.call(this, new n.WireframeGeometry(t.geometry), new n.LineBasicMaterial({
                color: i
            })),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1
        }
        ,
        n.WireframeHelper.prototype = Object.create(n.LineSegments.prototype),
        n.WireframeHelper.prototype.constructor = n.WireframeHelper,
        n.ImmediateRenderObject = function(t) {
            n.Object3D.call(this),
            this.material = t,
            this.render = function(t) {}
        }
        ,
        n.ImmediateRenderObject.prototype = Object.create(n.Object3D.prototype),
        n.ImmediateRenderObject.prototype.constructor = n.ImmediateRenderObject,
        n.MorphBlendMesh = function(t, e) {
            n.Mesh.call(this, t, e),
            this.animationsMap = {},
            this.animationsList = [];
            var i = this.geometry.morphTargets.length
              , r = "__default"
              , a = 0
              , o = i - 1
              , s = i / 1;
            this.createAnimation(r, a, o, s),
            this.setAnimationWeight(r, 1)
        }
        ,
        n.MorphBlendMesh.prototype = Object.create(n.Mesh.prototype),
        n.MorphBlendMesh.prototype.constructor = n.MorphBlendMesh,
        n.MorphBlendMesh.prototype.createAnimation = function(t, e, i, n) {
            var r = {
                start: e,
                end: i,
                length: i - e + 1,
                fps: n,
                duration: (i - e) / n,
                lastFrame: 0,
                currentFrame: 0,
                active: !1,
                time: 0,
                direction: 1,
                weight: 1,
                directionBackwards: !1,
                mirroredLoop: !1
            };
            this.animationsMap[t] = r,
            this.animationsList.push(r)
        }
        ,
        n.MorphBlendMesh.prototype.autoCreateAnimations = function(t) {
            for (var e, i = /([a-z]+)_?(\d+)/i, n = {}, r = this.geometry, a = 0, o = r.morphTargets.length; a < o; a++) {
                var s = r.morphTargets[a]
                  , l = s.name.match(i);
                if (l && l.length > 1) {
                    var h = l[1];
                    n[h] || (n[h] = {
                        start: 1 / 0,
                        end: -(1 / 0)
                    });
                    var c = n[h];
                    a < c.start && (c.start = a),
                    a > c.end && (c.end = a),
                    e || (e = h)
                }
            }
            for (var h in n) {
                var c = n[h];
                this.createAnimation(h, c.start, c.end, t)
            }
            this.firstAnimation = e
        }
        ,
        n.MorphBlendMesh.prototype.setAnimationDirectionForward = function(t) {
            var e = this.animationsMap[t];
            e && (e.direction = 1,
            e.directionBackwards = !1)
        }
        ,
        n.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(t) {
            var e = this.animationsMap[t];
            e && (e.direction = -1,
            e.directionBackwards = !0)
        }
        ,
        n.MorphBlendMesh.prototype.setAnimationFPS = function(t, e) {
            var i = this.animationsMap[t];
            i && (i.fps = e,
            i.duration = (i.end - i.start) / i.fps)
        }
        ,
        n.MorphBlendMesh.prototype.setAnimationDuration = function(t, e) {
            var i = this.animationsMap[t];
            i && (i.duration = e,
            i.fps = (i.end - i.start) / i.duration)
        }
        ,
        n.MorphBlendMesh.prototype.setAnimationWeight = function(t, e) {
            var i = this.animationsMap[t];
            i && (i.weight = e)
        }
        ,
        n.MorphBlendMesh.prototype.setAnimationTime = function(t, e) {
            var i = this.animationsMap[t];
            i && (i.time = e)
        }
        ,
        n.MorphBlendMesh.prototype.getAnimationTime = function(t) {
            var e = 0
              , i = this.animationsMap[t];
            return i && (e = i.time),
            e
        }
        ,
        n.MorphBlendMesh.prototype.getAnimationDuration = function(t) {
            var e = -1
              , i = this.animationsMap[t];
            return i && (e = i.duration),
            e
        }
        ,
        n.MorphBlendMesh.prototype.playAnimation = function(t) {
            var e = this.animationsMap[t];
            e && (e.time = 0,
            e.active = !0)
        }
        ,
        n.MorphBlendMesh.prototype.stopAnimation = function(t) {
            var e = this.animationsMap[t];
            e && (e.active = !1)
        }
        ,
        n.MorphBlendMesh.prototype.update = function(t) {
            for (var e = 0, i = this.animationsList.length; e < i; e++) {
                var r = this.animationsList[e];
                if (r.active) {
                    var a = r.duration / r.length;
                    r.time += r.direction * t,
                    r.mirroredLoop ? (r.time > r.duration || r.time < 0) && (r.direction *= -1,
                    r.time > r.duration && (r.time = r.duration,
                    r.directionBackwards = !0),
                    r.time < 0 && (r.time = 0,
                    r.directionBackwards = !1)) : (r.time = r.time % r.duration,
                    r.time < 0 && (r.time += r.duration));
                    var o = r.start + n.Math.clamp(Math.floor(r.time / a), 0, r.length - 1)
                      , s = r.weight;
                    o !== r.currentFrame && (this.morphTargetInfluences[r.lastFrame] = 0,
                    this.morphTargetInfluences[r.currentFrame] = 1 * s,
                    this.morphTargetInfluences[o] = 0,
                    r.lastFrame = r.currentFrame,
                    r.currentFrame = o);
                    var l = r.time % a / a;
                    r.directionBackwards && (l = 1 - l),
                    r.currentFrame !== r.lastFrame ? (this.morphTargetInfluences[r.currentFrame] = l * s,
                    this.morphTargetInfluences[r.lastFrame] = (1 - l) * s) : this.morphTargetInfluences[r.currentFrame] = s
                }
            }
        }
    }
    , {}],
    40: [function(t, e, i) {
        var n = {
            canvas: !!window.CanvasRenderingContext2D,
            webgl: function() {
                try {
                    var t = document.createElement("canvas");
                    return !(!window.WebGLRenderingContext || !t.getContext("webgl") && !t.getContext("experimental-webgl"))
                } catch (e) {
                    return !1
                }
            }(),
            workers: !!window.Worker,
            fileapi: window.File && window.FileReader && window.FileList && window.Blob,
            getWebGLErrorMessage: function() {
                var t = document.createElement("div");
                return t.id = "webgl-error-message",
                t.style.fontFamily = "monospace",
                t.style.fontSize = "13px",
                t.style.fontWeight = "normal",
                t.style.textAlign = "center",
                t.style.background = "#fff",
                t.style.color = "#000",
                t.style.padding = "1.5em",
                t.style.width = "400px",
                t.style.margin = "5em auto 0",
                this.webgl || (t.innerHTML = window.WebGLRenderingContext ? ['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n") : ['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),
                t
            },
            addGetWebGLMessage: function(t) {
                var e, i, r;
                t = t || {},
                e = void 0 !== t.parent ? t.parent : document.body,
                i = void 0 !== t.id ? t.id : "oldie",
                r = n.getWebGLErrorMessage(),
                r.id = i,
                e.appendChild(r)
            }
        };
        "object" == typeof e && (e.exports = n)
    }
    , {}],
    41: [function(t, e, i) {
        /* Web Font Loader v1.6.26 - (c) Adobe Systems, Google. License: Apache 2.0 */
        !function() {
            function t(t, e, i) {
                return t.call.apply(t.bind, arguments)
            }
            function i(t, e, i) {
                if (!t)
                    throw Error();
                if (2 < arguments.length) {
                    var n = Array.prototype.slice.call(arguments, 2);
                    return function() {
                        var i = Array.prototype.slice.call(arguments);
                        return Array.prototype.unshift.apply(i, n),
                        t.apply(e, i)
                    }
                }
                return function() {
                    return t.apply(e, arguments)
                }
            }
            function n(e, r, a) {
                return n = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? t : i,
                n.apply(null, arguments)
            }
            function r(t, e) {
                this.a = t,
                this.m = e || t,
                this.c = this.m.document
            }
            function a(t, e, i, n) {
                if (e = t.c.createElement(e),
                i)
                    for (var r in i)
                        i.hasOwnProperty(r) && ("style" == r ? e.style.cssText = i[r] : e.setAttribute(r, i[r]));
                return n && e.appendChild(t.c.createTextNode(n)),
                e
            }
            function o(t, e, i) {
                t = t.c.getElementsByTagName(e)[0],
                t || (t = document.documentElement),
                t.insertBefore(i, t.lastChild)
            }
            function s(t) {
                t.parentNode && t.parentNode.removeChild(t)
            }
            function l(t, e, i) {
                e = e || [],
                i = i || [];
                for (var n = t.className.split(/\s+/), r = 0; r < e.length; r += 1) {
                    for (var a = !1, o = 0; o < n.length; o += 1)
                        if (e[r] === n[o]) {
                            a = !0;
                            break
                        }
                    a || n.push(e[r])
                }
                for (e = [],
                r = 0; r < n.length; r += 1) {
                    for (a = !1,
                    o = 0; o < i.length; o += 1)
                        if (n[r] === i[o]) {
                            a = !0;
                            break
                        }
                    a || e.push(n[r])
                }
                t.className = e.join(" ").replace(/\s+/g, " ").replace(/^\s+|\s+$/, "")
            }
            function h(t, e) {
                for (var i = t.className.split(/\s+/), n = 0, r = i.length; n < r; n++)
                    if (i[n] == e)
                        return !0;
                return !1
            }
            function c(t) {
                if ("string" == typeof t.f)
                    return t.f;
                var e = t.m.location.protocol;
                return "about:" == e && (e = t.a.location.protocol),
                "https:" == e ? "https:" : "http:"
            }
            function u(t) {
                return t.m.location.hostname || t.a.location.hostname
            }
            function p(t, e, i) {
                function n() {
                    h && r && s && (h(l),
                    h = null)
                }
                e = a(t, "link", {
                    rel: "stylesheet",
                    href: e,
                    media: "all"
                });
                var r = !1
                  , s = !0
                  , l = null
                  , h = i || null;
                rt ? (e.onload = function() {
                    r = !0,
                    n()
                }
                ,
                e.onerror = function() {
                    r = !0,
                    l = Error("Stylesheet failed to load"),
                    n()
                }
                ) : setTimeout(function() {
                    r = !0,
                    n()
                }, 0),
                o(t, "head", e)
            }
            function f(t, e, i, n) {
                var r = t.c.getElementsByTagName("head")[0];
                if (r) {
                    var o = a(t, "script", {
                        src: e
                    })
                      , s = !1;
                    return o.onload = o.onreadystatechange = function() {
                        s || this.readyState && "loaded" != this.readyState && "complete" != this.readyState || (s = !0,
                        i && i(null),
                        o.onload = o.onreadystatechange = null,
                        "HEAD" == o.parentNode.tagName && r.removeChild(o))
                    }
                    ,
                    r.appendChild(o),
                    setTimeout(function() {
                        s || (s = !0,
                        i && i(Error("Script load timeout")))
                    }, n || 5e3),
                    o
                }
                return null
            }
            function d() {
                this.a = 0,
                this.c = null
            }
            function m(t) {
                return t.a++,
                function() {
                    t.a--,
                    v(t)
                }
            }
            function g(t, e) {
                t.c = e,
                v(t)
            }
            function v(t) {
                0 == t.a && t.c && (t.c(),
                t.c = null)
            }
            function y(t) {
                this.a = t || "-"
            }
            function _(t, e) {
                this.c = t,
                this.f = 4,
                this.a = "n";
                var i = (e || "n4").match(/^([nio])([1-9])$/i);
                i && (this.a = i[1],
                this.f = parseInt(i[2], 10))
            }
            function x(t) {
                return M(t) + " " + (t.f + "00") + " 300px " + b(t.c)
            }
            function b(t) {
                var e = [];
                t = t.split(/,\s*/);
                for (var i = 0; i < t.length; i++) {
                    var n = t[i].replace(/['"]/g, "");
                    -1 != n.indexOf(" ") || /^\d/.test(n) ? e.push("'" + n + "'") : e.push(n)
                }
                return e.join(",")
            }
            function w(t) {
                return t.a + t.f
            }
            function M(t) {
                var e = "normal";
                return "o" === t.a ? e = "oblique" : "i" === t.a && (e = "italic"),
                e
            }
            function T(t) {
                var e = 4
                  , i = "n"
                  , n = null;
                return t && ((n = t.match(/(normal|oblique|italic)/i)) && n[1] && (i = n[1].substr(0, 1).toLowerCase()),
                (n = t.match(/([1-9]00|normal|bold)/i)) && n[1] && (/bold/i.test(n[1]) ? e = 7 : /[1-9]00/.test(n[1]) && (e = parseInt(n[1].substr(0, 1), 10)))),
                i + e
            }
            function S(t, e) {
                this.c = t,
                this.f = t.m.document.documentElement,
                this.h = e,
                this.a = new y("-"),
                this.j = !1 !== e.events,
                this.g = !1 !== e.classes
            }
            function C(t) {
                t.g && l(t.f, [t.a.c("wf", "loading")]),
                P(t, "loading")
            }
            function A(t) {
                if (t.g) {
                    var e = h(t.f, t.a.c("wf", "active"))
                      , i = []
                      , n = [t.a.c("wf", "loading")];
                    e || i.push(t.a.c("wf", "inactive")),
                    l(t.f, i, n)
                }
                P(t, "inactive")
            }
            function P(t, e, i) {
                t.j && t.h[e] && (i ? t.h[e](i.c, w(i)) : t.h[e]())
            }
            function E() {
                this.c = {}
            }
            function L(t, e, i) {
                var n, r = [];
                for (n in e)
                    if (e.hasOwnProperty(n)) {
                        var a = t.c[n];
                        a && r.push(a(e[n], i))
                    }
                return r
            }
            function O(t, e) {
                this.c = t,
                this.f = e,
                this.a = a(this.c, "span", {
                    "aria-hidden": "true"
                }, this.f)
            }
            function R(t) {
                o(t.c, "body", t.a)
            }
            function D(t) {
                return "display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:" + b(t.c) + ";" + ("font-style:" + M(t) + ";font-weight:" + (t.f + "00") + ";")
            }
            function I(t, e, i, n, r, a) {
                this.g = t,
                this.j = e,
                this.a = n,
                this.c = i,
                this.f = r || 3e3,
                this.h = a || void 0
            }
            function k(t, e, i, n, r, a, o) {
                this.v = t,
                this.B = e,
                this.c = i,
                this.a = n,
                this.s = o || "BESbswy",
                this.f = {},
                this.w = r || 3e3,
                this.u = a || null,
                this.o = this.j = this.h = this.g = null,
                this.g = new O(this.c,this.s),
                this.h = new O(this.c,this.s),
                this.j = new O(this.c,this.s),
                this.o = new O(this.c,this.s),
                t = new _(this.a.c + ",serif",w(this.a)),
                t = D(t),
                this.g.a.style.cssText = t,
                t = new _(this.a.c + ",sans-serif",w(this.a)),
                t = D(t),
                this.h.a.style.cssText = t,
                t = new _("serif",w(this.a)),
                t = D(t),
                this.j.a.style.cssText = t,
                t = new _("sans-serif",w(this.a)),
                t = D(t),
                this.o.a.style.cssText = t,
                R(this.g),
                R(this.h),
                R(this.j),
                R(this.o)
            }
            function N() {
                if (null === ot) {
                    var t = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);
                    ot = !!t && (536 > parseInt(t[1], 10) || 536 === parseInt(t[1], 10) && 11 >= parseInt(t[2], 10))
                }
                return ot
            }
            function F(t, e, i) {
                for (var n in at)
                    if (at.hasOwnProperty(n) && e === t.f[at[n]] && i === t.f[at[n]])
                        return !0;
                return !1
            }
            function B(t) {
                var e, i = t.g.a.offsetWidth, n = t.h.a.offsetWidth;
                (e = i === t.f.serif && n === t.f["sans-serif"]) || (e = N() && F(t, i, n)),
                e ? nt() - t.A >= t.w ? N() && F(t, i, n) && (null === t.u || t.u.hasOwnProperty(t.a.c)) ? z(t, t.v) : z(t, t.B) : U(t) : z(t, t.v)
            }
            function U(t) {
                setTimeout(n(function() {
                    B(this)
                }, t), 50)
            }
            function z(t, e) {
                setTimeout(n(function() {
                    s(this.g.a),
                    s(this.h.a),
                    s(this.j.a),
                    s(this.o.a),
                    e(this.a)
                }, t), 0)
            }
            function j(t, e, i) {
                this.c = t,
                this.a = e,
                this.f = 0,
                this.o = this.j = !1,
                this.s = i
            }
            function V(t) {
                0 == --t.f && t.j && (t.o ? (t = t.a,
                t.g && l(t.f, [t.a.c("wf", "active")], [t.a.c("wf", "loading"), t.a.c("wf", "inactive")]),
                P(t, "active")) : A(t.a))
            }
            function G(t) {
                this.j = t,
                this.a = new E,
                this.h = 0,
                this.f = this.g = !0
            }
            function H(t, e, i, r, a) {
                var o = 0 == --t.h;
                (t.f || t.g) && setTimeout(function() {
                    var t = a || null
                      , s = r || null || {};
                    if (0 === i.length && o)
                        A(e.a);
                    else {
                        e.f += i.length,
                        o && (e.j = o);
                        var h, c = [];
                        for (h = 0; h < i.length; h++) {
                            var u = i[h]
                              , p = s[u.c]
                              , f = e.a
                              , d = u;
                            f.g && l(f.f, [f.a.c("wf", d.c, w(d).toString(), "loading")]),
                            P(f, "fontloading", d),
                            f = null,
                            null === st && (st = !!window.FontFace && (!(d = /Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent)) || 42 < parseInt(d[1], 10))),
                            f = st ? new I(n(e.g, e),n(e.h, e),e.c,u,e.s,p) : new k(n(e.g, e),n(e.h, e),e.c,u,e.s,t,p),
                            c.push(f)
                        }
                        for (h = 0; h < c.length; h++)
                            c[h].start()
                    }
                }, 0)
            }
            function W(t, e, i) {
                var n = []
                  , r = i.timeout;
                C(e);
                var n = L(t.a, i, t.c)
                  , a = new j(t.c,e,r);
                for (t.h = n.length,
                e = 0,
                i = n.length; e < i; e++)
                    n[e].load(function(e, i, n) {
                        H(t, a, e, i, n)
                    })
            }
            function X(t, e) {
                this.c = t,
                this.a = e
            }
            function q(t, e, i) {
                var n = c(t.c);
                return t = (t.a.api || "fast.fonts.net/jsapi").replace(/^.*http(s?):(\/\/)?/, ""),
                n + "//" + t + "/" + e + ".js" + (i ? "?v=" + i : "")
            }
            function Y(t, e) {
                this.c = t,
                this.a = e
            }
            function Z(t, e, i) {
                t ? this.c = t : this.c = e + lt,
                this.a = [],
                this.f = [],
                this.g = i || ""
            }
            function $(t, e) {
                for (var i = e.length, n = 0; n < i; n++) {
                    var r = e[n].split(":");
                    3 == r.length && t.f.push(r.pop());
                    var a = "";
                    2 == r.length && "" != r[1] && (a = ":"),
                    t.a.push(r.join(a))
                }
            }
            function K(t) {
                if (0 == t.a.length)
                    throw Error("No fonts to load!");
                if (-1 != t.c.indexOf("kit="))
                    return t.c;
                for (var e = t.a.length, i = [], n = 0; n < e; n++)
                    i.push(t.a[n].replace(/ /g, "+"));
                return e = t.c + "?family=" + i.join("%7C"),
                0 < t.f.length && (e += "&subset=" + t.f.join(",")),
                0 < t.g.length && (e += "&text=" + encodeURIComponent(t.g)),
                e
            }
            function Q(t) {
                this.f = t,
                this.a = [],
                this.c = {}
            }
            function J(t) {
                for (var e = t.f.length, i = 0; i < e; i++) {
                    var n = t.f[i].split(":")
                      , r = n[0].replace(/\+/g, " ")
                      , a = ["n4"];
                    if (2 <= n.length) {
                        var o, s = n[1];
                        if (o = [],
                        s)
                            for (var s = s.split(","), l = s.length, h = 0; h < l; h++) {
                                var c;
                                if (c = s[h],
                                c.match(/^[\w-]+$/)) {
                                    var u = pt.exec(c.toLowerCase());
                                    if (null == u)
                                        c = "";
                                    else {
                                        if (c = u[2],
                                        c = null == c || "" == c ? "n" : ut[c],
                                        u = u[1],
                                        null == u || "" == u)
                                            u = "4";
                                        else
                                            var p = ct[u]
                                              , u = p ? p : isNaN(u) ? "4" : u.substr(0, 1);
                                        c = [c, u].join("")
                                    }
                                } else
                                    c = "";
                                c && o.push(c)
                            }
                        0 < o.length && (a = o),
                        3 == n.length && (n = n[2],
                        o = [],
                        n = n ? n.split(",") : o,
                        0 < n.length && (n = ht[n[0]]) && (t.c[r] = n))
                    }
                    for (t.c[r] || (n = ht[r]) && (t.c[r] = n),
                    n = 0; n < a.length; n += 1)
                        t.a.push(new _(r,a[n]))
                }
            }
            function tt(t, e) {
                this.c = t,
                this.a = e
            }
            function et(t, e) {
                this.c = t,
                this.a = e
            }
            function it(t, e) {
                this.c = t,
                this.f = e,
                this.a = []
            }
            var nt = Date.now || function() {
                return +new Date
            }
              , rt = !!window.FontFace;
            y.prototype.c = function(t) {
                for (var e = [], i = 0; i < arguments.length; i++)
                    e.push(arguments[i].replace(/[\W_]+/g, "").toLowerCase());
                return e.join(this.a)
            }
            ,
            I.prototype.start = function() {
                var t = this.c.m.document
                  , e = this
                  , i = nt()
                  , n = new Promise(function(n, r) {
                    function a() {
                        nt() - i >= e.f ? r() : t.fonts.load(x(e.a), e.h).then(function(t) {
                            1 <= t.length ? n() : setTimeout(a, 25)
                        }, function() {
                            r()
                        })
                    }
                    a()
                }
                )
                  , r = new Promise(function(t, i) {
                    setTimeout(i, e.f)
                }
                );
                Promise.race([r, n]).then(function() {
                    e.g(e.a)
                }, function() {
                    e.j(e.a)
                })
            }
            ;
            var at = {
                D: "serif",
                C: "sans-serif"
            }
              , ot = null;
            k.prototype.start = function() {
                this.f.serif = this.j.a.offsetWidth,
                this.f["sans-serif"] = this.o.a.offsetWidth,
                this.A = nt(),
                B(this)
            }
            ;
            var st = null;
            j.prototype.g = function(t) {
                var e = this.a;
                e.g && l(e.f, [e.a.c("wf", t.c, w(t).toString(), "active")], [e.a.c("wf", t.c, w(t).toString(), "loading"), e.a.c("wf", t.c, w(t).toString(), "inactive")]),
                P(e, "fontactive", t),
                this.o = !0,
                V(this)
            }
            ,
            j.prototype.h = function(t) {
                var e = this.a;
                if (e.g) {
                    var i = h(e.f, e.a.c("wf", t.c, w(t).toString(), "active"))
                      , n = []
                      , r = [e.a.c("wf", t.c, w(t).toString(), "loading")];
                    i || n.push(e.a.c("wf", t.c, w(t).toString(), "inactive")),
                    l(e.f, n, r)
                }
                P(e, "fontinactive", t),
                V(this)
            }
            ,
            G.prototype.load = function(t) {
                this.c = new r(this.j,t.context || this.j),
                this.g = !1 !== t.events,
                this.f = !1 !== t.classes,
                W(this, new S(this.c,t), t)
            }
            ,
            X.prototype.load = function(t) {
                function e() {
                    if (a["__mti_fntLst" + n]) {
                        var i, r = a["__mti_fntLst" + n](), o = [];
                        if (r)
                            for (var s = 0; s < r.length; s++) {
                                var l = r[s].fontfamily;
                                void 0 != r[s].fontStyle && void 0 != r[s].fontWeight ? (i = r[s].fontStyle + r[s].fontWeight,
                                o.push(new _(l,i))) : o.push(new _(l))
                            }
                        t(o)
                    } else
                        setTimeout(function() {
                            e()
                        }, 50)
                }
                var i = this
                  , n = i.a.projectId
                  , r = i.a.version;
                if (n) {
                    var a = i.c.m;
                    f(this.c, q(i, n, r), function(r) {
                        r ? t([]) : (a["__MonotypeConfiguration__" + n] = function() {
                            return i.a
                        }
                        ,
                        e())
                    }).id = "__MonotypeAPIScript__" + n
                } else
                    t([])
            }
            ,
            Y.prototype.load = function(t) {
                var e, i, n = this.a.urls || [], r = this.a.families || [], a = this.a.testStrings || {}, o = new d;
                for (e = 0,
                i = n.length; e < i; e++)
                    p(this.c, n[e], m(o));
                var s = [];
                for (e = 0,
                i = r.length; e < i; e++)
                    if (n = r[e].split(":"),
                    n[1])
                        for (var l = n[1].split(","), h = 0; h < l.length; h += 1)
                            s.push(new _(n[0],l[h]));
                    else
                        s.push(new _(n[0]));
                g(o, function() {
                    t(s, a)
                })
            }
            ;
            var lt = "//fonts.googleapis.com/css"
              , ht = {
                latin: "BESbswy",
                "latin-ext": "çöüğş",
                cyrillic: "йяЖ",
                greek: "αβΣ",
                khmer: "កខគ",
                Hanuman: "កខគ"
            }
              , ct = {
                thin: "1",
                extralight: "2",
                "extra-light": "2",
                ultralight: "2",
                "ultra-light": "2",
                light: "3",
                regular: "4",
                book: "4",
                medium: "5",
                "semi-bold": "6",
                semibold: "6",
                "demi-bold": "6",
                demibold: "6",
                bold: "7",
                "extra-bold": "8",
                extrabold: "8",
                "ultra-bold": "8",
                ultrabold: "8",
                black: "9",
                heavy: "9",
                l: "3",
                r: "4",
                b: "7"
            }
              , ut = {
                i: "i",
                italic: "i",
                n: "n",
                normal: "n"
            }
              , pt = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/
              , ft = {
                Arimo: !0,
                Cousine: !0,
                Tinos: !0
            };
            tt.prototype.load = function(t) {
                var e = new d
                  , i = this.c
                  , n = new Z(this.a.api,c(i),this.a.text)
                  , r = this.a.families;
                $(n, r);
                var a = new Q(r);
                J(a),
                p(i, K(n), m(e)),
                g(e, function() {
                    t(a.a, a.c, ft)
                })
            }
            ,
            et.prototype.load = function(t) {
                var e = this.a.id
                  , i = this.c.m;
                e ? f(this.c, (this.a.api || "https://use.typekit.net") + "/" + e + ".js", function(e) {
                    if (e)
                        t([]);
                    else if (i.Typekit && i.Typekit.config && i.Typekit.config.fn) {
                        e = i.Typekit.config.fn;
                        for (var n = [], r = 0; r < e.length; r += 2)
                            for (var a = e[r], o = e[r + 1], s = 0; s < o.length; s++)
                                n.push(new _(a,o[s]));
                        try {
                            i.Typekit.load({
                                events: !1,
                                classes: !1,
                                async: !0
                            })
                        } catch (l) {}
                        t(n)
                    }
                }, 2e3) : t([])
            }
            ,
            it.prototype.load = function(t) {
                var e = this.f.id
                  , i = this.c.m
                  , n = this;
                e ? (i.__webfontfontdeckmodule__ || (i.__webfontfontdeckmodule__ = {}),
                i.__webfontfontdeckmodule__[e] = function(e, i) {
                    for (var r = 0, a = i.fonts.length; r < a; ++r) {
                        var o = i.fonts[r];
                        n.a.push(new _(o.name,T("font-weight:" + o.weight + ";font-style:" + o.style)))
                    }
                    t(n.a)
                }
                ,
                f(this.c, c(this.c) + (this.f.api || "//f.fontdeck.com/s/css/js/") + u(this.c) + "/" + e + ".js", function(e) {
                    e && t([])
                })) : t([])
            }
            ;
            var dt = new G(window);
            dt.a.c.custom = function(t, e) {
                return new Y(e,t)
            }
            ,
            dt.a.c.fontdeck = function(t, e) {
                return new it(e,t)
            }
            ,
            dt.a.c.monotype = function(t, e) {
                return new X(e,t)
            }
            ,
            dt.a.c.typekit = function(t, e) {
                return new et(e,t)
            }
            ,
            dt.a.c.google = function(t, e) {
                return new tt(e,t)
            }
            ;
            var mt = {
                load: n(dt.load, dt)
            };
            "function" == typeof define && define.amd ? define(function() {
                return mt
            }) : "undefined" != typeof e && e.exports ? e.exports = mt : (window.WebFont = mt,
            window.WebFontConfig && dt.load(window.WebFontConfig))
        }()
    }
    , {}],
    42: [function(t, e, i) {
        "use strict";
        var n = document.body.getAttribute("data-page")
          , r = {
            home: t("./pages/Home"),
            entry: t("./pages/Entry"),
            styleguide: t("./pages/Other"),
            helloagain: t("./pages/Other"),
            people: t("./pages/Other"),
            message: t("./pages/Other"),
            culture: t("./pages/Other"),
            recruitinfo: t("./pages/Other")
        };
        new r[n]
    }
    , {
        "./pages/Entry": 73,
        "./pages/Home": 74,
        "./pages/Other": 75
    }],
    43: [function(t, e, i) {
        "use strict";
        function n(t, e, i) {
            if (this.containerName = t,
            this.isWebGL = !0,
            this.isParticle = i,
            !h.webgl)
                return this.isWebGL = !1,
                void a("body").addClass("no-webgl");
            this.particleCount = o.isMobile ? 400 : 1e3,
            this.positions = {
                x: 0,
                y: 0,
                z: 0,
                px: 1,
                py: 1,
                pz: 1,
                sp: .07
            },
            this.lineShape = e,
            this.isDev = !1;
            var n = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.update = n(this.update, this),
            this.onResize = n(this.onResize, this),
            o.isSafari && (this.isDev = !1),
            this.isDev && (r = new l,
            r.showPanel(0),
            document.body.appendChild(r.dom),
            this.gui = new dat.GUI,
            this.gui.add(f, "cameraX", -1e3, 1e3).onChange(this.setValue),
            this.gui.add(f, "cameraY", -1e3, 1e3).onChange(this.setValue),
            this.gui.add(f, "cameraZ", -1e3, 1e3).onChange(this.setValue),
            a(".dg.ac").css({
                "z-index": 30
            })),
            this.animateID,
            this.scene,
            this.camera,
            this.renderer,
            this.container,
            this.rafStop = !0,
            this.setup()
        }
        var r, a = t("jquery"), o = t("../util/ua"), s = t("three"), l = t("../vendor/stats.min.js"), h = t("three/examples/js/Detector.js"), c = t("./Particle.js"), u = t("./Lines.js"), p = function() {
            this.cameraX = 0,
            this.cameraY = 0,
            this.cameraZ = 0
        }, f = new p;
        e.exports = n,
        n.prototype.setValue = function() {}
        ,
        n.prototype.setup = function(t) {
            if (this.container = a(this.containerName)[0],
            this.scene = new s.Scene,
            this.scene.fog = new s.FogExp2(16777215,.0035),
            this.camera = new s.PerspectiveCamera(45,window.innerWidth / window.innerHeight,1,3e3),
            this.camera.position.set(f.cameraX, f.cameraY, f.cameraZ),
            this.camera.up = new s.Vector3(0,0,1),
            this.camera.lookAt(new s.Vector3(0,0,0)),
            this.renderer = new s.WebGLRenderer({
                antialias: !0,
                alpha: !0
            }),
            this.renderer.setPixelRatio(window.devicePixelRatio),
            this.renderer.setSize(this.container.offsetWidth, this.container.offsetHeight),
            this.renderer.gammaInput = !0,
            this.renderer.gammaOutput = !0,
            this.container.appendChild(this.renderer.domElement),
            this.isParticle && (this.particle = new c(this.scene,this.camera,this.particleCount)),
            this.lines = new u(this.scene,this.camera,this.particleCount),
            this.lines.show(),
            this.isDev) {
                var e;
                e = new s.AxisHelper(100),
                this.scene.add(e),
                e.position.set(0, 0, 0)
            }
            this.render(),
            window.addEventListener("resize", this.onResize, !1),
            this.onResize()
        }
        ,
        n.prototype.update = function(t) {
            this.rafStop || (this.isDev && r.begin(),
            this.render(),
            this.isDev && r.end(),
            this.animateID = requestAnimationFrame(this.update))
        }
        ,
        n.prototype.render = function() {
            this.positions.x += (f.cameraX * this.positions.px - this.positions.x) * this.positions.sp,
            this.positions.y += (f.cameraY * this.positions.py - this.positions.y) * this.positions.sp,
            this.positions.z += (f.cameraZ * this.positions.pz - this.positions.z) * this.positions.sp,
            this.camera.position.x = this.positions.x,
            this.camera.position.y = this.positions.y,
            this.camera.position.z = this.positions.z,
            this.isParticle ? this.particle.update(this.lines.update(this.lineShape)) : this.lines.update(this.lineShape),
            this.camera.lookAt(0),
            this.renderer.render(this.scene, this.camera)
        }
        ,
        n.prototype.animatePlay = function() {
            this.isWebGL && (this.rafStop = !1,
            this.animateID = requestAnimationFrame(this.update))
        }
        ,
        n.prototype.animateStop = function() {
            this.isWebGL && (this.rafStop = !0,
            cancelAnimationFrame(this.animateID))
        }
        ,
        n.prototype.eventAttach = function() {}
        ,
        n.prototype.eventDetach = function() {}
        ,
        n.prototype.onResize = function() {
            var t = this.container.offsetWidth
              , e = this.container.offsetHeight;
            this.camera.aspect = t / e,
            this.camera.updateProjectionMatrix(),
            this.renderer.setSize(t, e),
            this.render()
        }
        ,
        n.prototype.changeCamera = function(t, e, i) {
            this.isWebGL && (f.cameraX = t,
            f.cameraY = e,
            f.cameraZ = i)
        }
    }
    , {
        "../util/ua": 76,
        "../vendor/stats.min.js": 78,
        "./Lines.js": 44,
        "./Particle.js": 45,
        jquery: 5,
        three: 39,
        "three/examples/js/Detector.js": 40
    }],
    44: [function(t, e, i) {
        "use strict";
        function n(t, e, i) {
            var n = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.update = n(this.update, this),
            this.world = null,
            this.scene = t,
            this.camera = e,
            this.particleCount = i,
            a = new Float32Array(3 * this.particleCount),
            this.linesList = [],
            this.worldLineDesR2 = 0,
            this.worldLineDeltaR2 = 0,
            this.init()
        }
        function r(t) {
            this.isFirst = !0,
            this.index = t,
            this.body = new s.Line(new s.Geometry,new s.LineBasicMaterial({
                color: 16777215,
                opacity: 1,
                linewidth: 1,
                vertexColors: s.VertexColors
            })),
            this.generate(),
            this.setup(),
            this.crDefX = 4 * Math.random() - 2,
            this.crDefY = 4 * Math.random() - 2,
            this.crDefR = 6 * Math.random();
            var e = Math.floor(2 * Math.random()) ? 1 : -1
              , i = Math.floor(2 * Math.random()) ? 1 : -1;
            this.crDeltaDesX = 4 * Math.random() + 4,
            this.crDeltaDesY = 4 * Math.random() + 4,
            this.crDeltaX = 0,
            this.crDeltaY = 0,
            this.crSpeedX = .15 * e,
            this.crSpeedY = .15 * i,
            this.myWaveH = 0
        }
        var a, o = t("../util/ua"), s = t("three"), l = t("gsap/src/uncompressed/TweenMax.js"), h = (t("gsap/src/uncompressed/plugins/CSSPlugin.js"),
        t("./SceneId.js")), c = {
            num: 25,
            segment: 800,
            resolution: 3,
            delay: .1,
            color: 61696
        }, u = {
            height: 15,
            gutter: 5,
            strength: .08,
            rotation: 10 * Math.PI / 180,
            speed: .02,
            randomDelay: !0
        }, p = {
            height: 40,
            gutter: 10,
            strength: .001,
            rotation: 10 * Math.PI / 180,
            speed: .01,
            randomDelay: !0
        }, f = {
            height: 30,
            gutter: 11,
            strength: .01,
            rotation: 25 * Math.PI / 180,
            speed: .015,
            randomDelay: !1,
            desX: 10,
            desY: 20
        }, d = {
            gutter: 0,
            strength: .2,
            speed: .05
        }, m = 0, g = 0;
        e.exports = n,
        n.prototype.init = function() {
            this.world = new s.Group,
            this.worldLine1 = new s.Group,
            this.worldLine2 = new s.Group,
            this.world.add(this.worldLine1),
            this.world.add(this.worldLine2),
            this.scene.add(this.world);
            for (var t = 0; t < c.num; t++) {
                var e = new r(t);
                this.linesList.push(e),
                t < 10 ? this.worldLine1.add(e.body) : this.worldLine2.add(e.body)
            }
            this.worldLine2.rotation.z = this.worldLineDesR2
        }
        ,
        n.prototype.show = function() {
            var t = {
                waveH: 0,
                desDeltaRatioY: 0
            }
              , e = function() {
                m = t.waveH,
                g = t.desDeltaRatioY
            };
            l.to(t, 1.2, {
                waveH: u.height + 20,
                desDeltaRatioY: 1,
                ease: Power3.easeIn,
                onUpdate: e,
                onComplete: function() {
                    h.isLoading = !1,
                    l.to(t, 2, {
                        waveH: u.height,
                        ease: Power3.easeOut,
                        onUpdate: e
                    })
                }
            })
        }
        ,
        n.prototype.update = function(t) {
            if (this.world) {
                for (var e = 0; e < this.linesList.length; e++) {
                    var i = this.linesList[e];
                    i.update(t)
                }
                return "wave" == t || "circle" == t ? this.worldLineDesR2 = 0 : this.worldLineDesR2 = .8,
                this.worldLineDeltaR2 += .01 * (this.worldLineDesR2 - this.worldLineDeltaR2),
                this.worldLine2.rotation.z = this.worldLineDeltaR2,
                a
            }
        }
        ,
        r.prototype.generate = function() {
            var t = []
              , e = [];
            this.body.geometry.vertices.length = 0;
            for (var i = 0, n = c.segment; i < n; i++)
                t.push(new s.Vector3),
                e[i] = new s.Color(16777215),
                i < n / 2 ? e[i].setHSL(.32 + (.33 - .32) * i / (.5 * n), 1, .36 + (.47 - .36) * i / (.5 * n)) : e[i].setHSL(.32 + (.33 - .32) * (n - i) / (.5 * n), 1, .36 + (.47 - .36) * (n - i) / (.5 * n));
            this.body.geometry.dispose(),
            this.body.geometry = new s.Geometry,
            this.body.geometry.vertices = t,
            this.body.geometry.colors = e
        }
        ,
        r.prototype.setup = function() {
            this.randomWave = Math.random() * Math.PI,
            this.randomWave = Math.floor(100 * this.randomWave) / 100,
            this.delayWave = this.index * c.delay,
            this.randomWave2 = Math.random() * Math.PI
        }
        ,
        r.prototype.update = function(t) {
            "wave" == t ? this.wave() : "waveCross" == t ? this.waveCross() : "waveFuture" == t ? this.waveFuture() : "circle" == t && this.circle(),
            this.body.geometry.verticesNeedUpdate = !0
        }
        ,
        r.prototype.wave = function() {
            this.randomWave += u.speed,
            this.desWaveH = m,
            this.myWaveH += .05 * (this.desWaveH - this.myWaveH);
            for (var t = this.index * u.gutter - (c.num - 1) * u.gutter * .5, e = -c.resolution * c.segment * .5, i = 0, n = this.body.geometry.vertices.length; i < n; i++) {
                var r = Math.sin(this.randomWave + i * u.strength) * Math.cos(this.randomWave + this.randomWave2)
                  , o = this.body.geometry.vertices[i]
                  , s = (this.index - .5 * c.num) * g
                  , l = t
                  , h = r * this.myWaveH - s
                  , p = i * c.resolution + e
                  , f = l - o.z
                  , d = h - o.y
                  , v = p - o.x;
                o.z += .08 * f,
                o.y += .08 * d,
                o.x += .08 * v,
                this.index % 5 == 0 && i > 400 && i <= 600 && (a[this.index / 5 * 200 * 3 + 3 * (i - 401)] = p,
                a[this.index / 5 * 200 * 3 + 3 * (i - 401) + 1] = h,
                a[this.index / 5 * 200 * 3 + 3 * (i - 401) + 2] = l)
            }
            this.body.rotation.z = u.rotation,
            this.body.rotation.x = 0
        }
        ,
        r.prototype.waveCross = function() {
            this.randomWave += p.speed,
            this.desWaveH = p.height,
            this.myWaveH += .01 * (this.desWaveH - this.myWaveH);
            for (var t = this.index * p.gutter - (c.num - 1) * p.gutter * .5, e = -c.resolution * c.segment * .5, i = 0, n = this.body.geometry.vertices.length; i < n; i++) {
                var r = Math.sin(this.randomWave + i * u.strength) * Math.cos(this.randomWave + this.randomWave2)
                  , o = this.body.geometry.vertices[i]
                  , s = (this.index - .5 * c.num) * g
                  , l = t
                  , h = r * this.myWaveH - s
                  , f = i * c.resolution + e
                  , d = l - o.z
                  , m = h - o.y
                  , v = f - o.x;
                o.z += .08 * d,
                o.y += .08 * m,
                o.x += .08 * v,
                this.index % 5 == 0 && i > 400 && i <= 600 && (a[this.index / 5 * 200 * 3 + 3 * (i - 401)] = f,
                a[this.index / 5 * 200 * 3 + 3 * (i - 401) + 1] = h,
                a[this.index / 5 * 200 * 3 + 3 * (i - 401) + 2] = l)
            }
            this.body.rotation.z = p.rotation,
            this.body.rotation.x = 0
        }
        ,
        r.prototype.waveFuture = function() {
            this.delayWave += f.speed,
            this.desWaveH = f.height,
            this.myWaveH += .05 * (this.desWaveH - this.myWaveH);
            for (var t = this.index * f.gutter - (c.num - 1) * f.gutter * .5, e = -c.resolution * c.segment * .55, i = 0, n = this.body.geometry.vertices.length; i < n; i++) {
                var r = Math.sin(this.delayWave + i * f.strength)
                  , o = this.body.geometry.vertices[i]
                  , s = ((this.index - .5 * c.num) * g,
                t + r * this.myWaveH)
                  , l = 0
                  , h = i * c.resolution + e
                  , u = h - o.z
                  , p = l - o.y
                  , d = s - o.x;
                o.z += .08 * u,
                o.y += .08 * p,
                o.x += .08 * d,
                0 == this.index && (a[this.index * n * 3 + 3 * i] = -100 + i / 10,
                a[this.index * n * 3 + 3 * i + 1] = 200 - i % 10 * 10,
                a[this.index * n * 3 + 3 * i + 2] = -100)
            }
            this.body.rotation.z = 0,
            this.body.rotation.x = f.rotation
        }
        ,
        r.prototype.circle = function() {
            this.randomWave += d.speed;
            var t = this.index * d.gutter - (c.num - 1) * d.gutter * .5;
            (this.crDeltaX < -this.crDeltaDesX || this.crDeltaX > this.crDeltaDesX) && (this.crSpeedX *= -1),
            (this.crDeltaY < -this.crDeltaDesY || this.crDeltaY > this.crDeltaDesY) && (this.crSpeedY *= -1),
            this.crDeltaX = this.crDeltaX + this.crSpeedX,
            this.crDeltaY = this.crDeltaY + this.crSpeedY;
            for (var e = 0, i = this.body.geometry.vertices.length; e < i; e++) {
                var n = (Math.sin(this.randomWave + e * d.strength),
                Math.cos(this.randomWave + e * d.strength),
                this.body.geometry.vertices[e])
                  , r = Math.PI / 180
                  , s = 360 / (this.body.geometry.vertices.length - 1) * e * r + this.crDefR
                  , l = t
                  , h = 40 * Math.sin(s) + this.crDefX + this.crDeltaY
                  , u = 40 * Math.cos(s) + this.crDefY + this.crDeltaX
                  , p = l - n.z
                  , f = h - n.y
                  , m = u - n.x;
                if (n.z += .08 * p,
                n.y += .08 * f,
                n.x += .08 * m,
                0 == this.index) {
                    var g = o.isMobile ? e % 4 : e % 10;
                    0 == g ? (a[this.index * i * 3 + 3 * e] = u,
                    a[this.index * i * 3 + 3 * e + 1] = h,
                    a[this.index * i * 3 + 3 * e + 2] = l) : (a[this.index * i * 3 + 3 * e] = u,
                    a[this.index * i * 3 + 3 * e + 1] = h,
                    a[this.index * i * 3 + 3 * e + 2] = 2e3)
                }
            }
            this.body.rotation.z = 0,
            this.body.rotation.x = 0
        }
    }
    , {
        "../util/ua": 76,
        "./SceneId.js": 46,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        three: 39
    }],
    45: [function(t, e, i) {
        "use strict";
        function n(t, e, i) {
            var n = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.update = n(this.update, this),
            this.scene = t,
            this.camera = e,
            this.particleCount = i,
            this.setup()
        }
        var r, a = t("../util/ua"), o = t("three"), s = 3, l = 200;
        e.exports = n,
        n.prototype.setup = function() {
            for (var t = this, e = [], i = 0; i < this.particleCount; i++) {
                var n = .33
                  , a = .5
                  , h = .94;
                e.push(n, a, h)
            }
            var c = new Float32Array(e);
            t.createTexture = function() {
                var t = document.createElement("canvas")
                  , e = t.getContext("2d")
                  , i = null
                  , n = null;
                return t.width = 128,
                t.height = 128,
                i = e.createRadialGradient(64, 64, 0, 64, 64, 64),
                i.addColorStop(0, "rgba(255, 255, 255, 0.15)"),
                i.addColorStop(.9, "rgba(255, 255, 255, 0.15)"),
                i.addColorStop(1, "rgba(255, 255, 255, 0)"),
                e.fillStyle = i,
                e.arc(64, 64, 64, 0, Math.PI / 180, !0),
                e.fill(),
                n = new o.Texture(t),
                n.minFilter = o.NearestFilter,
                n.needsUpdate = !0,
                n
            }
            ,
            this.material = new o.ShaderMaterial({
                uniforms: {
                    time: {
                        type: "f",
                        value: 0
                    },
                    size: {
                        type: "f",
                        value: 32
                    },
                    texture: {
                        type: "t",
                        value: t.createTexture()
                    }
                },
                vertexShader: document.getElementById("vshader").textContent,
                fragmentShader: document.getElementById("fshader").textContent,
                transparent: !0,
                depthWrite: !1,
                blending: o.NormalBlending
            });
            var u = new o.Group;
            this.scene.add(u);
            for (var p = (new o.PointsMaterial({
                color: 258307,
                size: 10,
                blending: o.AdditiveBlending,
                transparent: !0,
                sizeAttenuation: !0
            }),
            new Float32Array(3 * this.particleCount)), f = [], i = 0; i < this.particleCount; i++)
                p[3 * i] = Math.random() * l - l / 2,
                p[3 * i + 1] = .01 * (Math.random() * l - l / 2),
                p[3 * i + 2] = Math.random() * l - l / 1.5,
                f[i] = new o.Vector3,
                f[i].x = -1 + 2 * Math.random(),
                f[i].y = -.5 + 1 * Math.random(),
                f[i].z = 1 * Math.random(),
                f[i].multiplyScalar(s / Math.sqrt(3));
            var d = new Float32Array(this.particleCount)
              , m = new o.BufferGeometry;
            m.addAttribute("position", new o.BufferAttribute(p,3).setDynamic(!0)),
            m.addAttribute("color", new o.BufferAttribute(c,3)),
            m.addAttribute("lifetime", new o.BufferAttribute(d,1).setDynamic(!0)),
            m.setDrawRange(0, this.particleCount),
            r = new o.Points(m,this.material),
            u.add(r),
            r.particlesVelocity = f
        }
        ,
        n.prototype.update = function(t) {
            for (var e = r.geometry.attributes.position.array, i = r.particlesVelocity, n = r.geometry.attributes.lifetime.array, o = 0; o < this.particleCount; o++) {
                e[3 * o] += i[o].x,
                e[3 * o + 1] += i[o].y,
                e[3 * o + 2] += i[o].z;
                n[o] += 1,
                n[o] > 500 && (e[3 * o] = t[3 * o],
                e[3 * o + 1] = t[3 * o + 1],
                e[3 * o + 2] = t[3 * o + 2],
                n[o] = 0)
            }
            a.isMobile || (r.material.uniforms.size.value = 32 * (1 - n[0] / 500)),
            r.geometry.attributes.position.needsUpdate = !0
        }
    }
    , {
        "../util/ua": 76,
        three: 39
    }],
    46: [function(t, e, i) {
        e.exports = {
            current: -1,
            old: -1,
            max: 5,
            isChange: !1,
            isLoading: !0
        }
    }
    , {}],
    47: [function(t, e, i) {
        "use strict";
        function n() {
            this.canvasBg = new a(".JobLinkSection .canvasBlock","circle",(!1))
        }
        var r = t("jquery")
          , a = t("./CanvasBg")
          , o = t("gsap/src/uncompressed/TweenMax.js");
        t("gsap/src/uncompressed/plugins/CSSPlugin.js");
        e.exports = n,
        n.prototype.setup = function() {
            this.start()
        }
        ,
        n.prototype.start = function() {
            o.to(r(".JobLinkSection .canvasBlock"), 1, {
                opacity: .7,
                ease: Power2.easeIn,
                delay: .5
            }),
            this.canvasBg.animatePlay(),
            this.canvasBg.changeCamera(0, 0, 120)
        }
    }
    , {
        "./CanvasBg": 43,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        jquery: 5
    }],
    48: [function(t, e, i) {
        "use strict";
        function n() {
            this.canvasBg = new r(".CategoryHeader-canvas .canvasBlock","wave",(!1))
        }
        var r = t("./CanvasBg");
        e.exports = n,
        n.prototype.setup = function() {
            this.start()
        }
        ,
        n.prototype.start = function() {
            this.canvasBg.animatePlay(),
            this.canvasBg.changeCamera(0, 0, 200)
        }
    }
    , {
        "./CanvasBg": 43
    }],
    49: [function(t, e, i) {
        "use strict";
        function n() {
            this.videoId = "js-video-home",
            this.setup()
        }
        var r = t("jquery")
          , a = t("../util/ua.js");
        e.exports = n,
        n.prototype.setup = function() {
            a.isIE && r(".HomeScene-overlay-blur > video").remove(),
            a.isMobile && (r(".HomeScene-visual > video").remove(),
            r(".HomeScene-overlay-blur > video").remove())
        }
        ,
        n.prototype.eventAttach = function() {}
        ,
        n.prototype.eventDetach = function() {}
        ,
        n.prototype.play = function() {
            var t = document.getElementById(this.videoId);
            t && t.play()
        }
        ,
        n.prototype.stop = function() {
            var t = document.getElementById(this.videoId);
            t && t.pause()
        }
    }
    , {
        "../util/ua.js": 76,
        jquery: 5
    }],
    50: [function(t, e, i) {
        "use strict";
        function n(t, e) {
            var i = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.handle = i(this.handle, this),
            this.eventPrev = t,
            this.eventNext = e,
            this.keydownHandle = this.handle
        }
        e.exports = n,
        n.prototype.handle = function(t) {
            switch (t.keyCode) {
            case 37:
            case 38:
                this.eventPrev();
                break;
            case 39:
            case 40:
                this.eventNext()
            }
        }
        ,
        n.prototype.add = function() {
            var t = this;
            document.addEventListener("keydown", t.keydownHandle, !1)
        }
        ,
        n.prototype.remove = function() {
            var t = this;
            document.removeEventListener("keydown", t.keydownHandle, !1)
        }
    }
    , {}],
    51: [function(t, e, i) {
        "use strict";
        function n(t) {
            var e = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.loop = e(this.loop, this),
            this.render = e(this.render, this),
            this.handle = o(this.render, 33),
            this.homeBg = t,
            this.init()
        }
        var r = t("jquery")
          , a = t("../util/ua.js")
          , o = t("lodash/throttle")
          , s = (t("gsap/src/uncompressed/TweenMax.js"),
        t("gsap/src/uncompressed/plugins/CSSPlugin.js"),
        t("../canvas3d/SceneId.js"))
          , l = t("./EventMousemovePosition.js");
        e.exports = n,
        n.prototype.init = function() {
            this.mm = new l(r("body")),
            this.$visuals = [r("#scene3 .HomeScene-visual"), r("#scene4 .HomeScene-visual")],
            this.$overlays = [r("#scene3 .HomeScene-overlay"), r("#scene4 .HomeScene-overlay")],
            this.$bgImg1 = r(".bgImg1 .HomeBg-bgImg-inner"),
            this.$bgImg2 = r(".bgImg2 .HomeBg-bgImg-inner"),
            this.positions = [{
                x: 0,
                y: 0,
                px: 10.8,
                py: 10.6,
                sp: .1
            }],
            this.mm.update = function() {}
            ,
            this.loop()
        }
        ,
        n.prototype.loop = function() {
            var t = this;
            requestAnimationFrame(t.loop),
            t.handle()
        }
        ,
        n.prototype.render = function() {
            var t = this.mm.position
              , e = this.positions[0];
            switch (e.x += (t.rx * e.px - e.x) * e.sp,
            e.y += (t.ry * e.py - e.y) * e.sp,
            s.current) {
            case 0:
                if (s.isLoading)
                    return;
                this.homeBg.changeCamera(8 * e.x, 4 * e.y, 200);
                break;
            case 1:
                this.homeBg.changeCamera(0, 0, 220 - Math.abs(10 * e.x) - Math.abs(5 * e.y));
                break;
            case 2:
            case 3:
                var i = 2 == s.current ? 0 : 1;
                a.isMobile ? (TweenLite.set(this.$visuals[i], {
                    x: 5 * e.x,
                    y: 5 * e.y,
                    z: 0,
                    rotationX: 1 * e.y,
                    rotationY: 2 * e.x
                }),
                TweenLite.set(this.$overlays[i], {
                    x: 10 * e.x,
                    y: 10 * e.y,
                    z: 0,
                    rotationX: 1 * e.y,
                    rotationY: 2 * e.x
                })) : (TweenLite.set(this.$visuals[i], {
                    x: 10 * e.x,
                    y: 4 * e.y,
                    z: 0,
                    rotationX: .5 * e.y,
                    rotationY: 1 * e.x
                }),
                TweenLite.set(this.$overlays[i], {
                    x: 20 * e.x,
                    y: 8 * e.y,
                    z: 0,
                    rotationX: .5 * e.y,
                    rotationY: 1 * e.x
                }));
                break;
            case 4:
                this.homeBg.changeCamera(7 * e.x, 4 * e.y, 200);
                break;
            case 5:
                this.homeBg.changeCamera(8 * e.x, 4 * e.y, 200),
                TweenLite.set(this.$bgImg1, {
                    x: 10 * -e.x,
                    y: -50 + e.y + "%"
                }),
                TweenLite.set(this.$bgImg2, {
                    x: 20 * -e.x,
                    y: -50 + 2 * e.y + "%"
                })
            }
        }
    }
    , {
        "../canvas3d/SceneId.js": 46,
        "../util/ua.js": 76,
        "./EventMousemovePosition.js": 52,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        jquery: 5,
        "lodash/throttle": 37
    }],
    52: [function(t, e, i) {
        "use strict";
        function n(t, e) {
            var i = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this._mousemoveHandle = i(this._mousemoveHandle, this),
            this._orientationchangeHandle = i(this._orientationchangeHandle, this),
            this._deviceorientationHandle = i(this._deviceorientationHandle, this),
            this.mousemoveHandle = this._mousemoveHandle,
            this.orientationchangeHandle = this._orientationchangeHandle,
            this.deviceorientationHandle = this._deviceorientationHandle,
            this.config = {
                moveOffset: {
                    x: 1,
                    y: 1
                }
            },
            this.position = {
                x: 0,
                y: 0,
                cx: 0,
                cy: 0,
                rx: 0,
                ry: 0
            },
            this.vx = .02,
            this.vy = .02,
            this.isLandscape = !1,
            this.orienRotion = 0,
            this.$target = t,
            this.update = function() {}
            ,
            this.init()
        }
        var r = (t("jquery"),
        t("../util/ua.js"));
        e.exports = n,
        n.prototype.init = function() {
            this.add()
        }
        ,
        n.prototype._mousemoveHandle = function(t) {
            var e = this
              , i = this.$target.offset();
            e.position.x = t.clientX - i.left,
            e.position.y = t.clientY - i.top,
            e.position.cx = (t.clientX - i.left - .5 * this.$target.outerWidth()) * e.config.moveOffset.x,
            e.position.cy = (t.clientY - i.top - .5 * this.$target.outerHeight()) * e.config.moveOffset.y,
            e.position.rx = (e.position.x - .5 * this.$target.outerWidth()) / this.$target.outerWidth(),
            e.position.ry = -(e.position.y - .5 * this.$target.outerHeight()) / this.$target.outerHeight(),
            e.update()
        }
        ,
        n.prototype._orientationchangeHandle = function(t) {
            this.orienRotion = window.orientation,
            0 == window.orientation ? this.isLandscape = !1 : this.isLandscape = !0
        }
        ,
        n.prototype._deviceorientationHandle = function(t) {
            var e = this
              , i = t.beta
              , n = t.gamma;
            this.isLandscape && (i = t.gamma,
            n = t.beta * (orientation > 0 ? 1 : -1)),
            180 == this.orienRotion && (i = t.beta * -1,
            n = t.gamma * -1),
            i > 90 && (i = 90,
            n *= -1),
            i < -90 && (i = -90),
            e.position.cx = -n / 90,
            e.position.cy = -i / 90,
            e.position.rx = -n / 90,
            e.position.ry = -i / 90,
            r.isMobile && (e.position.cy = e.position.ry = 0),
            e.update()
        }
        ,
        n.prototype.add = function() {
            var t = this;
            r.isMobile ? Modernizr.deviceorientation && (window.addEventListener("orientationchange", t.orientationchangeHandle, !1),
            this.trigger(window, "orientationchange"),
            window.addEventListener("deviceorientation", t.deviceorientationHandle, !1)) : document.addEventListener("mousemove", t.mousemoveHandle, !1)
        }
        ,
        n.prototype.remove = function() {
            var t = this;
            r.isMobile ? Modernizr.deviceorientation && (window.removeEventListener("orientationchange", t.orientationchangeHandle, !1),
            window.removeEventListener("deviceorientation", t.deviceorientationHandle, !1)) : document.removeEventListener("mousemove", t.mousemoveHandle, !1)
        }
        ,
        n.prototype.trigger = function(t, e, i) {
            var n;
            window.CustomEvent ? n = new CustomEvent(e,i) : (n = document.createEvent("CustomEvent"),
            n.initCustomEvent(e, !0, !0, i)),
            t.dispatchEvent(n)
        }
    }
    , {
        "../util/ua.js": 76,
        jquery: 5
    }],
    53: [function(t, e, i) {
        "use strict";
        function n(t, e) {
            if (window.TouchEvent) {
                var i = function(t, e) {
                    return function() {
                        return t.apply(e, arguments)
                    }
                };
                this.handle = i(this.handle, this),
                this.eventPrev = t,
                this.eventNext = e,
                this.touchHandle = this.handle,
                this.touchMoveOffset = 0,
                this.touchStartPos = {},
                this.touchMovePos = {}
            }
        }
        var r = t("jquery");
        e.exports = n,
        n.prototype.handle = function(t) {
            var e = function(t) {
                var e, i = {
                    x: 0,
                    y: 0
                };
                return "ontouchstart"in window ? (e = null !== t.touches ? t.touches[0] : t.originalEvent.touches[0],
                e && (i.x = e.clientX,
                i.y = e.clientY)) : (i.x = t.clientX,
                i.y = t.clientY),
                i
            }
              , i = function(t) {
                var i = {
                    x: 0,
                    y: 0,
                    time: (new Date).getTime()
                };
                return r.extend(i, e(t)),
                i
            };
            switch (t.type) {
            case "touchstart":
                this.touchMoveOffset = 0,
                this.touchStartPos = i(t),
                this.touchMovePos = i(t);
                break;
            case "touchmove":
                t.preventDefault(),
                this.touchMovePos = i(t);
                var n = this.touchMovePos.y - this.touchStartPos.y
                  , a = this.touchMovePos.x - this.touchStartPos.x;
                this.touchMoveOffset = Math.abs(a) > Math.abs(n) ? a : n;
                break;
            case "touchend":
                this.touchMoveOffset > 0 && this.eventPrev(),
                this.touchMoveOffset < 0 && this.eventNext()
            }
        }
        ,
        n.prototype.add = function() {
            if (window.TouchEvent) {
                var t = this;
                document.addEventListener("touchstart", t.touchHandle, !1),
                document.addEventListener("touchmove", t.touchHandle, !1),
                document.addEventListener("touchend", t.touchHandle, !1)
            }
        }
        ,
        n.prototype.remove = function() {
            if (window.TouchEvent) {
                var t = this;
                document.removeEventListener("touchstart", t.touchHandle, !1),
                document.removeEventListener("touchmove", t.touchHandle, !1),
                document.removeEventListener("touchend", t.touchHandle, !1)
            }
        }
    }
    , {
        jquery: 5
    }],
    54: [function(t, e, i) {
        "use strict";
        function n(t, e) {
            var i = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.handle = i(this.handle, this),
            this.eventPrev = t,
            this.eventNext = e,
            this.wheelHandle = this.handle()
        }
        var r = t("../util/ua.js")
          , a = t("../canvas3d/SceneId.js");
        e.exports = n,
        n.prototype.handle = function(t) {
            var e, i, n, o = this, s = !1, l = 250, h = function() {};
            h.delta = 0,
            h.timeStamp = 0;
            var c = function(t) {
                if (0 != t) {
                    a.current;
                    t < 0 ? o.eventPrev() : o.eventNext()
                }
            };
            return function(t) {
                t.preventDefault(),
                e = t.deltaY,
                e && (r.isWin ? (n = t.timeStamp,
                n - h.timeStamp > l && c(e),
                h.timeStamp = n) : (i = Math.abs(e),
                i - h.delta > 0 ? (n = t.timeStamp,
                !s && n - h.timeStamp > l && (s = !0,
                c(e)),
                h.timeStamp = n) : s = !1,
                h.delta = i))
            }
        }
        ,
        n.prototype.add = function() {
            var t = this;
            document.addEventListener("wheel", t.wheelHandle, !1)
        }
        ,
        n.prototype.remove = function() {
            var t = this;
            document.removeEventListener("wheel", t.wheelHandle, !1)
        }
    }
    , {
        "../canvas3d/SceneId.js": 46,
        "../util/ua.js": 76
    }],
    55: [function(t, e, i) {
        "use strict";
        function n() {
            var t = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.throttled = t(this.throttled, this),
            this.resizeHandle = o(this.throttled, 33),
            this.setup()
        }
        var r = t("jquery")
          , a = t("../util/ua")
          , o = t("lodash/throttle");
        e.exports = n,
        n.prototype.setup = function() {
            r(".HomeNews-ticker-item").eq(0).clone().addClass("latest").appendTo(r(".HomeNews-ticker")),
            this.throttled(),
            this.eventAttach()
        }
        ,
        n.prototype.eventAttach = function() {
            var t = this;
            this.isClose = !0,
            r(".HomeNews-btnToggle").on("click", function(e) {
                t.isClose = !t.isClose,
                t.toggle(t.isClose)
            }).on("mouseover", function(t) {
                a.isMobile || r(this).addClass("over")
            }).on("mouseout", function(t) {
                a.isMobile || r(this).removeClass("over")
            }).on("touchstart", function(t) {
                a.isMobile && r(this).addClass("over")
            }).on("touchend", function(t) {
                a.isMobile && r(this).removeClass("over")
            }).on("touchmove", function(t) {
                a.isMobile && !a.isIOS && r(this).removeClass("over")
            }),
            this.resizeAddEvent()
        }
        ,
        n.prototype.eventDetach = function() {
            r(".HomeNews-btnToggle").off(),
            this.resizeRemoveEvent()
        }
        ,
        n.prototype.resizeAddEvent = function() {
            var t = this;
            try {
                window.addEventListener("resize", t.resizeHandle, !1)
            } catch (e) {
                window.attachEvent("onresizel", t.resizeHandle)
            }
        }
        ,
        n.prototype.resizeRemoveEvent = function() {
            var t = this;
            try {
                window.removeEventListener("resize", t.resizeHandle, !1)
            } catch (e) {
                window.detachEvent("onresizel", t.resizeHandle)
            }
        }
        ,
        n.prototype.throttled = function() {
            this.toggle(!0)
        }
        ,
        n.prototype.toggle = function(t) {
            if (this.isClose = t,
            this.isClose)
                r(".HomeNews").addClass("close"),
                r(".HomeNews-inner").css({
                    height: ""
                });
            else {
                var e = r(".HomeNews-ticker-list").outerHeight(!0);
                r(".HomeNews").removeClass("close"),
                r(".HomeNews-inner").css({
                    height: e + "px"
                })
            }
        }
    }
    , {
        "../util/ua": 76,
        jquery: 5,
        "lodash/throttle": 37
    }],
    56: [function(t, e, i) {
        "use strict";
        function n(t, e) {
            null == t && (t = function() {}
            ),
            null == e && (e = function() {}
            ),
            this.onLoad = t,
            this.onReady = e,
            this.fontInfo = {
                fontFamilies: ["FF Din:n4,n7,n9"],
                fontMax: 3,
                fontUrls: [document.getElementById("fontSetting").href]
            }
        }
        var r = t("jquery")
          , a = t("./LoadingManager.js")
          , o = t("gsap/src/uncompressed/TweenMax.js");
        t("gsap/src/uncompressed/plugins/CSSPlugin.js");
        e.exports = n,
        n.prototype.init = function() {
            var t = this
              , e = "body"
              , i = new a;
            i.init(e, t.fontInfo, function(t) {
                r(".HomeLoading-line-inner").css({
                    width: 100 * t + "%"
                });
                var e = 99 * (1 - t)
                  , i = Math.floor(e) + 1;
                r(".HomeLoading-text").text(i)
            }, function() {
                t.onLoad(),
                t.hide()
            })
        }
        ,
        n.prototype.hide = function() {
            var t = this;
            o.to(r(".HomeLoading-line-inner"), 1, {
                css: {
                    height: 0,
                    marginTop: 0
                },
                ease: Power0.easeNone
            }),
            o.to(r(".HomeLoading-text"), 1, {
                scale: 4,
                ease: Power2.easeIn
            }),
            o.to(r(".HomeLoading"), 1, {
                alpha: 0,
                ease: Power3.easeInOut,
                onComplete: function() {
                    t.onReady(),
                    r(".HomeLoading").remove()
                }
            })
        }
    }
    , {
        "./LoadingManager.js": 57,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        jquery: 5
    }],
    57: [function(t, e, i) {
        "use strict";
        function n() {
            var t = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this._update = t(this._update, this),
            this.$contents = null,
            this.count = 0,
            this.countMax = 0,
            this.loaded = 0,
            this.progress = 0,
            this.onProgress = null,
            this.onComplete = null,
            this.useCount = 0,
            this.fontInfo = {
                fontFamilies: null,
                fontMax: 0,
                fontUrls: null
            }
        }
        var r = t("jquery")
          , a = t("../loaders/loadWebfonts");
        e.exports = n,
        n.prototype.init = function(t, e, i, n) {
            if (null == i && (i = function() {}
            ),
            null == n && (n = function() {}
            ),
            !this.contents)
                return r.extend(this.fontInfo, e),
                this.onProgress = i,
                this.onComplete = n,
                this.$contents = r(t),
                this._loaderStart()
        }
        ,
        n.prototype._loaderStart = function() {
            var t = this
              , e = ".loading_" + this.useCount++
              , i = this.$contents.find("img");
            this.countMax = i.length + this.fontInfo.fontMax;
            var n = function() {
                t.count++
            }
              , o = function(t) {
                var i;
                return t.complete || 4 === t.readyState || "uninitialized" === t.readyState && 0 === t.src.indexOf("data:") ? n() : (i = r(t),
                r("<img>").one("load" + e + " error" + e, function() {
                    return n()
                }).attr("src", i.attr("src")))
            };
            return i.each(function() {
                return o(this)
            }),
            this.fontInfo.fontMax > 0 && a(t.fontInfo.fontFamilies, t.fontInfo.fontUrls, n),
            this._update()
        }
        ,
        n.prototype._update = function() {
            return this.loaded = this.count / this.countMax,
            this.progress += .1 * (this.loaded - this.progress),
            this.onProgress(this.progress),
            1 === this.loaded && this.progress > .9999 ? (this.progress = 1,
            this.onProgress(this.progress),
            this._end()) : requestAnimationFrame(this._update)
        }
        ,
        n.prototype._end = function() {
            return this.onComplete(),
            this.onProgress = null,
            this.onComplete = null
        }
    }
    , {
        "../loaders/loadWebfonts": 67,
        jquery: 5
    }],
    58: [function(t, e, i) {
        "use strict";
        function n(t) {
            this.isFirst = !0,
            this.homeBg = t,
            this.$scene = r("#scene1"),
            this.utils = new a(this.$scene,1),
            this.splitTexts = ["#js-scene1-titleSub", "#js-scene1-title", "#js-scene1-copy"],
            this.config = {
                headlines: this.splitTexts,
                charaOrigin: "50% -150%"
            },
            this.utils.contSetup(this.config)
        }
        var r = t("jquery")
          , a = t("./SceneUtils.js");
        e.exports = n,
        n.prototype.show = function() {
            this.homeBg.changeCamera(0, 0, 200),
            this.utils.contShow(!0, this.isFirst),
            this.isFirst = !1
        }
        ,
        n.prototype.hide = function() {
            this.utils.contHide(!0)
        }
    }
    , {
        "./SceneUtils.js": 66,
        jquery: 5
    }],
    59: [function(t, e, i) {
        "use strict";
        function n(t) {
            this.homeBg = t,
            this.$scene = r("#scene2"),
            this.$description = r("#scene2 .description"),
            this.$bgText1 = r(".HomeBg-bgText-scene2-t1"),
            this.$bgText2 = r(".HomeBg-bgText-scene2-t2"),
            this.utils = new a(this.$scene,2),
            this.splitTexts = ["#js-scene2-title"],
            this.contents = [this.$description],
            this.bgText = [this.$bgText1, this.$bgText2],
            this.config = {
                headlines: this.splitTexts,
                charaOrigin: "50% -400%",
                contents: this.contents,
                bgText: this.bgText
            },
            this.utils.contSetup(this.config)
        }
        var r = t("jquery")
          , a = t("./SceneUtils.js");
        e.exports = n,
        n.prototype.show = function() {
            this.homeBg.changeCamera(0, 0, 200),
            this.utils.contShow(!0, !1)
        }
        ,
        n.prototype.hide = function() {
            this.utils.contHide(!0)
        }
    }
    , {
        "./SceneUtils.js": 66,
        jquery: 5
    }],
    60: [function(t, e, i) {
        "use strict";
        function n(t) {
            this.homeBg = t,
            this.$scene = r("#scene3"),
            this.$description = r("#scene3 .description"),
            this.$btnMore = r("#scene3 .readMoreLink"),
            this.$overlay = r("#scene3 .HomeScene-overlay-inner"),
            this.$visual = r("#scene3 .HomeScene-visual-inner"),
            this.utils = new a(this.$scene,2),
            this.splitTexts = ["#js-scene3-titleSub", "#js-scene3-title"],
            this.contents = [this.$description, this.$btnMore],
            this.visuals = [this.$overlay, this.$visual],
            this.config = {
                headlines: this.splitTexts,
                charaOrigin: "50% -200%",
                contents: this.contents,
                visuals: this.visuals
            },
            this.utils.contSetup(this.config),
            o.isMobile ? r("#scene3 .HomeScene-visual-inner-cont").find("video").remove() : r("#scene3 .HomeScene-visual-inner-cont").find("img").remove()
        }
        var r = t("jquery")
          , a = t("./SceneUtils.js")
          , o = t("../util/ua.js");
        e.exports = n,
        n.prototype.show = function() {
            this.homeBg.changeCamera(0, 0, 200),
            this.utils.contShow(!0, !1)
        }
        ,
        n.prototype.hide = function() {
            this.utils.contHide(!0)
        }
    }
    , {
        "../util/ua.js": 76,
        "./SceneUtils.js": 66,
        jquery: 5
    }],
    61: [function(t, e, i) {
        "use strict";
        function n(t) {
            this.homeBg = t,
            this.$scene = r("#scene4"),
            this.$description = r("#scene4 .description"),
            this.$btnMore = r("#scene4 .readMoreLinkBlock"),
            this.$overlay = r("#scene4 .HomeScene-overlay-inner"),
            this.$visual = r("#scene4 .HomeScene-visual-inner"),
            this.utils = new a(this.$scene,2),
            this.splitTexts = ["#js-scene4-titleSub", "#js-scene4-title"],
            this.contents = [this.$description, this.$btnMore],
            this.visuals = [this.$overlay, this.$visual],
            this.config = {
                headlines: this.splitTexts,
                charaOrigin: "50% -250%",
                contents: this.contents,
                visuals: this.visuals
            },
            this.utils.contSetup(this.config)
        }
        var r = t("jquery")
          , a = t("./SceneUtils.js");
        e.exports = n,
        n.prototype.show = function() {
            this.homeBg.changeCamera(0, 0, 200),
            this.utils.contShow(!0, !1),
            this.slideStart()
        }
        ,
        n.prototype.hide = function() {
            this.utils.contHide(!0),
            this.slideStop()
        }
        ,
        n.prototype.slideStart = function() {
            var t = this
              , e = 0
              , i = 2
              , n = 3
              , a = r("#scene4 .HomeScene-visual-inner-cont img").eq(0)
              , o = r("#scene4 .HomeScene-visual-inner-cont img").eq(1)
              , s = r("#scene4 .HomeScene-visual-inner-cont img").eq(2)
              , l = [a, o, s]
              , h = {
                timer: 0
            }
              , c = function() {
                t.twSlide ? t.twSlide.play(0) : t.twSlide = TweenMax.fromTo(h, 5, {
                    timer: 0
                }, {
                    timer: 1,
                    ease: Power0.easeNone,
                    onComplete: function() {
                        i = e,
                        e < n - 1 ? e++ : e = 0;
                        var t = l[e]
                          , r = l[i];
                        t.addClass("isShow"),
                        r.removeClass("isShow"),
                        c()
                    }
                })
            };
            c()
        }
        ,
        n.prototype.slideStop = function() {
            var t = this;
            t.twSlide && t.twSlide.pause()
        }
    }
    , {
        "./SceneUtils.js": 66,
        jquery: 5
    }],
    62: [function(t, e, i) {
        "use strict";
        function n(t) {
            this.homeBg = t,
            this.$scene = r("#scene5"),
            this.$description = r("#scene5 .description"),
            this.$btnMore = r("#scene5 .readMoreLinkBlock"),
            this.$bgText1 = r(".HomeBg-bgText-scene5-t1"),
            this.$bgText2 = r(".HomeBg-bgText-scene5-t2"),
            this.utils = new a(this.$scene,5),
            this.splitTexts = ["#js-scene5-titleSub", "#js-scene5-title"],
            this.contents = [this.$description, this.$btnMore],
            this.bgText = [this.$bgText1, this.$bgText2],
            this.config = {
                headlines: this.splitTexts,
                charaOrigin: "50% -250%",
                contents: this.contents,
                bgText: this.bgText
            },
            this.utils.contSetup(this.config)
        }
        var r = t("jquery")
          , a = t("./SceneUtils.js");
        e.exports = n,
        n.prototype.show = function() {
            this.homeBg.changeCamera(0, 0, 200),
            this.utils.contShow(!0, !1)
        }
        ,
        n.prototype.hide = function() {
            this.utils.contHide(!0)
        }
    }
    , {
        "./SceneUtils.js": 66,
        jquery: 5
    }],
    63: [function(t, e, i) {
        "use strict";
        function n(t) {
            this.homeBg = t,
            this.$scene = r("#scene6"),
            this.$description = r("#scene6 .description"),
            this.$btnMore = r("#scene6 .readMoreLinkBlock"),
            this.utils = new a(this.$scene,6),
            this.splitTexts = ["#js-scene6-titleSub", "#js-scene6-title"],
            this.contents = [this.$description, this.$btnMore],
            this.config = {
                headlines: this.splitTexts,
                charaOrigin: "50% -200%",
                contents: this.contents
            },
            r(window).resize(this.resize),
            this.resize(),
            this.utils.contSetup(this.config)
        }
        var r = t("jquery")
          , a = t("./SceneUtils.js");
        e.exports = n,
        n.prototype.show = function() {
            this.homeBg.changeCamera(0, 0, 200),
            this.utils.contShow(!0, !1),
            r(".HomeBg-bgImg").addClass("loop"),
            TweenMax.to(r(".HomeBg-bgImg"), .5, {
                autoAlpha: 1,
                ease: Power0.easeNone
            })
        }
        ,
        n.prototype.hide = function() {
            this.utils.contHide(!0),
            TweenMax.to(r(".HomeBg-bgImg"), .5, {
                autoAlpha: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    r(".HomeBg-bgImg").removeClass("loop")
                }
            })
        }
        ,
        n.prototype.resize = function() {
            var t = r(window).innerWidth()
              , e = r(window).innerHeight();
            e = Math.max(t / 3.5, e),
            r(".HomeBg-bgImg-inner").css({
                width: 3.5 * e + "px",
                height: e + "px"
            })
        }
    }
    , {
        "./SceneUtils.js": 66,
        jquery: 5
    }],
    64: [function(t, e, i) {
        "use strict";
        function n() {
            var t = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.prev = t(this.prev, this),
            this.next = t(this.next, this),
            this.skip = t(this.skip, this),
            this.homeBg = new s(".HomeBg","wave",(!0)),
            this.homeNews = new o,
            this.eventWheel = new h(this.prev,this.next),
            this.eventKeydown = new c(this.prev,this.next),
            this.eventTouch = new u(this.prev,this.next),
            this.eventMousemove = new p(this.homeBg),
            this.sceneNav = new f(this.skip,this.next),
            this.bgVideo = new d,
            this.scene1 = new m(this.homeBg),
            this.scene2 = new g(this.homeBg),
            this.scene3 = new v(this.homeBg),
            this.scene4 = new y(this.homeBg),
            this.scene5 = new _(this.homeBg),
            this.scene6 = new x(this.homeBg)
        }
        var r = t("jquery")
          , a = (t("../util/ua"),
        t("gsap/src/uncompressed/TweenMax.js"))
          , o = (t("gsap/src/uncompressed/plugins/CSSPlugin.js"),
        t("./HomeNews"))
          , s = t("../canvas3d/CanvasBg")
          , l = t("../canvas3d/SceneId.js")
          , h = t("./EventWheel.js")
          , c = t("./EventKeydown.js")
          , u = t("./EventTouch.js")
          , p = t("./EventMousemove.js")
          , f = t("./SceneNav.js")
          , d = t("./BgVideo.js")
          , m = t("./Scene1.js")
          , g = t("./Scene2.js")
          , v = t("./Scene3.js")
          , y = t("./Scene4.js")
          , _ = t("./Scene5.js")
          , x = t("./Scene6.js");
        e.exports = n,
        n.prototype.setup = function() {
            this.start(),
            this.eventAttach(),
            this.skip(0),
            this.navShow()
        }
        ,
        n.prototype.eventAttach = function() {
            this.eventWheel.add(),
            this.eventKeydown.add(),
            this.eventTouch.add()
        }
        ,
        n.prototype.navShow = function() {
            a.fromTo(r(".HomeNews"), 1, {
                autoAlpha: 0
            }, {
                autoAlpha: 1,
                ease: Power3.easeOut,
                delay: 1.2,
                onComplete: function() {
                    l.isChange = !1
                }
            })
        }
        ,
        n.prototype.eventDetach = function() {
            this.eventWheel.remove(),
            this.eventKeydown.remove(),
            this.eventTouch.remove(),
            this.sceneNav.eventDetach(),
            r(".Home-btnScroll").off()
        }
        ,
        n.prototype.start = function() {
            this.homeBg.animatePlay()
        }
        ,
        n.prototype.stop = function() {
            this.homeBg.animateStop()
        }
        ,
        n.prototype.prev = function() {
            if (!(l.current <= 0)) {
                var t = l.current - 1;
                this.skip(t)
            }
        }
        ,
        n.prototype.next = function() {
            if (!(l.current >= l.max)) {
                var t = l.current + 1;
                this.skip(t)
            }
        }
        ,
        n.prototype.skip = function(t) {
            if (l.current != t && !l.isChange) {
                switch (l.isChange = !0,
                l.old = l.current,
                l.current = t,
                r(".HomeNav-list-item").eq(l.old).removeClass("active"),
                r(".HomeNav-list-item").eq(l.current).addClass("active"),
                l.current) {
                case 0:
                    this.scene1.show(),
                    this.homeBg.lineShape = "wave",
                    this.sceneNav.btnScrollHide("scroll");
                    break;
                case 1:
                    this.scene2.show(),
                    this.homeBg.lineShape = "circle",
                    this.sceneNav.btnScrollHide("scroll");
                    break;
                case 2:
                    this.scene3.show(),
                    this.homeBg.lineShape = "waveCross",
                    this.bgVideo.play(),
                    this.sceneNav.btnScrollHide("scroll");
                    break;
                case 3:
                    this.scene4.show(),
                    this.homeBg.lineShape = "waveCross",
                    this.sceneNav.btnScrollHide("scroll");
                    break;
                case 4:
                    this.scene5.show(),
                    this.homeBg.lineShape = "waveFuture",
                    this.sceneNav.btnScrollHide("scroll");
                    break;
                case 5:
                    this.scene6.show(),
                    this.homeBg.lineShape = "wave",
                    this.sceneNav.btnScrollHide("top")
                }
                switch (l.old) {
                case 0:
                    this.scene1.hide();
                    break;
                case 1:
                    this.scene2.hide();
                    break;
                case 2:
                    this.scene3.hide(),
                    this.bgVideo.stop();
                    break;
                case 3:
                    this.scene4.hide();
                    break;
                case 4:
                    this.scene5.hide();
                    break;
                case 5:
                    this.scene6.hide()
                }
            }
        }
    }
    , {
        "../canvas3d/CanvasBg": 43,
        "../canvas3d/SceneId.js": 46,
        "../util/ua": 76,
        "./BgVideo.js": 49,
        "./EventKeydown.js": 50,
        "./EventMousemove.js": 51,
        "./EventTouch.js": 53,
        "./EventWheel.js": 54,
        "./HomeNews": 55,
        "./Scene1.js": 58,
        "./Scene2.js": 59,
        "./Scene3.js": 60,
        "./Scene4.js": 61,
        "./Scene5.js": 62,
        "./Scene6.js": 63,
        "./SceneNav.js": 65,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        jquery: 5
    }],
    65: [function(t, e, i) {
        "use strict";
        function n(t, e) {
            var i = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.btnScrollChange = i(this.btnScrollChange, this),
            this.skip = t,
            this.next = e,
            this.setup()
        }
        var r = t("jquery")
          , a = t("../util/ua")
          , o = t("../canvas3d/SceneId.js")
          , s = t("gsap/src/uncompressed/TweenMax.js");
        t("gsap/src/uncompressed/plugins/CSSPlugin.js");
        e.exports = n,
        n.prototype.setup = function() {
            this.eventAttach()
        }
        ,
        n.prototype.eventAttach = function() {
            var t = this;
            r(".HomeNav-list-item").each(function(e) {
                var i = r(this)
                  , n = e;
                i.on("click", function(e) {
                    i.removeClass("over"),
                    t.skip(n)
                }).on("mouseover", function(t) {
                    a.isMobile || o.current != n && i.addClass("over")
                }).on("mouseout", function(t) {
                    a.isMobile || i.removeClass("over")
                }).on("touchstart", function(t) {
                    a.isMobile && o.current != n && i.addClass("over")
                }).on("touchend", function(t) {
                    a.isMobile && i.removeClass("over")
                }).on("touchmove", function(t) {
                    a.isMobile && !a.isIOS && i.removeClass("over")
                })
            }),
            this.btnScrollSetup()
        }
        ,
        n.prototype.eventDetach = function() {
            r(".HomeNav-list-item").off()
        }
        ,
        n.prototype.btnScrollChange = function(t) {
            "top" == t ? (r(".Home-btnScroll").removeClass("isScroll").addClass("isTop"),
            r(".Home-btnScroll-text").text("TOP")) : (r(".Home-btnScroll").removeClass("isTop").addClass("isScroll"),
            r(".Home-btnScroll-text").text("SCROLL"))
        }
        ,
        n.prototype.btnScrollSetup = function() {
            var t = this
              , e = r(".Home-btnScroll")
              , i = r(".Home-btnScroll-icon");
            e.on("click", function(e) {
                r(".Home-btnScroll").hasClass("isTop") ? t.skip(0) : t.next()
            }).on("mouseover", function(t) {
                a.isMobile || i.addClass("over")
            }).on("mouseout", function(t) {
                a.isMobile || i.removeClass("over")
            }).on("touchstart", function(t) {
                a.isMobile && i.addClass("over")
            }).on("touchend", function(t) {
                a.isMobile && i.removeClass("over")
            }).on("touchmove", function(t) {
                a.isMobile && !a.isIOS && i.removeClass("over")
            })
        }
        ,
        n.prototype.btnScrollShow = function() {
            s.to(r(".Home-btnScroll"), 1.2, {
                autoAlpha: 1,
                ease: Power3.easeInOut
            }),
            s.to(r(".Home-btnScroll-icon"), 1.2, {
                scale: 1,
                ease: Power3.easeInOut
            })
        }
        ,
        n.prototype.btnScrollHide = function(t) {
            var e = this;
            s.to(r(".Home-btnScroll"), 1.2, {
                autoAlpha: 0,
                ease: Power3.easeInOut,
                onComplete: function() {
                    e.btnScrollChange(t),
                    e.btnScrollShow()
                }
            }),
            s.to(r(".Home-btnScroll-icon"), 1.2, {
                scale: .85,
                ease: Power3.easeInOut
            })
        }
    }
    , {
        "../canvas3d/SceneId.js": 46,
        "../util/ua": 76,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        jquery: 5
    }],
    66: [function(t, e, i) {
        "use strict";
        function n(t, e) {
            this.$scene = t,
            this.id = e,
            this.textDefX = 1500,
            this.textDefY = -200,
            this.textDefZ = -2500,
            this.textDesX = -1500,
            this.textDesY = -150,
            this.textDesZ = -2500,
            this.textDuration = 2,
            this.imgDefX = 2e3,
            this.imgDefY = -800,
            this.imgDefZ = -500,
            this.imgDefRx = -30,
            this.imgDefRy = 30,
            this.imgDefRz = 0,
            this.imgDesX = -6e3,
            this.imgDesY = -800,
            this.imgDesZ = -2e3,
            this.imgDesRx = 30,
            this.imgDesRy = -30,
            this.imgDesRz = 0
        }
        var r = (t("jquery"),
        t("gsap/src/uncompressed/TweenMax.js"))
          , a = (t("gsap/src/uncompressed/plugins/CSSPlugin.js"),
        t("../vendor/gsap/SplitText.js"))
          , o = t("lodash/reverse")
          , s = (t("lodash/extend"),
        t("../canvas3d/SceneId.js"));
        e.exports = n,
        n.prototype.contSetup = function(t) {
            this.chars = [],
            this.charsRe = [],
            null != t.headlines && (this.headlines = t.headlines),
            null != t.charaOrigin && (this.charaOrigin = t.charaOrigin),
            null != t.contents && (this.contents = t.contents),
            null != t.visuals && (this.visuals = t.visuals),
            null != t.bgText && (this.bgText = t.bgText);
            for (var e = 0; e < this.headlines.length; e++) {
                var i = new a(this.headlines[e],{
                    type: "chars"
                })
                  , n = i.chars
                  , r = o(i.chars.slice());
                this.chars.push(n),
                this.charsRe.push(r),
                TweenLite.set(this.headlines[e], {
                    perspective: 1e3
                }),
                TweenLite.set(n, {
                    transformOrigin: null != this.charaOrigin ? this.charaOrigin : "50% -250%",
                    scale: 0,
                    x: this.textDefX + "px",
                    y: this.textDefY + "px",
                    z: this.textDefZ + "px",
                    rotationX: -240,
                    rotationY: 10
                })
            }
        }
        ,
        n.prototype.contShow = function(t, e) {
            var i = this
              , n = t ? i.chars : i.charsRe
              , a = t ? this.textDefX + "px" : -this.textDefX + "px"
              , o = e ? this.textDuration + .6 : this.textDuration
              , s = e ? -180 : -240;
            r.to(i.$scene, .5, {
                autoAlpha: 1,
                ease: Power0.easeNone
            });
            for (var l = 0; l < i.chars.length; l++)
                r.staggerFromTo(n[l], o, {
                    scale: 0,
                    x: a,
                    y: this.textDefY + "px",
                    z: this.textDefZ + "px",
                    rotationX: s,
                    rotationY: 10
                }, {
                    opacity: 1,
                    scale: 1,
                    x: "0px",
                    y: "0px",
                    z: "0px",
                    rotationX: 0,
                    rotationY: 0,
                    ease: Power3.easeInOut
                }, .02);
            null != i.contents && r.staggerFromTo(i.contents, 1.5, {
                y: "30px",
                opacity: 0
            }, {
                y: "0px",
                opacity: 1,
                ease: Power4.easeOut,
                delay: 1
            }, .2),
            null != i.visuals && r.staggerFromTo(i.visuals, 2.2, {
                autoAlpha: 0,
                scale: 0,
                x: this.imgDefX + "px",
                y: this.imgDefY + "px",
                z: this.imgDefZ + "px",
                rotationX: this.imgDefRx,
                rotationY: this.imgDefRy,
                rotationZ: this.imgDefRz
            }, {
                autoAlpha: 1,
                scale: 1,
                x: "0px",
                y: "0px",
                cycle: {
                    z: ["-100px", "-250px"]
                },
                rotationX: 0,
                rotationY: 0,
                rotationZ: 0,
                ease: Power3.easeInOut
            }, .2),
            null != i.bgText && (i.bgText[0].addClass("loop"),
            i.bgText[1].addClass("loop"))
        }
        ,
        n.prototype.contHide = function(t) {
            var e = this
              , i = t ? e.chars : e.charsRe
              , n = t ? this.textDesX + "px" : -this.textDesX + "px";
            r.fromTo(e.$scene, .5, {
                autoAlpha: 1
            }, {
                autoAlpha: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    s.isChange = !1
                },
                delay: 1
            });
            for (var a = 0; a < e.chars.length; a++)
                r.staggerTo(i[a], this.textDuration, {
                    opacity: 0,
                    scale: 0,
                    x: n,
                    y: this.textDesY + "px",
                    z: this.textDesZ + "px",
                    rotationX: -140,
                    rotationY: 10,
                    ease: Power4.easeInOut
                }, .02);
            null != e.contents && r.staggerTo(e.contents, 1.5, {
                y: "30px",
                opacity: 0,
                ease: Power4.easeIn
            }, .2),
            null != e.visuals && r.staggerTo(e.visuals, 2.2, {
                autoAlpha: 0,
                scale: 0,
                x: this.imgDesX + "px",
                y: this.imgDesY + "px",
                cycle: {
                    z: [this.imgDesZ - 100 + "px", this.imgDesZ - 250 + "px"]
                },
                rotationX: this.imgDesRx,
                rotationY: this.imgDesRy,
                rotationZ: this.imgDesRz,
                ease: Power3.easeIn
            }, .2),
            null != e.bgText && (e.bgText[0].removeClass("loop"),
            e.bgText[1].removeClass("loop"))
        }
    }
    , {
        "../canvas3d/SceneId.js": 46,
        "../vendor/gsap/SplitText.js": 77,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        jquery: 5,
        "lodash/extend": 23,
        "lodash/reverse": 36
    }],
    67: [function(t, e, i) {
        "use strict";
        var n = t("webfontloader")
          , r = function(t, e, i, r) {
            return n.load({
                custom: {
                    families: t,
                    urls: [document.getElementById("fontSetting").href]
                },
                active: function() {
                    return "function" == typeof r ? r() : void 0
                },
                fontactive: function(t, e) {
                    return "function" == typeof i ? i(t, e) : void 0
                }
            })
        };
        e.exports = r
    }
    , {
        webfontloader: 41
    }],
    68: [function(t, e, i) {
        "use strict";
        function n() {
            r(".Accordion").each(function() {
                function t() {
                    i.removeClass(s),
                    a.height("")
                }
                function e() {
                    i.addClass(s),
                    a.height(o.outerHeight())
                }
                var i = r(this)
                  , n = i.find(".accordionHeader")
                  , a = i.find(".accordionPanel")
                  , o = a.find(".accordionPanelContent")
                  , s = "Accordion-expanded";
                i.hasClass(s) && e(),
                n.on("click", function() {
                    i.hasClass(s) ? t() : e()
                })
            })
        }
        var r = t("jquery");
        e.exports = n
    }
    , {
        jquery: 5
    }],
    69: [function(t, e, i) {
        "use strict";
        function n() {
            var t = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.throttled = t(this.throttled, this),
            this.toggle = t(this.toggle, this),
            this.resizeHandle = o(this.throttled, 33),
            this.$nav = r("#nav"),
            this.$navItem = r(".PrimaryNav .navItem"),
            this.$btnToggle = r(".PageHeader .toggleNav"),
            this.isOpen = !1,
            this.isHome = r("body").hasClass("is-home"),
            this.init()
        }
        var r = t("jquery")
          , a = t("../util/ua")
          , o = t("lodash/throttle")
          , s = t("gsap/src/uncompressed/TweenMax.js");
        t("gsap/src/uncompressed/plugins/CSSPlugin.js");
        e.exports = n,
        n.prototype.init = function() {
            this.setup(),
            this.throttled(),
            this.attachEvent()
        }
        ,
        n.prototype.attachEvent = function() {
            this.resizeAddEvent()
        }
        ,
        n.prototype.detachEvent = function() {
            this.resizeRemoveEvent()
        }
        ,
        n.prototype.setup = function() {
            var t = this;
            r(".toggleNav").on("click", function(e) {
                t.toggle()
            }).on("mouseover", function(t) {
                a.isMobile || r(this).addClass("over")
            }).on("mouseout", function(t) {
                a.isMobile || r(this).removeClass("over")
            }).on("touchstart", function(t) {
                a.isMobile && r(this).addClass("over")
            }).on("touchend", function(t) {
                a.isMobile && r(this).removeClass("over")
            }).on("touchmove", function(t) {
                a.isMobile && !a.isIOS && r(this).removeClass("over")
            })
        }
        ,
        n.prototype.resizeAddEvent = function() {
            var t = this;
            try {
                window.addEventListener("resize", t.resizeHandle, !1)
            } catch (e) {
                window.attachEvent("onresizel", t.resizeHandle)
            }
        }
        ,
        n.prototype.resizeRemoveEvent = function() {
            var t = this;
            try {
                window.removeEventListener("resize", t.resizeHandle, !1)
            } catch (e) {
                window.detachEvent("onresizel", t.resizeHandle)
            }
        }
        ,
        n.prototype.throttled = function() {
            var t = this;
            this.isOpen && this.toggle();
            var e = r(".toggleNav").width();
            0 == e ? (s.set(t.$nav, {
                autoAlpha: 1
            }),
            s.set(t.$navItem, {
                alpha: 1
            })) : (s.set(t.$nav, {
                autoAlpha: 0
            }),
            s.set(t.$navItem, {
                alpha: 0
            }))
        }
        ,
        n.prototype.toggle = function() {
            var t = this;
            t.isOpen ? this.hide() : this.show(),
            t.isOpen = !t.isOpen
        }
        ,
        n.prototype.show = function() {
            var t = this;
            t.isHome || a.isLtAndroid5 || r("body").css({
                overflow: "hidden"
            }),
            t.$btnToggle.addClass("close"),
            a.isLtAndroid5 ? s.set([t.$nav, t.$navItem], {
                autoAlpha: 1,
                scale: 1
            }) : (s.set(t.$navItem, {
                alpha: 0,
                scale: 1.1
            }),
            s.to(t.$nav, .3, {
                autoAlpha: 1,
                ease: Power0.easeNone
            }),
            t.tw2 = s.staggerFromTo(t.$navItem, .8, {
                alpha: 0,
                scale: .8
            }, {
                alpha: 1,
                scale: 1,
                ease: Power3.easeOut
            }, .04))
        }
        ,
        n.prototype.hide = function() {
            var t = this;
            t.$btnToggle.removeClass("close"),
            a.isLtAndroid5 ? s.set([t.$nav, t.$navItem], {
                autoAlpha: 0,
                scale: 1
            }) : (s.to(t.$nav, .3, {
                autoAlpha: 0,
                ease: Power0.easeNone,
                onComplete: function() {
                    t.isHome || r("body").css({
                        overflow: "visible"
                    })
                }
            }),
            s.to(t.$navItem, .5, {
                alpha: 0,
                scale: .8,
                ease: Power3.easeIn,
                onComplete: function() {
                    t.isHome || r("body").css({
                        overflow: "visible"
                    }),
                    s.set(t.$navItem, {
                        alpha: 1,
                        scale: 1
                    })
                }
            }))
        }
    }
    , {
        "../util/ua": 76,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        jquery: 5,
        "lodash/throttle": 37
    }],
    70: [function(t, e, i) {
        "use strict";
        function n() {
            this.$links = r(".backToTopLink"),
            this.init()
        }
        var r = t("jquery")
          , a = t("../util/ua")
          , o = (t("lodash/throttle"),
        t("gsap/src/uncompressed/TweenMax.js"));
        t("gsap/src/uncompressed/plugins/CSSPlugin.js"),
        t("gsap/src/uncompressed/plugins/ScrollToPlugin.js");
        e.exports = n,
        n.prototype.init = function() {
            this.$links.on("click", function(t) {
                t.preventDefault(),
                r(this).removeClass("over"),
                o.to(window, .8, {
                    scrollTo: {
                        y: 0,
                        autoKill: !1
                    },
                    ease: Power3.easeInOut
                })
            }).on("mouseover", function(t) {
                a.isMobile || r(this).addClass("over")
            }).on("mouseout", function(t) {
                a.isMobile || r(this).removeClass("over")
            }).on("touchstart", function(t) {
                a.isMobile && r(this).addClass("over")
            }).on("touchend", function(t) {
                a.isMobile && r(this).removeClass("over")
            }).on("touchmove", function(t) {
                a.isMobile && !a.isIOS && r(this).removeClass("over")
            })
        }
    }
    , {
        "../util/ua": 76,
        "gsap/src/uncompressed/TweenMax.js": 2,
        "gsap/src/uncompressed/plugins/CSSPlugin.js": 3,
        "gsap/src/uncompressed/plugins/ScrollToPlugin.js": 4,
        jquery: 5,
        "lodash/throttle": 37
    }],
    71: [function(t, e, i) {
        "use strict";
        function n() {
            r("[data-toggle-disabled]").each(function() {
                function t() {
                    i.prop("disabled", !e.prop("checked"))
                }
                var e = r(this)
                  , i = r("#" + e.attr("data-controls"));
                t(),
                e.on("click", t)
            })
        }
        var r = t("jquery");
        e.exports = n
    }
    , {
        jquery: 5
    }],
    72: [function(t, e, i) {
        "use strict";
        function n() {
            var t = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.throttled = t(this.throttled, this),
            this.scrollHandle = a(this.throttled, 125),
            this.collapsedClass = "PageHeader-collapsed",
            this.$header = r("#header"),
            this.isCollapsed = !1,
            this.init()
        }
        var r = t("jquery")
          , a = t("lodash/throttle");
        e.exports = n,
        n.prototype.init = function() {
            this.throttled(),
            this.attachEvent()
        }
        ,
        n.prototype.attachEvent = function() {
            this.scrollAddEvent()
        }
        ,
        n.prototype.detachEvent = function() {
            this.scrollRemoveEvent()
        }
        ,
        n.prototype.toggleClass = function(t) {
            !this.isCollapsed && t > 100 && (this.isCollapsed = !0,
            this.$header.addClass(this.collapsedClass)),
            this.isCollapsed && t < 100 && (this.isCollapsed = !1,
            this.$header.removeClass(this.collapsedClass))
        }
        ,
        n.prototype.scrollAddEvent = function() {
            var t = this;
            try {
                window.addEventListener("scroll", t.scrollHandle, !1)
            } catch (e) {
                window.attachEvent("onscroll", t.scrollHandle)
            }
        }
        ,
        n.prototype.scrollRemoveEvent = function() {
            var t = this;
            try {
                window.removeEventListener("scroll", t.scrollHandle, !1)
            } catch (e) {
                window.detachEvent("onscroll", t.scrollHandle)
            }
        }
        ,
        n.prototype.throttled = function() {
            var t = document.documentElement.scrollTop || document.body.scrollTop;
            this.toggleClass(t)
        }
    }
    , {
        jquery: 5,
        "lodash/throttle": 37
    }],
    73: [function(t, e, i) {
        "use strict";
        function n() {
            var t = this;
            if (this.nav = new a,
            this.backToTop = new o,
            this.toggleHeader = new s,
            this.toggleDisabled = new l,
            r("form").on("submit", function(e) {
                return r("#formError").find("p").empty(),
                r(".textInputError").text(""),
                r(".textInput").removeClass("hasError"),
                t.validate(t, e)
            }),
            r(".CategoryHeader-canvas .canvasBlock")[0]) {
                var e = new h;
                e.setup()
            }
        }
        var r = t("jquery")
          , a = t("../module/Nav")
          , o = t("../module/BackToTop")
          , s = t("../module/ToggleHeader")
          , l = t("../module/ToggleDisabled")
          , h = t("../canvas3d/SceneManagerWaveOnly");
        e.exports = n,
        n.prototype.validate = function(t, e) {
            return r("#givenname").val() || (r("#givenname").addClass("hasError"),
            r("#givenname").prev(".textInputError").text("名を入力してください。"),
            r("#familyname").prev(".textInputError").html("&nbsp;")),
            r("#familyname").val() || (r("#familyname").addClass("hasError"),
            r("#familyname").prev(".textInputError").text("姓を入力してください。")),
            !r("#familyname").val() && r("#givenname").val() && r("#givenname").prev(".textInputError").html("&nbsp;"),
            !r("#givenname").val() && r("#familyname").val() && r("#familyname").prev(".textInputError").html("&nbsp;"),
            r("#email").val() || (r("#email").addClass("hasError"),
            r("#email").prev(".textInputError").text("メールアドレスを入力してください。")),
            r("#email").val() && !t.isEmail(r("#email").val()) && (r("#email").addClass("hasError"),
            r("#email").prev(".textInputError").text("メールアドレスが正しくありません。")),
            r("#tel").val() || (r("#tel").addClass("hasError"),
            r("#tel").prev(".textInputError").text("電話番号を入力してください。")),
            r("#tel").val() && !t.isNumber(r("#tel").val()) && (r("#tel").addClass("hasError"),
            r("#tel").prev(".textInputError").text("半角数字で入力してください。")),
            !(r("form").find(".hasError").length > 0) && (r.ajax({
                url: "../php/index.php",
                type: "POST",
                data: {
                    params: {
                        employment: r("input[name=employment]:checked", "#EntryForm").val(),
                        familyname: r("#familyname").val(),
                        givenname: r("#givenname").val(),
                        familyname_kana: r("#familyname-kana").val(),
                        givenname_kana: r("#givenname-kana").val(),
                        email: r("#email").val(),
                        tel: r("#tel").val()
                    }
                }
            }).done(function(t) {
                "success" == JSON.parse(t) && (r("#submit").replaceWith("<p class='notification-main'>応募が完了いたしました。</p><p class='notification-text Paragraph-center'>ご応募ありがとうございました。<br>ご記入いただいたメールアドレスに、メールをお送りしておりますので<br>ご確認お願いいたします。</p>"),
                r("#familyname").val(""),
                r("#givenname").val(""),
                r("#email").val(""),
                r("#tel").val(""),
                r("#agree").prop("checked", !1),
                r(".formRow-disclaimer").html(""))
            }).fail(function() {}),
            void e.preventDefault())
        }
        ,
        n.prototype.isEmail = function(t) {
            var e = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return e.test(t)
        }
        ,
        n.prototype.isKana = function(t) {
            return !!t.match(/^[^ -~｡-ﾟ]*$/)
        }
        ,
        n.prototype.isAlphaNumeric = function(t) {
            return !t.match(/[^A-Za-z0-9]+/)
        }
        ,
        n.prototype.isNumber = function(t) {
            return !t.match(/[^0-9]+/)
        }
    }
    , {
        "../canvas3d/SceneManagerWaveOnly": 48,
        "../module/BackToTop": 70,
        "../module/Nav": 69,
        "../module/ToggleDisabled": 71,
        "../module/ToggleHeader": 72,
        jquery: 5
    }],
    74: [function(t, e, i) {
        "use strict";
        function n() {
            var t = function(t, e) {
                return function() {
                    return t.apply(e, arguments)
                }
            };
            this.onLoad = t(this.onLoad, this),
            this.onReady = t(this.onReady, this),
            this.loading = new o(this.onLoad,this.onReady),
            this.nav = new l,
            this.init()
        }
        var r = t("jquery")
          , a = t("../util/ua.js")
          , o = t("../home/Loading.js")
          , s = t("../home/SceneManager")
          , l = t("../module/Nav");
        e.exports = n,
        n.prototype.init = function() {
            a.isMobile && r("#scene4 .HomeScene-visual-inner-cont img").each(function(t) {
                var e = t + 1;
                r(this).attr("src", "./assets/img/home/bg-people-mob-" + e + ".jpg")
            }),
            this.loading.init()
        }
        ,
        n.prototype.onLoad = function() {
            var t = new s;
            t.setup()
        }
        ,
        n.prototype.onReady = function() {}
    }
    , {
        "../home/Loading.js": 56,
        "../home/SceneManager": 64,
        "../module/Nav": 69,
        "../util/ua.js": 76,
        jquery: 5
    }],
    75: [function(t, e, i) {
        "use strict";
        function n() {
            if (a.isIE && r("body").addClass("is-IE"),
            a.isEdge && r("body").addClass("is-Edge"),
            a.isLtAndroid5 && r("body").addClass("is-ltAndroid5"),
            this.nav = new o,
            this.accordion = new s,
            this.backToTop = new l,
            this.toggleHeader = new h,
            r(".CategoryHeader-canvas .canvasBlock")[0]) {
                var t = new c;
                t.setup()
            }
            if (r(".JobLinkSection .canvasBlock")[0]) {
                var e = new u;
                e.setup()
            }
        }
        var r = t("jquery")
          , a = t("../util/ua")
          , o = t("../module/Nav")
          , s = t("../module/Accordion")
          , l = t("../module/BackToTop")
          , h = t("../module/ToggleHeader")
          , c = t("../canvas3d/SceneManagerWaveOnly")
          , u = t("../canvas3d/SceneManagerCircleOnly");
        e.exports = n
    }
    , {
        "../canvas3d/SceneManagerCircleOnly": 47,
        "../canvas3d/SceneManagerWaveOnly": 48,
        "../module/Accordion": 68,
        "../module/BackToTop": 70,
        "../module/Nav": 69,
        "../module/ToggleHeader": 72,
        "../util/ua": 76,
        jquery: 5
    }],
    76: [function(t, e, i) {
        "use strict";
        var n = function() {
            var t = navigator.userAgent.toLowerCase()
              , e = navigator.appVersion.toLowerCase()
              , i = navigator.platform.toLowerCase()
              , n = {
                isLtIE11: !1,
                isIE: !1,
                isIE6: !1,
                isIE7: !1,
                isIE8: !1,
                isIE9: !1,
                isIE10: !1,
                isIE11: !1,
                isEdge: !1,
                isChrome: !1,
                isSafari: !1,
                isFirefox: !1,
                isOpera: !1,
                isCriOS: !1,
                isIPhone: !1,
                isIPad: !1,
                isIPod: !1,
                isAndroidMobile: !1,
                isAndroidTablet: !1,
                isLtAndroid5: !1,
                isWin: !1,
                isMac: !1,
                isIOS: !1,
                isMobile: !1,
                browser: t
            };
            n.isLtIE11 = t.indexOf("msie") > -1 && t.indexOf("opera") == -1,
            n.isIE6 = n.isLtIE11 && e.indexOf("msie 6.") > -1,
            n.isIE7 = n.isLtIE11 && e.indexOf("msie 7.") > -1,
            n.isIE8 = n.isLtIE11 && e.indexOf("msie 8.") > -1,
            n.isIE9 = n.isLtIE11 && e.indexOf("msie 9.") > -1,
            n.isIE10 = n.isLtIE11 && e.indexOf("msie 10.") > -1,
            n.isIE11 = t.indexOf("trident/7") > -1,
            n.isIE = n.isLtIE11 || n.isIE11,
            n.isEdge = t.indexOf("edge") > -1,
            n.isChrome = t.indexOf("chrome") > -1 && t.indexOf("edge") == -1,
            n.isCriOS = t.indexOf("crios") > -1,
            n.isFirefox = t.indexOf("firefox") > -1,
            n.isSafari = t.indexOf("safari") > -1 && t.indexOf("chrome") == -1,
            n.isOpera = t.indexOf("opera") > -1,
            n.isIPhone = t.indexOf("iphone") > -1,
            n.isIPad = t.indexOf("ipad") > -1,
            n.isIPod = t.indexOf("ipod") > -1,
            n.isIOS = n.isIPhone || n.isIPad || n.isIPod,
            n.isWin = i.indexOf("win") > -1,
            n.isMac = i.indexOf("mac") > -1;
            var r = function() {
                var t = navigator.userAgent;
                if (t.indexOf("Android") > 0) {
                    var e = parseFloat(t.slice(t.indexOf("Android") + 8));
                    return e
                }
            };
            return r() >= 5 ? n.isLtAndroid5 = !1 : r() && (n.isLtAndroid5 = !0),
            n.isAndroidMobile = t.indexOf("android") > -1 && t.indexOf("mobile") > -1,
            n.isAndroidTablet = t.indexOf("android") > -1 && t.indexOf("mobile") == -1,
            n.isMobile = n.isIPhone || n.isIPad || n.isIPod || n.isAndroidMobile || n.isAndroidTablet,
            n
        };
        e.exports = n()
    }
    , {}],
    77: [function(t, e, i) {
        (function(t) {
            /*!
 * VERSION: 0.3.5
 * DATE: 2016-05-24
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * SplitText is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://www.greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
            var i = "undefined" != typeof e && e.exports && "undefined" != typeof t ? t : this || window;
            !function(t) {
                "use strict";
                var e = t.GreenSockGlobals || t
                  , i = function(t) {
                    var i, n = t.split("."), r = e;
                    for (i = 0; i < n.length; i++)
                        r[n[i]] = r = r[n[i]] || {};
                    return r
                }
                  , n = i("com.greensock.utils")
                  , r = function(t) {
                    var e = t.nodeType
                      , i = "";
                    if (1 === e || 9 === e || 11 === e) {
                        if ("string" == typeof t.textContent)
                            return t.textContent;
                        for (t = t.firstChild; t; t = t.nextSibling)
                            i += r(t)
                    } else if (3 === e || 4 === e)
                        return t.nodeValue;
                    return i
                }
                  , a = document
                  , o = a.defaultView ? a.defaultView.getComputedStyle : function() {}
                  , s = /([A-Z])/g
                  , l = function(t, e, i, n) {
                    var r;
                    return (i = i || o(t, null)) ? (t = i.getPropertyValue(e.replace(s, "-$1").toLowerCase()),
                    r = t || i.length ? t : i[e]) : t.currentStyle && (i = t.currentStyle,
                    r = i[e]),
                    n ? r : parseInt(r, 10) || 0
                }
                  , h = function(t) {
                    return !!(t.length && t[0] && (t[0].nodeType && t[0].style && !t.nodeType || t[0].length && t[0][0]))
                }
                  , c = function(t) {
                    var e, i, n, r = [], a = t.length;
                    for (e = 0; e < a; e++)
                        if (i = t[e],
                        h(i))
                            for (n = i.length,
                            n = 0; n < i.length; n++)
                                r.push(i[n]);
                        else
                            r.push(i);
                    return r
                }
                  , u = /(?:\r|\n|\s\s|\t\t)/g
                  , p = ")eefec303079ad17405c"
                  , f = /(?:<br>|<br\/>|<br \/>)/gi
                  , d = a.all && !a.addEventListener
                  , m = "<span style='position:relative;display:inline-block;" + (d ? "*display:inline;*zoom:1;'" : "'")
                  , g = function(t) {
                    t = t || "";
                    var e = t.indexOf("++") !== -1
                      , i = 1;
                    return e && (t = t.split("++").join("")),
                    function() {
                        return m + (t ? " class='" + t + (e ? i++ : "") + "'>" : ">")
                    }
                }
                  , v = n.SplitText = e.SplitText = function(t, e) {
                    if ("string" == typeof t && (t = v.selector(t)),
                    !t)
                        throw "cannot split a null element.";
                    this.elements = h(t) ? c(t) : [t],
                    this.chars = [],
                    this.words = [],
                    this.lines = [],
                    this._originals = [],
                    this.vars = e || {},
                    this.split(e)
                }
                  , y = function(t, e, i) {
                    var n = t.nodeType;
                    if (1 === n || 9 === n || 11 === n)
                        for (t = t.firstChild; t; t = t.nextSibling)
                            y(t, e, i);
                    else
                        3 !== n && 4 !== n || (t.nodeValue = t.nodeValue.split(e).join(i))
                }
                  , _ = function(t, e) {
                    for (var i = e.length; --i > -1; )
                        t.push(e[i])
                }
                  , x = function(t, e, i, n, s) {
                    f.test(t.innerHTML) && (t.innerHTML = t.innerHTML.replace(f, p));
                    var h, c, d, m, v, x, b, w, M, T, S, C, A, P, E = r(t), L = e.type || e.split || "chars,words,lines", O = L.indexOf("lines") !== -1 ? [] : null, R = L.indexOf("words") !== -1, D = L.indexOf("chars") !== -1, I = "absolute" === e.position || e.absolute === !0, k = I ? "&#173; " : " ", N = -999, F = o(t), B = l(t, "paddingLeft", F), U = l(t, "borderBottomWidth", F) + l(t, "borderTopWidth", F), z = l(t, "borderLeftWidth", F) + l(t, "borderRightWidth", F), j = l(t, "paddingTop", F) + l(t, "paddingBottom", F), V = l(t, "paddingLeft", F) + l(t, "paddingRight", F), G = l(t, "textAlign", F, !0), H = t.clientHeight, W = t.clientWidth, X = "</span>", q = g(e.wordsClass), Y = g(e.charsClass), Z = (e.linesClass || "").indexOf("++") !== -1, $ = e.linesClass, K = E.indexOf("<") !== -1, Q = !0, J = [], tt = [], et = [];
                    for (!e.reduceWhiteSpace != !1 && (E = E.replace(u, "")),
                    Z && ($ = $.split("++").join("")),
                    K && (E = E.split("<").join("{{LT}}")),
                    h = E.length,
                    m = q(),
                    v = 0; v < h; v++)
                        if (b = E.charAt(v),
                        ")" === b && E.substr(v, 20) === p)
                            m += (Q ? X : "") + "<BR/>",
                            Q = !1,
                            v !== h - 20 && E.substr(v + 20, 20) !== p && (m += " " + q(),
                            Q = !0),
                            v += 19;
                        else if (" " === b && " " !== E.charAt(v - 1) && v !== h - 1 && E.substr(v - 20, 20) !== p) {
                            for (m += Q ? X : "",
                            Q = !1; " " === E.charAt(v + 1); )
                                m += k,
                                v++;
                            ")" === E.charAt(v + 1) && E.substr(v + 1, 20) === p || (m += k + q(),
                            Q = !0)
                        } else
                            "{" === b && "{{LT}}" === E.substr(v, 6) ? (m += D ? Y() + "{{LT}}</span>" : "{{LT}}",
                            v += 5) : m += D && " " !== b ? Y() + b + "</span>" : b;
                    for (t.innerHTML = m + (Q ? X : ""),
                    K && y(t, "{{LT}}", "<"),
                    x = t.getElementsByTagName("*"),
                    h = x.length,
                    w = [],
                    v = 0; v < h; v++)
                        w[v] = x[v];
                    if (O || I)
                        for (v = 0; v < h; v++)
                            M = w[v],
                            d = M.parentNode === t,
                            (d || I || D && !R) && (T = M.offsetTop,
                            O && d && T !== N && "BR" !== M.nodeName && (c = [],
                            O.push(c),
                            N = T),
                            I && (M._x = M.offsetLeft,
                            M._y = T,
                            M._w = M.offsetWidth,
                            M._h = M.offsetHeight),
                            O && (R !== d && D || (c.push(M),
                            M._x -= B),
                            d && v && (w[v - 1]._wordEnd = !0),
                            "BR" === M.nodeName && M.nextSibling && "BR" === M.nextSibling.nodeName && O.push([])));
                    for (v = 0; v < h; v++)
                        M = w[v],
                        d = M.parentNode === t,
                        "BR" !== M.nodeName ? (I && (C = M.style,
                        R || d || (M._x += M.parentNode._x,
                        M._y += M.parentNode._y),
                        C.left = M._x + "px",
                        C.top = M._y + "px",
                        C.position = "absolute",
                        C.display = "block",
                        C.width = M._w + 1 + "px",
                        C.height = M._h + "px"),
                        R ? d && "" !== M.innerHTML ? tt.push(M) : D && J.push(M) : d ? (t.removeChild(M),
                        w.splice(v--, 1),
                        h--) : !d && D && (T = !O && !I && M.nextSibling,
                        t.appendChild(M),
                        T || t.appendChild(a.createTextNode(" ")),
                        J.push(M))) : O || I ? (t.removeChild(M),
                        w.splice(v--, 1),
                        h--) : R || t.appendChild(M);
                    if (O) {
                        for (I && (S = a.createElement("span"),
                        t.appendChild(S),
                        A = S.offsetWidth + "px",
                        T = S.offsetParent === t ? 0 : t.offsetLeft,
                        t.removeChild(S)),
                        C = t.style.cssText,
                        t.style.cssText = "display:none;"; t.firstChild; )
                            t.removeChild(t.firstChild);
                        for (P = !I || !R && !D,
                        v = 0; v < O.length; v++) {
                            for (c = O[v],
                            S = a.createElement("span"),
                            S.style.cssText = "display:block;text-align:" + G + ";position:" + (I ? "absolute;" : "relative;"),
                            $ && (S.className = $ + (Z ? v + 1 : "")),
                            et.push(S),
                            h = c.length,
                            x = 0; x < h; x++)
                                "BR" !== c[x].nodeName && (M = c[x],
                                S.appendChild(M),
                                P && (M._wordEnd || R) && S.appendChild(a.createTextNode(" ")),
                                I && (0 === x && (S.style.top = M._y + "px",
                                S.style.left = B + T + "px"),
                                M.style.top = "0px",
                                T && (M.style.left = M._x - T + "px")));
                            0 === h && (S.innerHTML = "&nbsp;"),
                            R || D || (S.innerHTML = r(S).split(String.fromCharCode(160)).join(" ")),
                            I && (S.style.width = A,
                            S.style.height = M._h + "px"),
                            t.appendChild(S)
                        }
                        t.style.cssText = C
                    }
                    I && (H > t.clientHeight && (t.style.height = H - j + "px",
                    t.clientHeight < H && (t.style.height = H + U + "px")),
                    W > t.clientWidth && (t.style.width = W - V + "px",
                    t.clientWidth < W && (t.style.width = W + z + "px"))),
                    _(i, J),
                    _(n, tt),
                    _(s, et)
                }
                  , b = v.prototype;
                b.split = function(t) {
                    this.isSplit && this.revert(),
                    this.vars = t || this.vars,
                    this._originals.length = this.chars.length = this.words.length = this.lines.length = 0;
                    for (var e = this.elements.length; --e > -1; )
                        this._originals[e] = this.elements[e].innerHTML,
                        x(this.elements[e], this.vars, this.chars, this.words, this.lines);
                    return this.chars.reverse(),
                    this.words.reverse(),
                    this.lines.reverse(),
                    this.isSplit = !0,
                    this
                }
                ,
                b.revert = function() {
                    if (!this._originals)
                        throw "revert() call wasn't scoped properly.";
                    for (var t = this._originals.length; --t > -1; )
                        this.elements[t].innerHTML = this._originals[t];
                    return this.chars = [],
                    this.words = [],
                    this.lines = [],
                    this.isSplit = !1,
                    this
                }
                ,
                v.selector = t.$ || t.jQuery || function(e) {
                    var i = t.$ || t.jQuery;
                    return i ? (v.selector = i,
                    i(e)) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e)
                }
                ,
                v.version = "0.3.5"
            }(i),
            function(t) {
                "use strict";
                var n = function() {
                    return (i.GreenSockGlobals || i)[t]
                };
                "function" == typeof define && define.amd ? define([], n) : "undefined" != typeof e && e.exports && (e.exports = n())
            }("SplitText")
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    78: [function(t, e, i) {
        var n = function() {
            function t(t) {
                return r.appendChild(t.dom),
                t
            }
            function e(t) {
                for (var e = 0; e < r.children.length; e++)
                    r.children[e].style.display = e === t ? "block" : "none";
                i = t
            }
            var i = 0
              , r = document.createElement("div");
            r.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",
            r.addEventListener("click", function(t) {
                t.preventDefault(),
                e(++i % r.children.length)
            }, !1);
            var a = (performance || Date).now()
              , o = a
              , s = 0
              , l = t(new n.Panel("FPS","#0ff","#002"))
              , h = t(new n.Panel("MS","#0f0","#020"));
            if (self.performance && self.performance.memory)
                var c = t(new n.Panel("MB","#f08","#201"));
            return e(0),
            {
                REVISION: 16,
                dom: r,
                addPanel: t,
                showPanel: e,
                begin: function() {
                    a = (performance || Date).now()
                },
                end: function() {
                    s++;
                    var t = (performance || Date).now();
                    if (h.update(t - a, 200),
                    t > o + 1e3 && (l.update(1e3 * s / (t - o), 100),
                    o = t,
                    s = 0,
                    c)) {
                        var e = performance.memory;
                        c.update(e.usedJSHeapSize / 1048576, e.jsHeapSizeLimit / 1048576)
                    }
                    return t
                },
                update: function() {
                    a = this.end()
                },
                domElement: r,
                setMode: e
            }
        };
        n.Panel = function(t, e, i) {
            var n = 1 / 0
              , r = 0
              , a = Math.round
              , o = a(window.devicePixelRatio || 1)
              , s = 80 * o
              , l = 48 * o
              , h = 3 * o
              , c = 2 * o
              , u = 3 * o
              , p = 15 * o
              , f = 74 * o
              , d = 30 * o
              , m = document.createElement("canvas");
            m.width = s,
            m.height = l,
            m.style.cssText = "width:80px;height:48px";
            var g = m.getContext("2d");
            return g.font = "bold " + 9 * o + "px Helvetica,Arial,sans-serif",
            g.textBaseline = "top",
            g.fillStyle = i,
            g.fillRect(0, 0, s, l),
            g.fillStyle = e,
            g.fillText(t, h, c),
            g.fillRect(u, p, f, d),
            g.fillStyle = i,
            g.globalAlpha = .9,
            g.fillRect(u, p, f, d),
            {
                dom: m,
                update: function(l, v) {
                    n = Math.min(n, l),
                    r = Math.max(r, l),
                    g.fillStyle = i,
                    g.globalAlpha = 1,
                    g.fillRect(0, 0, s, p),
                    g.fillStyle = e,
                    g.fillText(a(l) + " " + t + " (" + a(n) + "-" + a(r) + ")", h, c),
                    g.drawImage(m, u + o, p, f - o, d, u, p, f - o, d),
                    g.fillRect(u + f - o, p, o, d),
                    g.fillStyle = i,
                    g.globalAlpha = .9,
                    g.fillRect(u + f - o, p, o, a((1 - l / v) * d))
                }
            }
        }
        ,
        "object" == typeof e && (e.exports = n)
    }
    , {}]
}, {}, [42]);
